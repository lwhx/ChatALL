{"version":3,"file":"js/app.9485f213.js","mappings":"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","sources":["webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PhindBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/google/BardBot.js","webpack://chatall/./src/bots/google/GeminiBot.js","webpack://chatall/./src/bots/huggingface/Falcon180bBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4128KBot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT432kPoeBot.js","webpack://chatall/./src/bots/poe/Llama270bPoeBot.js","webpack://chatall/./src/bots/poe/GooglePalm2PoeBot.js","webpack://chatall/./src/bots/poe/CodeLlama34bPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/lmsys/Llama213bBot.js","webpack://chatall/./src/bots/lmsys/Llama27bBot.js","webpack://chatall/./src/bots/lmsys/Llama270bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM6bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM36bBot.js","webpack://chatall/./src/bots/lmsys/CodeLlamaBot.js","webpack://chatall/./src/bots/lmsys/Vicuna7bBot.js","webpack://chatall/./src/bots/lmsys/Vicuna13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm70bBot.js","webpack://chatall/./src/bots/huggingface/FalconHC180bBot.js","webpack://chatall/./src/bots/huggingface/CodeLlamaHCBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfan4Bot.js","webpack://chatall/./src/bots/huggingface/Zephyr7bBot.js","webpack://chatall/./src/bots/google/GeminiAdvBot.js","webpack://chatall/./src/bots/lmsys/Gemma7bItBot.js","webpack://chatall/./src/bots/lmsys/Gemma2bItBot.js","webpack://chatall/./src/bots/lmsys/Claude3SonnetBot.js","webpack://chatall/./src/bots/lmsys/Claude3OpusBot.js","webpack://chatall/./src/bots/zhipu/ChatGLM4Bot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/bots/zhipu/ChatGLMBot.js","webpack://chatall/./src/components/BotSettings/settings.const.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/chats.js","webpack://chatall/./src/store/db.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/store/messages.js","webpack://chatall/./src/store/migration.js","webpack://chatall/./src/store/queue.js","webpack://chatall/./src/store/threads.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/helpers/scroll-helper.js","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/helpers/template-helper.js","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/components/ChatAction.vue","webpack://chatall/./src/components/ChatAction.vue?8a01","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue?c779","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue?a367","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue?f1d7","webpack://chatall/./src/components/BotSettings/GeminiBotSettings.vue","webpack://chatall/./src/components/BotSettings/GeminiBotSettings.vue?0d66","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue?8114","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/create fake namespace object","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/get javascript chunk filename","webpack://chatall/webpack/runtime/get mini-css chunk filename","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/load script","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import i18n from \"@/i18n\";\nimport store from \"@/store\";\nimport Chats from \"@/store/chats\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  disabled = false; // True if the bot is permanently disabled\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    const prefix = this.isDisabled()\n      ? `(${i18n.global.t(\"bot.disabled\")}) `\n      : \"\";\n    if (this.getModelName())\n      return prefix + `${this.getModelName()}@${this.getBrandName()}`;\n    else return prefix + this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  isDisabled() {\n    return this.disabled;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      let message;\n      if (err instanceof LoginError) {\n        message = `${err.message}\\n${i18n.global.t(\"error.requireLogin\", {\n          link: this.getLoginHyperlink(),\n        })}`;\n      } else {\n        message = err;\n      }\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(message),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  async checkAvailability() {\n    if (this.isDisabled()) return false;\n    this.constructor._isAvailable = await this._checkAvailability();\n    return this.isAvailable();\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return false;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = (await Chats.getCurrentChat())?.contexts?.[\n      this.getClassname()\n    ];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n\nexport class LoginError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"LoginError\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return false;\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return false;\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return false;\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeAi.org) {\n      const currentAcountResponse = await axios.get(\n        \"https://claude.ai/api/auth/current_account\",\n      );\n\n      if (currentAcountResponse.data.success) {\n        available = true;\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const url = `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations/${context.uuid}/completion`;\n    const payload = JSON.stringify({\n      attachments: [],\n      files: [],\n      prompt: prompt,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(url, {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"completion\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { BufferMemory } from \"langchain/memory\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    let bufferMemory = new BufferMemory();\n\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages.forEach((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (\n        storedMessage.type.toLowerCase() ===\n        bufferMemory.humanPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addUserMessage(storedMessage.data);\n      } else if (\n        storedMessage.type.toLowerCase() === bufferMemory.aiPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addAIChatMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        bufferMemory.chatHistory.addMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    await bufferMemory.chatHistory.addUserMessage(prompt);\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    messages = await bufferMemory.chatHistory.getMessages();\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    await bufferMemory.chatHistory.addAIChatMessage(res);\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  setupModel() {\n    this.constructor._chatModel = this._setupModel();\n  }\n\n  _setupModel() {\n    throw new Error(\n      \"Abstract property '_setupModel' must be implemented in the subclass.\",\n    );\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async _checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n    let available = false;\n\n    if (token) {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then(() => {\n          available = true;\n        });\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            available = true;\n            break;\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n      });\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default class PhindBot extends Bot {\n  static _brandId = \"phind\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PhindBot\"; // Class name of the bot\n  static _logoFilename = \"phind-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://www.phind.com\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const context = await this.getChatContext();\n      const rewrite = await axios.post(\n        \"https://www.phind.com/api/infer/followup/rewrite\",\n        {\n          questionToRewrite: prompt,\n          questionHistory: context.questionHistory,\n          answerHistory: context.answerHistory,\n        },\n      );\n      const search = await axios.post(\"https://www.phind.com/api/web/search\", {\n        q: rewrite.data.query,\n        browserLanguage: \"en-GB\",\n        userSearchRules: {},\n      });\n\n      const date = new Date();\n      const formatDate = this.getFormattedDate(date);\n      const payload = JSON.stringify({\n        questionHistory: context.questionHistory,\n        answerHistory: context.answerHistory,\n        question: prompt,\n        webResults: search.data,\n        options: {\n          date: formatDate,\n          language: \"en-GB\",\n          detailed: true,\n          anonUserId: await this.getUUID(),\n          answerModel: store.state.phind.model,\n          customLinks: [],\n        },\n        context: \"\",\n      });\n\n      return new Promise((resolve, reject) => {\n        try {\n          const source = new SSE(\"https://www.phind.com/api/infer/answer\", {\n            start: false,\n            payload,\n          });\n          let text = \"\";\n          let isSuccess = false;\n          source.addEventListener(\"message\", (event) => {\n            if (event.data) {\n              if (event.data.startsWith(\"<PHIND_METADATA>\")) {\n                isSuccess = true;\n              } else {\n                text += event.data;\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            }\n          });\n\n          source.addEventListener(\"readystatechange\", (event) => {\n            if (event.readyState === source.CLOSED) {\n              // after stream closed, done\n              if (isSuccess) {\n                // save answerHistory and questionHistory to context\n                this.setChatContext({\n                  answerHistory: [...context.answerHistory, text],\n                  questionHistory: [...context.questionHistory, prompt],\n                });\n\n                // replace link with hostname\n                if (search.data && search.data.length) {\n                  for (let i = 0; i < search.data.length; i++) {\n                    const hostname = new URL(search.data[i].url).hostname;\n                    text = text.replaceAll(`[Source${i}]`, `[${hostname}]`);\n                    text = text.replaceAll(\n                      `[^${i}^]`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                    text = text.replaceAll(\n                      `^${i}^`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                  }\n                }\n              }\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: true,\n              });\n              resolve();\n            }\n          });\n          source.addEventListener(\"error\", (event) => {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          });\n\n          // override default _onStreamProgress to fix missing new line in response due to trimming\n          source._onStreamProgress = function (e) {\n            if (!source.xhr) {\n              return;\n            }\n\n            if (source.xhr.status !== 200) {\n              source._onStreamFailure(e);\n              return;\n            }\n\n            if (source.readyState == source.CONNECTING) {\n              source.dispatchEvent(new CustomEvent(\"open\"));\n              source._setReadyState(source.OPEN);\n            }\n\n            var data = source.xhr.responseText.substring(source.progress);\n\n            source.progress += data.length;\n            var parts = (source.chunk + data).split(/\\r\\n\\r\\n/);\n            var lastPart = parts.pop();\n            for (let part of parts) {\n              // skip if data is empty\n              if (part === \"data: \") {\n                continue;\n              }\n\n              // newline\n              if (part === \"data: \\r\\ndata: \") {\n                let event = new CustomEvent(\"message\");\n                event.data = \"\\n\";\n                source.dispatchEvent(event);\n                continue;\n              }\n\n              const event = source._parseEventChunk(part);\n              source.dispatchEvent(event);\n            }\n            source.chunk = lastPart;\n          };\n          source.stream();\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } catch (error) {\n      if (error.request.status === 403) {\n        throw new Error(\n          `${error.request.status} ${error.request.responseText}`,\n        );\n      } else {\n        console.error(\"Error PhindBot _sendPrompt:\", error);\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { answerHistory: [], questionHistory: [] };\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  async getUUID() {\n    const cookies = await ipcRenderer.invoke(\"get-cookies\", {\n      domain: \"www.phind.com\",\n    });\n    const uuidCookie = cookies.find((cookie) => cookie.name === \"uuid\");\n    return uuidCookie ? uuidCookie.value : \"\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        available = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      if (context.exception) {\n        reject(\n          new Error(\n            `${context.exception?.errorCode} ${context.exception?.errorMsg}`,\n          ),\n        );\n        return;\n      }\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        {\n          firstQuery: \"ChatALL\",\n          sessionType: \"text_chat\",\n        }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        } else if (resp.data) {\n          context = {\n            exception: resp.data,\n          };\n          console.error(\n            \"Error QianWen adding sesion resp:\",\n            JSON.stringify(resp.data),\n          );\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        available = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://chat.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const { data } = await axios.post(\n        \"https://api-chat.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        available = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://api-chat.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          available = true;\n        }\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://api-chat.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://api-chat.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://api-chat.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      available = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n    }\n    return available;\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt-chat/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"@langchain/community/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    const chatModel = new ChatBaiduWenxin({\n      modelName: this.constructor._model,\n      baiduApiKey: apiKey,\n      baiduSecretKey: secretKey,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import axios from \"axios\";\nimport Bot from \"../Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nfunction generateReq(model, prompt, contextIds) {\n  let modelNumber = model == \"gemini-ultra\" ? 2 : 1;\n  // The JSON is ugly and meaningless, but it works\n  let innerJSON = [\n    [prompt, 0, null, null, null, null, 0],\n    [\"en\"],\n    contextIds,\n    \"\",\n    \"\",\n    null,\n    [1],\n    0,\n    null,\n    null,\n    1,\n    0,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    modelNumber,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    [],\n  ];\n  return JSON.stringify([null, JSON.stringify(innerJSON)]);\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _model = \"gemini-pro\"; // gemini-pro or gemini-ultra\n  static _logoFilename = \"gemini-chat-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://gemini.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    const context = await this.getChatContext();\n    let available = false;\n\n    if (context.requestParams.atValue) {\n      available = true;\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://gemini.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": generateReq(this.constructor._model, prompt, contextIds),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          this.setChatContext(context);\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://gemini.google.com/app\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatGoogleGenerativeAI } from \"@langchain/google-genai\";\n\nexport default class GeminiBot extends LangChainBot {\n  static _brandId = \"gemini\";\n  static _className = \"GeminiBot\";\n  static _logoFilename = \"gemini-logo.png\"; // Place it in public/bots/\n  static _model = \"gemini-pro\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.gemini.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.gemini.pastRounds;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatGoogleGenerativeAI({\n      apiKey: store.state.gemini.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.gemini.temperature,\n      streaming: true,\n      topK: store.state.gemini.topK,\n      topP: store.state.gemini.topP,\n    });\n    return chatModel;\n  }\n}\n","import GradioBot from \"@/bots/huggingface/GradioBot\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport store from \"@/store\";\n\nexport default class Falcon180bBot extends GradioBot {\n  static _brandId = \"falcon\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Falcon180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-logo.jpeg\"; // Place it in public/bots/\n  static _loginUrl = \"https://tiiuae-falcon-180b-demo.hf.space/\"; // Any Gradio URL\n  static _settingsComponent = \"Falcon180bBotSettings\"; // Vue component filename for settings\n  static _model = \"falcon-180b\";\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n  static _fnIndexes = [3]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  static _predictUrl = Falcon180bBot._loginUrl + \"run/predict\";\n\n  constructor() {\n    super();\n  }\n\n  sendPredict(fn_index, session_hash, payload) {\n    return axios.post(Falcon180bBot._predictUrl, {\n      fn_index,\n      data: [],\n      event_data: null,\n      session_hash: session_hash,\n      ...payload,\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const session_hash = await this.getChatContext();\n      await axios.all([\n        this.sendPredict(4, session_hash),\n        this.sendPredict(1, session_hash, {\n          data: [prompt],\n        }),\n      ]);\n      await this.sendPredict(2, session_hash, { data: [null, null] });\n      await super._sendPrompt(prompt, onUpdateResponse, callbackParam);\n      await this.sendPredict(5, session_hash);\n    } catch (error) {\n      throw Error(error);\n    }\n  }\n\n  /* eslint-disable no-unused-vars */\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [\n        null,\n        null,\n        \"\",\n        store.state.falcon.temperature,\n        store.state.falcon.maxNewTokens,\n        store.state.falcon.topP,\n        store.state.falcon.repetitionPenalty,\n      ];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = data[0][data[0].length - 1][1];\n    }\n    return r;\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  _checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super._checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport { SSE } from \"sse.js\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n  eventListeners = new Map();\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    if (this.constructor._loginUrl !== \"\") {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        available = true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n\n    const joinUrl = new URL(config.root + config.path + \"/queue/join\");\n    const data = this.makeData(fn_index, prompt);\n\n    const streamData = {\n      data,\n      event_data: null,\n      fn_index,\n      session_hash,\n      trigger_id: this._triggerId ?? 0,\n    };\n    const streamContext = await axios.post(joinUrl.toString(), streamData);\n\n    if (streamContext.status !== 200 || !streamContext.data.event_id) {\n      return Promise.reject(\n        i18n.global.t(\"error.failedConnectUrl\", { url: joinUrl }),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const dataUrl = new URL(config.root + config.path + \"/queue/data\");\n        dataUrl.searchParams.set(\"session_hash\", session_hash);\n\n        const source = new SSE(dataUrl.toString());\n\n        const onMessageEventHandler = (event) => {\n          const data = JSON.parse(event.data);\n\n          if (data.msg === \"estimation\") {\n            if (data.rank > 0) {\n              // Waiting in queue\n              data.rank_eta = Math.floor(data.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...data }),\n                done: false,\n              });\n            }\n          } else if (data.msg === \"process_generating\") {\n            // Generating data\n            if (data.success && data.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, data.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(data.output.error));\n            }\n          } else if (data.msg === \"process_completed\") {\n            // Done\n            if (data.success && data.output.data) {\n              if (\n                typeof data.output.data[2] !== \"string\" ||\n                data.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, data.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(data.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            }\n\n            this.removeAllEventListeners(source);\n            source.close();\n            resolve();\n          } else if (data.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        };\n\n        const onAbortEventHandler = (event) => {\n          console.log(\"Server-Sent Event closed:\", event);\n          this.removeAllEventListeners(source);\n          source.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        };\n\n        const onErrorEventHandler = (event) => {\n          this.removeAllEventListeners(source);\n          source.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        };\n\n        this.eventListeners.set(\"message\", onMessageEventHandler);\n        this.eventListeners.set(\"error\", onErrorEventHandler);\n        this.eventListeners.set(\"abort\", onAbortEventHandler);\n\n        for (const [eventName, eventHandler] of this.eventListeners) {\n          source.addEventListener(eventName, eventHandler);\n        }\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n\n  removeAllEventListeners(source) {\n    for (const [eventName, eventHandler] of this.eventListeners) {\n      source.removeEventListener(eventName, eventHandler);\n    }\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot, { LoginError } from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true; // Support anonymous chat\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      id: uuidv4(),\n      is_retry: false,\n      response_id: uuidv4(),\n      web_search: false,\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        try {\n          const response = await fetch(\n            `${this.constructor._loginUrl}conversation/${conversationId}`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(this.packRequest(prompt)),\n            },\n          );\n\n          if (!response.ok) {\n            const errorData = await response.json();\n            if (\n              errorData.message === \"Exceeded number of messages before login\"\n            ) {\n              reject(new LoginError(errorData.message));\n            } else {\n              reject(new Error(errorData.message || \"Unknown error\"));\n            }\n            return;\n          }\n\n          const reader = response.body.getReader();\n          let text = \"\";\n\n          const processStream = async () => {\n            const { done, value } = await reader.read();\n            if (done) {\n              return;\n            }\n\n            const dataChunk = new TextDecoder().decode(value);\n            // Split the chunk into individual JSON strings\n            const jsonDataArray = dataChunk.split(\"\\n\").filter(Boolean); // filter(Boolean) removes any empty strings\n\n            for (let i = 0; i < jsonDataArray.length; i++) {\n              const jsonData = jsonDataArray[i];\n              const data = JSON.parse(jsonData);\n\n              if (data.type === \"stream\") {\n                text += data.token;\n                onUpdateResponse(callbackParam, { content: text, done: false });\n              } else if (data.type === \"finalAnswer\") {\n                onUpdateResponse(callbackParam, {\n                  content: data.text,\n                  done: true,\n                });\n                return;\n              }\n            }\n            await processStream(); // Continue processing stream\n          };\n\n          await processStream(); // Start processing stream\n          resolve();\n        } catch (error) {\n          if (error.message === \"network error\") {\n            // ignore network error\n          } else {\n            reject(new Error(error.message));\n          }\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(`${this.constructor._loginUrl}conversation`, {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return conversationId;\n  }\n}\n","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n\n    if (available) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        available = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        available = false;\n      }\n    }\n\n    return available;\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"fluxmemcst\",\n    \"enable_user_consent\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"saharagenconv5\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"enable_user_consent\",\n    \"fluxmemcst\",\n    \"h3imaginative\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.webp\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4128KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4128KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-128k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4-turbo-preview\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-33b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-33b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT432kPoeBot extends PoeBot {\n  static _className = \"ChatGPT432kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"gpt-4-32k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"vizcacha\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class Llama270bPoeBot extends PoeBot {\n  static _className = \"Llama270bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama_2_70b_chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class GooglePalm2PoeBot extends PoeBot {\n  static _className = \"GooglePalm2PoeBot\"; // Class name of the bot\n  static _logoFilename = \"google-palm-2.png\"; // Place it in public/bots/\n  static _model = \"acouchy\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class CodeLlama34bPoeBot extends PoeBot {\n  static _className = \"CodeLlama34bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"code_llama_34b_instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama213bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama213bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-13b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama27bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama27bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-7b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama270bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama270bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-70b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM6bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM6bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm2-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm2-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM36bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM36bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm3-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm3-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class CodeLlamaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CodeLlamaBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama-34b-instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna7bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna7bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-7b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna13bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm13bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm70bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm70bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-70b\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class FalconHC180bBot extends HuggingChatBot {\n  static _className = \"FalconHC180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"tiiuae/falcon-180B-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class CodeLlamaHCBot extends HuggingChatBot {\n  static _className = \"CodeLlamaHCBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama/CodeLlama-34b-Instruct-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfan4Bot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfan4Bot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-4-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-4\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Zephyr7bBot extends HuggingChatBot {\n  static _className = \"Zephyr7bBot\"; // Class name of the bot\n  static _logoFilename = \"zephyr-7b-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingfaceh4-zephyr-chat.hf.space/\";\n  static _model = \"HuggingFaceH4/zephyr-7b-beta\";\n\n  constructor() {\n    super();\n  }\n\n  getFullname() {\n    return \"Zephyr-7B-β\";\n  }\n}\n","import BardBot from \"./BardBot\";\n\nexport default class GeminiAdvBot extends BardBot {\n  static _brandId = \"bard\";\n  static _className = \"GeminiAdvBot\"; // Class name of the bot\n  static _model = \"gemini-ultra\"; // gemini-pro or gemini-ultra\n  static _logoFilename = \"gemini-chat-adv-logo.svg\"; // Place it in public/bots/\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Gemma7bItBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Gemma7bItBot\"; // Class name of the bot\n  static _logoFilename = \"gemma-7b-it-logo.png\"; // Place it in public/bots/\n  static _model = \"gemma-7b-it\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Gemma2bItBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Gemma2bItBot\"; // Class name of the bot\n  static _logoFilename = \"gemma-2b-it-logo.png\"; // Place it in public/bots/\n  static _model = \"gemma-2b-it\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Claude3SonnetBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Claude3SonnetBot\"; // Class name of the bot\n  static _logoFilename = \"claude-3-sonnet-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-3-sonnet-20240229\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Claude3OpusBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Claude3OpusBot\"; // Class name of the bot\n  static _logoFilename = \"claude-3-opus-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-3-opus-20240229\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGLMBot from \"./ChatGLMBot\";\nimport { SSE } from \"sse.js\";\n\nexport default class ChatGLM4Bot extends ChatGLMBot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-4-logo.png\"; // Place it in public/bots/\n  static _model = \"GLM-4\"; // Model name\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = this.getAuthHeader().headers;\n        headers.accept = \"text/event-stream\";\n        headers[\"Content-Type\"] = \"application/json\";\n\n        const source = new SSE(\n          \"https://chatglm.cn/chatglm/backend-api/assistant/stream\",\n          {\n            headers,\n            payload: JSON.stringify({\n              assistant_id: \"65940acff94777010aa6b796\",\n              conversation_id: context.conversation_id || \"\",\n              meta_data: {\n                is_test: false,\n                input_question_type: \"xxxx\",\n                channel: \"\",\n                draft_id: \"\",\n              },\n              messages: [\n                { role: \"user\", content: [{ type: \"text\", text: prompt }] },\n              ],\n            }),\n            withCredentials: true,\n          },\n        );\n\n        let beginning = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let body = \"\";\n          let ending = \"\";\n          let data = JSON.parse(event.data);\n\n          if (!context.conversation_id && data.conversation_id) {\n            context.conversation_id = data.conversation_id;\n            this.setChatContext(context);\n          }\n\n          const response = data.parts?.[0];\n          if (!response || response.role !== \"assistant\") return;\n          const content = response.content[0];\n          if (!content) return;\n\n          // Parse search tool calls\n          if (content.type === \"tool_calls\" && response.status === \"init\") {\n            if (content.tool_calls.name === \"browser\") {\n              const info = content.tool_calls.arguments;\n              if (info.startsWith(\"search\")) {\n                beginning += `> ${info}\\n`;\n              }\n            }\n          } else if (content.type === \"text\") {\n            body = content.text;\n            response.meta_data?.citations?.forEach((citation) => {\n              ending += `> 1. [${citation.metadata.title}](${citation.metadata.url})\\n`;\n            });\n          }\n\n          const done = data.status === \"finish\";\n          onUpdateResponse(callbackParam, {\n            content: `${beginning}\\n${body}\\n${ending}`,\n            done,\n          });\n          done && resolve();\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { conversation_id: \"\" };\n  }\n}\n","// Bots\nimport GeminiBot from \"@/bots/google/GeminiBot\";\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/google/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport OpenAIAPI4128KBot from \"@/bots/openai/OpenAIAPI4128KBot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/zhipu/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport ChatGPT432kPoeBot from \"./poe/ChatGPT432kPoeBot\";\nimport Llama270bPoeBot from \"./poe/Llama270bPoeBot\";\nimport GooglePalm2PoeBot from \"./poe/GooglePalm2PoeBot\";\nimport CodeLlama34bPoeBot from \"./poe/CodeLlama34bPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WenxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PhindBot from \"./PhindBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\nimport Llama213bBot from \"./lmsys/Llama213bBot\";\nimport Llama27bBot from \"./lmsys/Llama27bBot\";\nimport Llama270bBot from \"./lmsys/Llama270bBot\";\nimport Falcon180bBot from \"./huggingface/Falcon180bBot\";\nimport ChatGLM6bBot from \"./lmsys/ChatGLM6bBot\";\nimport ChatGLM36bBot from \"./lmsys/ChatGLM36bBot\";\nimport CodeLlamaBot from \"./lmsys/CodeLlamaBot\";\nimport Vicuna7bBot from \"./lmsys/Vicuna7bBot\";\nimport Vicuna13bBot from \"./lmsys/Vicuna13bBot\";\nimport Wizardlm13bBot from \"./lmsys/Wizardlm13bBot\";\nimport Wizardlm70bBot from \"./lmsys/Wizardlm70bBot\";\nimport FalconHC180bBot from \"./huggingface/FalconHC180bBot\";\nimport CodeLlamaHCBot from \"./huggingface/CodeLlamaHCBot\";\nimport WenxinQianfan4Bot from \"./baidu/WenxinQianfan4Bot\";\nimport Zephyr7bBot from \"./huggingface/Zephyr7bBot\";\nimport GeminiAdvBot from \"./google/GeminiAdvBot\";\nimport Gemma7bItBot from \"./lmsys/Gemma7bItBot\";\nimport Gemma2bItBot from \"./lmsys/Gemma2bItBot\";\nimport Claude3SonnetBot from \"./lmsys/Claude3SonnetBot\";\nimport Claude3OpusBot from \"./lmsys/Claude3OpusBot\";\nimport ChatGLM4Bot from \"./zhipu/ChatGLM4Bot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  SageBot.getInstance(), // Assistant@Poe\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLM6bBot.getInstance(),\n  ChatGLM36bBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGLM4Bot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  Claude3OpusBot.getInstance(),\n  Claude3SonnetBot.getInstance(),\n  CodeLlama34bPoeBot.getInstance(),\n  CodeLlamaHCBot.getInstance(),\n  CodeLlamaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WenxinQianfanTurboBot.getInstance(),\n  WenxinQianfan4Bot.getInstance(),\n  Falcon180bBot.getInstance(),\n  FalconHC180bBot.getInstance(),\n  BardBot.getInstance(),\n  GeminiAdvBot.getInstance(),\n  GeminiBot.getInstance(),\n  Gemma2bItBot.getInstance(),\n  Gemma7bItBot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  OpenAIAPI4128KBot.getInstance(),\n  ChatGPT432kPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  Llama27bBot.getInstance(),\n  Llama213bBot.getInstance(),\n  Llama270bPoeBot.getInstance(),\n  Llama270bBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MOSSBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  GooglePalm2PoeBot.getInstance(),\n  PhindBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  Vicuna7bBot.getInstance(),\n  Vicuna13bBot.getInstance(),\n  VicunaBot.getInstance(),\n  Wizardlm13bBot.getInstance(),\n  Wizardlm70bBot.getInstance(),\n  Zephyr7bBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [\n  \"ClaudeBot\",\n  \"AlpacaBot\",\n  \"HuggingChatBot\",\n  \"Falcon180bBot\",\n  \"ChatGLM6bBot\",\n  \"ChatGLM36bBot\",\n  \"CodeLlamaBot\",\n  \"Vicuna7bBot\",\n  \"Wizardlm13bBot\",\n];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    return all.find((bot) => bot.getClassname() === className);\n  },\n};\n\ndisabled.forEach((className) => {\n  const bot = bots.getBotByClassName(className);\n  bot?.disable();\n});\n\nexport const botTags = {\n  free: [\n    bots.getBotByClassName(\"BardBot\"),\n    bots.getBotByClassName(\"BingChatBalancedBot\"),\n    bots.getBotByClassName(\"BingChatCreativeBot\"),\n    bots.getBotByClassName(\"BingChatPreciseBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM4Bot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"ChatGPT35Bot\"),\n    bots.getBotByClassName(\"ChatGPT35PoeBot\"),\n    bots.getBotByClassName(\"ClaudeBot\"),\n    bots.getBotByClassName(\"ClaudeInstantPoeBot\"),\n    bots.getBotByClassName(\"GooglePalm2PoeBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"YouChatBot\"),\n    bots.getBotByClassName(\"GradioAppBot\"),\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"CharacterAIBot\"),\n    bots.getBotByClassName(\"ClaudeAIBot\"),\n    bots.getBotByClassName(\"PhindBot\"),\n    bots.getBotByClassName(\"PiBot\"),\n    bots.getBotByClassName(\"SageBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n    bots.getBotByClassName(\"Gemma2bItBot\"),\n    bots.getBotByClassName(\"Gemma7bItBot\"),\n    bots.getBotByClassName(\"Claude3SonnetBot\"),\n    bots.getBotByClassName(\"Claude3OpusBot\"),\n  ],\n  paid: [\n    bots.getBotByClassName(\"ChatGPT4Bot\"),\n    bots.getBotByClassName(\"ChatGPT4MobileBot\"),\n    bots.getBotByClassName(\"ChatGPT4PoeBot\"),\n    bots.getBotByClassName(\"ChatGPTBrowsingBot\"),\n    bots.getBotByClassName(\"ClaudeInstant100kPoeBot\"),\n    bots.getBotByClassName(\"ClaudePlusPoeBot\"),\n    bots.getBotByClassName(\"ChatGPT432kPoeBot\"),\n    bots.getBotByClassName(\"GeminiAdvBot\"),\n  ],\n  openSource: [\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama270bPoeBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n    bots.getBotByClassName(\"Gemma2bItBot\"),\n    bots.getBotByClassName(\"Gemma7bItBot\"),\n    bots.getBotByClassName(\"Claude3SonnetBot\"),\n    bots.getBotByClassName(\"Claude3OpusBot\"),\n  ],\n  api: [\n    bots.getBotByClassName(\"GeminiBot\"),\n    bots.getBotByClassName(\"AzureOpenAIAPIBot\"),\n    bots.getBotByClassName(\"OpenAIAPI35Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI3516KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI4128KBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n  ],\n  madeInChina: [\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM4Bot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n  ],\n};\nexport default bots;\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [41, 42]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n  _triggerId = 93; // From devtools\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n    if (available) {\n      this._sendFnIndex(43, \"\", () => {}, 0); // Refresh the session\n    }\n    return available;\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt, null];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    } else if (fn_index === 43) {\n      r = [{}];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      const dataOne = data[1];\n\n      if (dataOne.length > 0) {\n        const dataTwo = dataOne[dataOne.length - 1];\n        const dataThree = dataTwo[dataTwo.length - 1];\n        r = dataThree;\n      }\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n\n      // Refresh the session too\n      const context = this.createChatContext();\n      this.setChatContext(context);\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    if (\n      store.state.azureOpenaiApi.azureApiKey &&\n      store.state.azureOpenaiApi.azureApiInstanceName &&\n      store.state.azureOpenaiApi.azureOpenAIApiDeploymentName &&\n      store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n      azureOpenAIApiInstanceName:\n        store.state.azureOpenaiApi.azureApiInstanceName,\n      azureOpenAIApiDeploymentName:\n        store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n      azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n      temperature: store.state.azureOpenaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot, { LoginError } from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://copilot.microsoft.com/\";\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.12.3 OS/macOS\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://copilot.microsoft.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.status == 200 && response.data?.result?.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature:\n          response.data.conversationSignature ??\n          response.headers[\"x-sydney-conversationsignature\"],\n        secAccessToken:\n          response.headers[\"x-sydney-encryptedconversationsignature\"],\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Copilot conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://copilot.microsoft.com/turing/conversation/chats\")\n      .then((response) => {\n        available =\n          response.data?.result?.value == \"Success\" &&\n          !this.isAnonymous(response.data?.clientId); // Anonymous user is not supported any more\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking Copilot login status:\", error);\n      });\n\n    return available;\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"tnamobcf\",\n            \"adssqovr\",\n            \"inlineadsv2\",\n            \"inlineadscont\",\n            \"1542\",\n            \"1211enbackfix\",\n            \"cmcallcf\",\n            \"ctvismctrl\",\n            \"sydtransview\",\n            \"exptonecf\",\n            \"bgstream\",\n            \"abv2cl\",\n            \"1215persc\",\n            \"0212boptpsc\",\n            \"14bicfluxv2\",\n            \"111mem\",\n            \"116langwb\",\n            \"0124dv1s0\",\n            \"0126hpctas0\",\n            \"1pgptwdess0\",\n          ],\n          verbosity: \"verbose\",\n          scenario: \"SERP\",\n          plugins: [],\n          isStartOfSession: context.invocationId === 0,\n          requestId: uuid,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          conversationSignature: context.conversationSignature, // TODO: test if this is needed when secAccessToken is set\n          participant: { id: context.clientId },\n          spokenTextMode: \"None\",\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        // If secAccessToken is not set, use the old way to pass conversationSignature\n        const url = context.secAccessToken\n          ? `wss://sydney.bing.com/sydney/ChatHub?sec_access_token=${encodeURIComponent(\n              context.secAccessToken,\n            )}`\n          : \"wss://sydney.bing.com/sydney/ChatHub\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data) + seperator;\n          },\n          unpackMessage: (data) => {\n            return data\n              .toString()\n              .split(seperator)\n              .filter(Boolean)\n              .map((r) => JSON.parse(r));\n          },\n        });\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n                this.setChatContext(context);\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Copilot:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (this.isAnonymous(context.clientId)) {\n                      reject(new LoginError(event.item.result.message));\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(\n                      new Error(\n                        `${event.item.result.message} (${event.item.result.value})`,\n                      ),\n                    );\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Copilot response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  static _arkoseScriptLoaded = false;\n  static _myEnforcement = null;\n  static _arkosePromise = null;\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (!response.data?.error && response.data?.accessToken) {\n        this.accessToken = response.data.accessToken;\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n    }\n\n    if (available) {\n      this.loadArkoseScript();\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(available);\n\n    return available;\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  loadArkoseScript() {\n    // Append the Arkose JS tag to the Document Body. Reference https://github.com/ArkoseLabs/arkose-examples/blob/main/vue-example/src/components/Arkose.vue\n    if (!ChatGPTBot._arkoseScriptLoaded) {\n      ChatGPTBot._arkoseScriptLoaded = true;\n      console.log(\"Loading Arkose API Script\", this.getFullname());\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src =\n        \"https://tcr9i.chat.openai.com/v2/35536E1E-65B4-4D96-9D97-6ADB7EFF8147/api.js\";\n      script.setAttribute(\"data-callback\", \"setupEnforcement\");\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        console.log(\"Arkose API Script loaded\");\n        window.setupEnforcement = this.setupEnforcement.bind(this);\n      };\n      script.onerror = () => {\n        console.log(\"Could not load the Arkose API Script!\");\n      };\n    }\n  }\n\n  setupEnforcement(myEnforcement) {\n    ChatGPTBot._myEnforcement = myEnforcement;\n    ChatGPTBot._myEnforcement.setConfig({\n      onReady: () => {},\n      onShown: () => {},\n      onShow: () => {},\n      onSuppress: () => {},\n      onCompleted: (response) => {\n        ChatGPTBot._arkosePromise.resolve(response.token);\n      },\n      onReset: () => {},\n      onHide: () => {},\n      onError: (response) => {\n        console.log(\"Arkose error:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n      onFailed: (response) => {\n        console.log(\"Arkose failed:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n    });\n  }\n\n  async getArkoseToken() {\n    if (ChatGPTBot._myEnforcement) {\n      return new Promise((resolve, reject) => {\n        ChatGPTBot._arkosePromise = { resolve, reject };\n        ChatGPTBot._myEnforcement.run();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data.trim() === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n\n              // Ignore messages which includes repeated content\n              if (data.message?.metadata?.is_complete) return;\n\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message_id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.openaiApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      configuration: {\n        basePath: store.state.openaiApi.alterUrl\n          ? store.state.openaiApi.alterUrl\n          : \"\",\n      },\n      openAIApiKey: store.state.openaiApi.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.openaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { settings } = this.context;\n    const formkey = store.state.poe.formkey;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"4LxgHM6KpFqokX0Ox\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude-2-100k\",\n      capybara: \"Assistant\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n      vizcacha: \"GPT-4-32k\",\n      code_llama_34b_instruct: \"Code-Llama-34b\",\n      acouchy: \"Google-PaLM-2\",\n      llama_2_70b_chat: \"Llama-2-70b\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      const response = await axios.get(url);\n\n      // Parse buildId\n      const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n      this.context.buildId = buildId[1];\n\n      // Parse chatId\n      const chatId = response.data.match(/\"chatId\":(\\d+),/);\n      this.context.chatId = chatId[1];\n\n      available = true;\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ChatGLMBot extends Bot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-3-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chatglm.cn/main/detail\";\n  static _model = \"GLM-3\"; // Model name\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${store.state.chatGlm?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    let userInfoUrl = \"https://chatglm.cn/chatglm/backend-api/v3/user/info\";\n    const context = await this.getChatContext();\n    await axios\n      .get(userInfoUrl, this.getAuthHeader())\n      .then((response) => {\n        available = response.data?.message == \"success\";\n        this.setChatContext({\n          ...context,\n          user_id: response.data?.result._id,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error checking ChatGLM login status:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n    const uuid = uuidv4();\n    const streamContext = await axios.post(\n      `https://chatglm.cn/chatglm/backend-api/v1/stream_context?__requestid=${uuid}`,\n      {\n        prompt: prompt,\n        seed: Math.floor(Math.random() * 100000),\n        max_tokens: 512,\n        conversation_task_id: context.conversation_task_id,\n        retry: false,\n        retry_history_task_id: null,\n        institution: \"\",\n        __userid: context.user_id,\n      },\n      this.getAuthHeader(),\n    );\n\n    if (streamContext.status !== 200) {\n      throw new Error(streamContext);\n    }\n\n    const context_id = streamContext.data.result.context_id;\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://chatglm.cn/chatglm/backend-api/v1/stream?App-Name=chatglm&context_id=${context_id}&institution=`,\n          this.getAuthHeader(),\n        );\n        let text = \"\";\n        source.addEventListener(\"add\", (event) => {\n          try {\n            text = event.data;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } catch {\n            console.error(\"Error ChatGLM JSON.parse message:\", event.data);\n            return;\n          }\n        });\n        source.addEventListener(\"finish\", () => {\n          // after stream closed, done\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"sse_error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        `https://chatglm.cn/chatglm/backend-api/v1/conversation`,\n        {},\n        this.getAuthHeader(),\n      )\n      .then((response) => {\n        context = {\n          conversation_task_id: response.data?.result.task_id,\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error ChatGLM createChatContext \", error);\n      });\n    return context;\n  }\n}\n","export const Type = {\n  Text: 0,\n  Slider: 1,\n  Select: 2,\n  Combobox: 3,\n  Checkbox: 4,\n};\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport zhtwMessages from \"./locales/zhtw.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  zhtw: zhtwMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport Chats from \"@/store/chats\";\nimport { migrateChatsMessagesThreads } from \"@/store/migration\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nawait store.restored; // wait for state to be restore\nstore.commit(\"migrateSettingsPrompts\");\nstore.commit(\"migrateSettingArrayIndexUseUUID\");\nawait migrateChatsMessagesThreads();\nawait Chats.addFirstChatIfEmpty();\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\nipcRenderer.invoke(\"set-is-show-menu-bar\", store.state.general.isShowMenuBar);\n\nconst vuetify = createVuetify({\n  components: { ...components },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","import db from \"@/store/db\";\nimport store from \"@/store/index\";\nimport i18n from \"@/i18n\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Chats {\n  static get table() {\n    return db.table(\"chats\");\n  }\n\n  static async addFirstChatIfEmpty() {\n    const count = await Chats.table.count();\n    if (count === 0) {\n      store.commit(\n        \"selectChat\",\n        await Chats.add({\n          favBots: [\n            // default bots\n            { classname: \"ChatGPT35Bot\", selected: true },\n            { classname: \"ChatGPT4Bot\", selected: true },\n            { classname: \"BingChatCreativeBot\", selected: true },\n            { classname: \"BingChatBalancedBot\", selected: true },\n            { classname: \"BingChatPreciseBot\", selected: true },\n            { classname: \"BardBot\", selected: true },\n            { classname: \"ClaudeInstantPoeBot\", selected: true },\n            { classname: \"FalconHC180bBot\", selected: true },\n            { classname: \"Llama270bBot\", selected: true },\n            { classname: \"VicunaBot\", selected: true },\n          ],\n        }),\n      );\n    }\n  }\n\n  static async getCurrentChat() {\n    return await Chats.table.get(store.state.currentChatIndex);\n  }\n\n  static async add(payload) {\n    const currentChat = await Chats.getCurrentChat();\n    const count = await Chats.table.count();\n    const newKey = await Chats.table.add({\n      index: uuidv4(),\n      contexts: {},\n      favBots: currentChat ? currentChat.favBots : [],\n      createdTime: new Date().getTime(),\n      modifiedTime: new Date().getTime(),\n      title: `${i18n.global.t(\"chat.newChat\")} ${count + 1}`,\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Chats.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Chats;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"ChatALL\");\ndb.version(1).stores({\n  chats: \"index, title, modifiedTime, selectedTime\",\n  messages: \"index, chatIndex, createdTime, modifiedTime\",\n  threads: \"index, chatIndex, messageIndex, createdTime, modifiedTime\",\n});\n\nexport default db;\n","import { getMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport localForage from \"localforage\";\nimport { isProxy, isReactive, isRef, toRaw } from \"vue\";\nimport { createStore } from \"vuex\";\nimport VuexPersistence from \"vuex-persist\";\nimport Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Threads from \"./threads\";\nimport { messageQueue, threadMessageQueue } from \"./queue\";\n\nconst vuexPersist = new VuexPersistence({\n  key: \"chatall-app\",\n  storage: localForage,\n  asyncStorage: true,\n  reducer: (state) => {\n    /* eslint-disable no-unused-vars */\n    const { updateCounter, selectedResponses, ...persistedState } = state;\n    /* eslint-enable no-unused-vars */\n    return deepToRaw(persistedState);\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    gemini: {\n      apiKey: \"\",\n      temperature: 0.7,\n      pastRounds: 5,\n      topK: 16,\n      topP: 0.95,\n    },\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    chatGlm: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    poe: {\n      formkey: \"\",\n    },\n    falcon: {\n      temperature: 0.9,\n      maxNewTokens: 256,\n      topP: 0.9,\n      repetitionPenalty: 1.2,\n    },\n    phind: {\n      model: \"Phind Model\",\n    },\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    prompts: [],\n    actions: [\n      {\n        name: \"Summarize 1\",\n        prefix:\n          \"Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\\nDo not include the response' value column in your table.\\nSimplify the data and identify the differences.\\nEach response is delimited by the `resp` tag.\\nInside every response, the bot's name is delimited by the `name` tag, and the bot's response is delimited by the `value` tag.\",\n        template:\n          \"<resp>\\n  <name>{botName}</name>\\n  <value>{botResponse}</value>\\n</resp>\",\n        suffix: \"Give me the best response.\",\n        index: 0,\n      },\n    ],\n    selectedResponses: [],\n    chat: {\n      updateDebounceInterval: 100,\n    },\n    general: {\n      isShowMenuBar: true,\n      isShowAppBar: true,\n    },\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    async setBotSelected(state, { botClassname, selected }) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          bot.selected = selected;\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    async setFavBotOrder(state, newOrder) {\n      const currentChat = await Chats.getCurrentChat();\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n      Chats.table.update(currentChat.index, { favBots: currentChat.favBots });\n    },\n    async addFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      const favBots = currentChat.favBots;\n      currentChat.favBots.push({ classname: botClassname, selected: true });\n      Chats.table.update(currentChat.index, {\n        favBots,\n      });\n    },\n    async removeFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          currentChat.favBots.splice(i, 1);\n\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setGemini(state, values) {\n      state.gemini = { ...state.gemini, ...values };\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setChatGLM(state, token) {\n      state.chatGlm = { ...state.chatGlm, ...token };\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setPoe(state, values) {\n      state.poe = { ...state.poe, ...values };\n    },\n    setPhind(state, values) {\n      state.phind = { ...state.phind, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      Chats.table.update(state.currentChatIndex, {\n        latestPromptIndex: promptIndex,\n      });\n    },\n    setLatestThreadPromptIndex(state, { promptIndex, messageIndex }) {\n      Chats.table.update(state.currentChatIndex, {\n        latestThreadPromptIndex: promptIndex,\n      });\n      Messages.table.update(messageIndex, {\n        hasThread: true,\n      });\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      Chats.table.update(state.currentChatIndex, {\n        [`contexts.${botClassname}`]: context,\n      });\n    },\n    clearMessages(state) {\n      Chats.table.where(\"index\").equals(state.currentChatIndex).modify({\n        contexts: {},\n      });\n      Messages.table.where(\"chatIndex\").equals(state.currentChatIndex).delete();\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    setGeneral(state, values) {\n      state.general = { ...state.general, ...values };\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n      Chats.table.update(index, { selectedTime: new Date().getTime() });\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    async editChatTitle(state, { index, payload }) {\n      const currentChat = await Chats.table.get(index);\n      if (currentChat) {\n        if (\n          payload.isEditedByUser ||\n          (!currentChat.isTitleUserEdited && !payload.isEditedByUser)\n        ) {\n          Chats.update(index, {\n            ...payload,\n            isTitleUserEdited: payload.isEditedByUser\n              ? true\n              : currentChat.isTitleUserEdited,\n          });\n        }\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    async deleteChats(state) {\n      const currentChat = await Chats.getCurrentChat();\n      await Chats.table.clear();\n      await Messages.table.clear();\n      await Threads.table.clear();\n      state.currentChatIndex = await Chats.add({\n        favBots: currentChat ? currentChat.favBots : [],\n      });\n      Chats.table.update(state.currentChatIndex, {\n        selectedTime: new Date().getTime(),\n      });\n    },\n    addPrompt(state, values) {\n      state.prompts.push({ ...values, index: uuidv4() });\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      const prompt = state.prompts.find((item) => item.index === index);\n      for (const key in values) {\n        prompt[key] = values[key];\n      }\n    },\n    deletePrompt(state, values) {\n      const { index } = values;\n      let prompt = state.prompts.find((item) => item.index === index);\n      prompt.hide = true;\n    },\n    addAction(state, values) {\n      state.actions.push({ ...values, index: uuidv4() });\n    },\n    editAction(state, values) {\n      const { index } = values;\n      const action = state.actions.find((item) => item.index === index);\n      for (const key in values) {\n        action[key] = values[key];\n      }\n    },\n    deleteAction(state, values) {\n      const { index } = values;\n      let action = state.actions.find((item) => item.index === index);\n      action.hide = true;\n    },\n    addSelectedResponses(state, value) {\n      value.selectedIndex = state.selectedResponses.push(value) - 1;\n    },\n    deleteSelectedResponses(state, value) {\n      const index = state.selectedResponses.findIndex(\n        (r) => r.selectedIndex === value,\n      );\n      state.selectedResponses.splice(index, 1);\n    },\n    deleteAllSelectedResponses(state) {\n      state.selectedResponses = [];\n    },\n    migrateSettingsPrompts(state) {\n      if (localStorage.getItem(\"isMigratedSettingsPrompts\") === \"true\") {\n        return;\n      }\n      const app = JSON.parse(localStorage.getItem(\"chatall-app\"));\n      const promptsData = JSON.parse(localStorage.getItem(\"chatall-prompts\"));\n      for (const key in app) {\n        state[key] = app[key];\n      }\n      state.prompts = promptsData ? promptsData.prompts : [];\n      localStorage.setItem(\"isMigratedSettingsPrompts\", true);\n    },\n    updateSetting(state, { key, value }) {\n      state[key] = value;\n    },\n    updateSettingArray(state, { key, value, index }) {\n      for (const prop in state[key][index]) {\n        state[key][index][prop] = value[prop];\n      }\n    },\n    pushSettingArray(state, { key, value }) {\n      state[key].push(value);\n    },\n    migrateSettingArrayIndexUseUUID(state) {\n      if (\n        localStorage.getItem(\"isMigrateSettingArrayIndexUseUUID\") === \"true\"\n      ) {\n        return;\n      }\n      const settings = toRaw(state);\n      for (const key in settings) {\n        if (Array.isArray(state[key])) {\n          for (const item of state[key]) {\n            if (typeof item.index === \"number\" || !item.index) {\n              item.index = uuidv4();\n            }\n          }\n        }\n      }\n      localStorage.setItem(\"isMigrateSettingArrayIndexUseUUID\", true);\n    },\n    setChat(state, values) {\n      values = {\n        ...values,\n        updateDebounceInterval: parseInt(values.updateDebounceInterval),\n      };\n      state.chat = { ...state.chat, ...values };\n    },\n  },\n  actions: {\n    async sendPrompt({ commit, dispatch }, { prompt, bots, promptIndex }) {\n      const currentChat = await Chats.getCurrentChat();\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n        };\n        // add message\n        promptIndex = await Messages.add(currentChat.index, promptMessage);\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const msgs = [];\n      for (const bot of bots) {\n        const msg = {\n          index: uuidv4(),\n          promptIndex: promptIndex,\n          chatIndex: currentChat.index,\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          className: bot.getClassname(),\n          createdTime: new Date().getTime(),\n        };\n        await Messages.table.add(msg);\n        msgs.push(msg);\n      }\n      for (let i = 0; i < bots.length; i++) {\n        const bot = bots[i];\n        const message = msgs[i];\n        bot.sendPrompt(\n          prompt,\n          (index, values) =>\n            dispatch(\"updateMessage\", { index, message: values }),\n          message.index,\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          message.className,\n          prompt.length,\n        );\n      }\n    },\n    async sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, messageIndex, promptIndex },\n    ) {\n      if (!promptIndex) {\n        // not resend\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        promptIndex = await Threads.add(\n          state.currentChatIndex,\n          messageIndex,\n          threadPromptMessage,\n        );\n      }\n      commit(\"setLatestThreadPromptIndex\", { promptIndex, messageIndex }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n      threadResponseMessage.index = await Threads.add(\n        state.currentChatIndex,\n        messageIndex,\n        threadResponseMessage,\n      );\n\n      bot.sendPrompt(\n        prompt,\n        (index, values) =>\n          dispatch(\"updateThreadMessage\", { index, message: values }),\n        threadResponseMessage.index,\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    async updateMessage(_, { index, message: values }) {\n      messageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const chat = await Messages.table.get(index);\n        const message = { ...chat, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    async updateThreadMessage(_, { index, message: values }) {\n      threadMessageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const thread = await Threads.table.get(index);\n        let message = { ...thread, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    addSelectedResponses({ commit, state }, value) {\n      commit(\"addSelectedResponses\", value);\n      return state.selectedResponses.length - 1;\n    },\n  },\n  getters: {\n    currentChat: async (state) => {\n      const currentChat = await Chats.table.get(state.currentChatIndex);\n      return currentChat;\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {},\n  plugins: [vuexPersist.plugin],\n});\n\n// call toRaw to nested array before storing with localForage\nfunction deepToRaw(sourceObj) {\n  const objectIterator = (input) => {\n    if (Array.isArray(input)) {\n      const result = [];\n      for (const item of input) {\n        result.push(objectIterator(item));\n      }\n      return result;\n    }\n    if (isRef(input) || isReactive(input) || isProxy(input)) {\n      return objectIterator(toRaw(input));\n    }\n    if (input && typeof input === \"object\") {\n      return Object.keys(input).reduce((acc, key) => {\n        acc[key] = objectIterator(input[key]);\n        return acc;\n      }, {});\n    }\n    return input;\n  };\n\n  return objectIterator(sourceObj);\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Messages {\n  static get table() {\n    return db.table(\"messages\");\n  }\n\n  static async add(chatIndex, payload) {\n    const newKey = await Messages.table.add({\n      chatIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Messages.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n\n  static async getMessages(index) {\n    return await Messages.table\n      .where({ chatIndex: index })\n      .sortBy(\"createdTime\");\n  }\n\n  static async getMessagesCount(index) {\n    return await Messages.table.where({ chatIndex: index }).count();\n  }\n}\n\nexport default Messages;\n","import Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst migrateChatsMessagesThreads = async () => {\n  const chatIndexMap = {};\n  let messageIndexMap = {};\n  let threadIndexMap = {};\n  const chatsMigrateData = [];\n  const messagesMigrateData = [];\n  const threadsMigrateData = [];\n  try {\n    if (localStorage.getItem(\"isMigratedChatsMessagesThreads\") === \"true\") {\n      if (localStorage.getItem(\"isMigratedHasThread\") !== \"true\") {\n        migrateHasThread();\n      }\n      return;\n    }\n    const data = JSON.parse(localStorage.getItem(\"chatall-messages\"));\n    if (data === null) {\n      localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n      return;\n    }\n    const chats = data.chats;\n    for (let i = 0; i < chats.length; i++) {\n      const chat = chats[i];\n      if (!chat) {\n        continue;\n      }\n      chat.index = getIndex(chatIndexMap, chat.index);\n      chat.index = getAndGenerateUuidIfNotExist(chatIndexMap, chat.index);\n      chat.modifiedTime = chat.createdTime;\n      let createdTime = chat.createdTime || 0;\n      for (let j = 0; j < chat.messages.length; j++) {\n        const message = chat.messages[j];\n        if (!message) {\n          continue;\n        }\n        message.index = getIndex(messageIndexMap, message.index);\n        message.index = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          message.index,\n        );\n        message.chatIndex = chat.index;\n        message.createdTime = createdTime + j;\n        if (chat.threads && chat.threads.length) {\n          message.hasThread = true;\n        }\n        messagesMigrateData.push(message);\n      }\n      if (!chat.threads) {\n        // skip for old version do not have threads array\n        continue;\n      }\n      for (let q = 0; q < chat.threads.length; q++) {\n        const thread = chat.threads[q];\n        if (!thread) {\n          continue;\n        }\n        const messageIndex = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          thread.responseIndex,\n        );\n        let createdTime = chat.createdTime || 0;\n        for (let p = 0; p < thread.messages.length; p++) {\n          const threadMessage = thread.messages[p];\n          if (!threadMessage) {\n            continue;\n          }\n          threadMessage.index = getIndex(threadIndexMap, threadMessage.index);\n          threadMessage.index = getAndGenerateUuidIfNotExist(\n            threadIndexMap,\n            threadMessage.index,\n          );\n          threadMessage.messageIndex = messageIndex;\n          threadMessage.chatIndex = chat.index;\n          threadMessage.createdTime = createdTime + p;\n          if (threadMessage.type === \"response\") {\n            threadMessage.promptIndex = getAndGenerateUuidIfNotExist(\n              threadIndexMap,\n              threadMessage.promptIndex,\n            );\n          }\n          threadsMigrateData.push(threadMessage);\n        }\n      }\n      messageIndexMap = {};\n      threadIndexMap = {};\n      delete chat.messages;\n      chatsMigrateData.push(chat);\n    }\n    console.log(chatsMigrateData);\n    console.log(messagesMigrateData);\n    console.log(threadsMigrateData);\n    try {\n      await Chats.table.bulkAdd(chatsMigrateData);\n    } catch (error) {\n      console.error(\"Chats Migration error:\", error);\n    }\n    try {\n      await Messages.table.bulkAdd(messagesMigrateData);\n    } catch (error) {\n      console.error(\"Messages Migration error:\", error);\n    }\n    try {\n      await Threads.table.bulkAdd(threadsMigrateData);\n    } catch (error) {\n      console.error(\"Threads Migration error:\", error);\n    }\n    localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n    localStorage.setItem(\"isMigratedHasThread\", true);\n    console.log(\"Migration done\");\n  } catch (error) {\n    console.error(\"Migration error:\", error);\n  }\n};\n\nfunction getAndGenerateUuidIfNotExist(map, key) {\n  if (map[key] === undefined) {\n    map[key] = uuidv4();\n  }\n  return map[key];\n}\n\nfunction getIndex(map, key) {\n  if (map[key] !== undefined) {\n    // duplicate key not allowed\n    return uuidv4();\n  }\n  return key;\n}\n\nasync function migrateHasThread() {\n  // update Message hasThread property to `true` if messageIndex existed in Thread\n  const messageIndexes = await Threads.table\n    .orderBy(\"messageIndex\")\n    .distinct()\n    .uniqueKeys();\n  for (const index of messageIndexes) {\n    try {\n      await Messages.table.update(index, { hasThread: true });\n    } catch (error) {\n      console.error(\"migrateHasThread error:\", error);\n    }\n  }\n  localStorage.setItem(\"isMigratedHasThread\", true);\n}\n\nexport { migrateChatsMessagesThreads };\n","import Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\n/* eslint-disable no-unused-vars */\nimport { Table, UpdateSpec, TKey } from \"dexie\";\nimport { Store } from \"vuex\";\n\n/** @type {Queue} */\nexport let messageQueue;\n/** @type {Queue} */\nexport let threadMessageQueue;\n\n/**\n * @param {Store} store\n */\nexport function initializeQueues(store) {\n  messageQueue = new Queue(store, Messages.table, \"messageQueue\");\n  threadMessageQueue = new Queue(store, Threads.table, \"threadMessageQueue\");\n}\n\nexport function startQueuesProcessing() {\n  messageQueue.processQueue();\n  threadMessageQueue.processQueue();\n}\n\nclass Queue {\n  /** @type {Store} */\n  store;\n  /** @type {Table} */\n  table;\n  _queue = [];\n  queueName = \"\";\n  isProcessing = false;\n\n  static DEFAULT_UPDATE_DEBOUNCE_INTERVAL = 100;\n  debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n\n  get queue() {\n    return this._queue;\n  }\n\n  /**\n   * @param {Store} store\n   * @param {Table} table\n   * @param {string} queueName\n   */\n  constructor(store, table, queueName = \"\") {\n    this.table = table;\n    this.store = store;\n    this.queueName = queueName;\n  }\n\n  async processQueue() {\n    if (!this.isProcessing && this.queue.length > 0) {\n      this.isProcessing = true;\n\n      this.setUpdateDebounceTime();\n\n      const mergedMessages = [];\n      /** @type {Array.<{key: TKey, changes: UpdateSpec}>} */\n      const indexMap = {};\n\n      // console.log(this.queueName);\n      // console.table(\n      //   this.queue.map((obj) => {\n      //     return {\n      //       index: obj.index,\n      //       content: obj.message.content,\n      //       done: obj.message.done,\n      //     };\n      //   }),\n      // );\n\n      const queueCopy = [...this.queue];\n      for (const item of queueCopy) {\n        const index = item.index;\n        if (!indexMap[index]) {\n          indexMap[index] = { key: index, changes: {} };\n          mergedMessages.push(indexMap[index]);\n        }\n        for (const propKey in item.message) {\n          indexMap[index].changes[propKey] = item.message[propKey];\n        }\n        this.queue.shift(); // remove from queue\n      }\n\n      // console.log(this.queueName + \" result\");\n      // console.table(\n      //   mergedMessages.map((obj) => {\n      //     return {\n      //       index: obj.key,\n      //       content: obj.changes.content,\n      //       done: obj.changes.done,\n      //     };\n      //   }),\n      // );\n\n      await this.table.bulkUpdate(mergedMessages);\n\n      this.isProcessing = false;\n    }\n    setTimeout(this.processQueue.bind(this), this.debounceTime);\n  }\n\n  setUpdateDebounceTime() {\n    if (typeof this.store.state.chat.updateDebounceInterval === \"number\") {\n      this.debounceTime = this.store.state.chat.updateDebounceInterval;\n    } else {\n      this.debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n    }\n  }\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Threads {\n  static get table() {\n    return db.table(\"threads\");\n  }\n\n  static async add(chatIndex, messageIndex, payload) {\n    const newKey = await Threads.table.add({\n      chatIndex,\n      messageIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Threads.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Threads;\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_APP_BAR = {\n  elementId: \"app-bar\",\n  key: [modifier, \"f11\"],\n  offset: {\n    top: 20,\n    left: -200,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  SHORTCUT_APP_BAR,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","export const scrollToBottom = ({ immediately = false }) => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: immediately ? \"instant\" : \"smooth\",\n  });\n};\n\nexport const autoScrollToBottom = () => {\n  if (autoScroll) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nexport const onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll = scrollPosition >= document.documentElement.scrollHeight - 40;\n};\n\nexport let autoScroll = false;\n","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"props.currentChatIndex === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    class=\"pa-3 pr-0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\" class=\"mr-4\"> mdi-message-outline </v-icon>\n    </template>\n    <template #append v-if=\"props.currentChatIndex === props.chat.index\">\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding: 6px\"\n    class=\"pl-3 pr-0\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst emit = defineEmits([\n  \"hideChat\",\n  \"editChatTitle\",\n  \"selectChat\",\n  \"focusTextarea\",\n]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n  currentChatIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  emit(\"selectChat\", props.chat.index);\n}\n\nasync function confirmHideChat() {\n  emit(\"hideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  emit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__append {\n  margin-left: 0 !important;\n}\n\n:deep() .v-input__prepend {\n  margin-right: 0.25rem !important;\n}\n\n:deep() .v-field__input {\n  padding-left: 12px;\n  padding-right: 0;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() div.v-list-item__prepend {\n  display: block;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=d78952d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d78952d6\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddChat\"\n        @shortkey=\"onAddChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in drawerItems\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :key=\"chat.index\"\n        :chat=\"chat\"\n        :current-chat-index=\"store.state.currentChatIndex\"\n        @hide-chat=\"hideChat\"\n        @select-chat=\"selectChat\"\n        @edit-chat-title=\"editChatTitle\"\n        @focus-textarea=\"focusTextarea\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick, onUpdated, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst drawerItems = useObservable(\n  liveQuery(() => Chats.table.orderBy(\"modifiedTime\").reverse().toArray()),\n);\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction selectChat(index) {\n  store.commit(\"selectChat\", index);\n  focusTextarea();\n}\n\nasync function onAddChat() {\n  store.commit(\"selectChat\", await Chats.add());\n  focusTextarea();\n}\n\nasync function hideChat() {\n  const confirm = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (confirm) {\n    await Chats.update(store.state.currentChatIndex, { hide: true });\n    selectLatestVisibleChat();\n  }\n}\n\nasync function editChatTitle(payload) {\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload,\n  });\n}\n\nasync function selectLatestVisibleChat() {\n  const latestChat = await Chats.table\n    .orderBy(\"modifiedTime\")\n    .reverse()\n    .filter((chat) => !chat.hide)\n    .first();\n  if (latestChat) {\n    store.commit(\"selectChat\", latestChat.index);\n    focusTextarea();\n  } else {\n    // if there is no visible chat, create a new chat\n    onAddChat();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem !important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=55649f6e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55649f6e\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ message ? message.content : \"\" }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4ce9f836&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ce9f836\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"message.type === 'prompt'\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <chat-response\n      v-else\n      :chat=\"chat\"\n      :columns=\"1\"\n      :messages=\"message\"\n      :messagePromptIndex=\"messagePromptIndex\"\n      :isThread=\"true\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponse from \"@/components/Messages/ChatResponse.vue\";\nimport Threads from \"@/store/threads\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick } from \"vue\";\nimport { autoScrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messageIndex: {\n    type: String,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst currentChatMessages = useObservable(\n  liveQuery(async () => {\n    const keys = await Threads.table\n      .where(\"messageIndex\")\n      .equals(props.messageIndex)\n      .primaryKeys();\n    console.log(\"thread key count: \", keys.length);\n    const messages = await Threads.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n    console.log(\"groupedMessage threads: \", groupedMessage);\n    return groupedMessage;\n  }),\n);\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted && isSelectedResponsesEmpty ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n      isSelectedResponsesEmpty ? 'cursor-auto' : 'cursor-pointer',\n      isSelected ? 'highlight-border' : '',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n    :ripple=\"!isSelectedResponsesEmpty\"\n    @click=\"!isSelectedResponsesEmpty && select($event)\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n        v-show=\"isSelectedResponsesEmpty\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        v-show=\"isSelectedResponsesEmpty\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        v-show=\"isSelectedResponsesEmpty\"\n        icon\n        @click=\"hide\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        :class=\"getSelectButtonClass\"\n        @click=\"select($event)\"\n      >\n        <v-icon>{{\n          isSelected ? \"mdi-check-circle\" : \"mdi-check-circle-outline\"\n        }}</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"messages && messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!isThread && messages.length && messages[0].hasThread\">\n        <chat-thread\n          :chat=\"chat\"\n          :messageIndex=\"messages[0].index\"\n          :messagePromptIndex=\"messages[0].promptIndex\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!isThread && message && message.hasThread\">\n          <chat-thread\n            :chat=\"chat\"\n            :messageIndex=\"message.index\"\n            :messagePromptIndex=\"messages[0].promptIndex\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageLeftButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageLeft\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageRightButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageRight\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowReplyButtonInDOM\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { Theme } from \"@/theme\";\nimport { computed, nextTick, onMounted, ref, toRaw, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatThread from \"./ChatThread.vue\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst matomo = useMatomo();\nconst store = useStore();\nconst messages = computed(() => props.messages);\nconst chat = computed(() => props.chat);\nwatch(\n  messages,\n  async () => {\n    carouselModel.value = maxPage.value;\n  },\n  { deep: true },\n);\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst pageLeftButton = ref();\nconst pageRightButton = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst isSelected = ref(false);\nconst isSelectedList = ref([]);\nconst isSelectedResponsesEmpty = ref(\n  store.state.selectedResponses.length === 0,\n);\nconst botInstance = computed(() => {\n  return messages.value && messages.value.length\n    ? bots.getBotByClassName(messages.value[0].className)\n    : undefined;\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() =>\n  props.messages.length ? props.messages[maxPage.value].highlight : false,\n); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messagesRef array is in correct order\n  () =>\n    props.messages.length &&\n    props.chat?.latestPromptIndex === props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messagesRef array is in correct order\n    // const responseIndex = props.chat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex = messages.value?.length\n      ? messages.value[0].promptIndex\n      : undefined; // using responseIndex to get response from messagesRef, and in the repsonse we can retrieve promptIndex\n    return props.chat?.latestThreadPromptIndex === threadPromptIndex;\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected.value && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isShowReplyButtonInDOM = computed(() => {\n  if (props.isThread) {\n    return false;\n  } else {\n    return !(!isShowResendButton.value && !isShowReplyButton.value);\n  }\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.hasThread),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      props.chat &&\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      props.messages[0].promptIndex && // if current threads is a response to latest prompt\n      props.chat.latestPromptIndex &&\n      props.chat.latestPromptIndex === props.messagePromptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\nconst getSelectButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread && isSelectedResponsesEmpty.value,\n  \"hide-thread-btn\": props.isThread && isSelectedResponsesEmpty.value,\n}));\nconst messageBotIsSelected = computed(() => {\n  if (!messages.value.length) {\n    return false;\n  }\n  var favBot = chat.value?.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n});\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    messageIndex: messages.value[messages.value.length - 1].index, // always send prompt in thread to last page\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nwatch(\n  () => store.state.selectedResponses.length,\n  updateIsSelectedResponsesEmpty,\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    Threads.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  } else {\n    Messages.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[maxPage.value].className,\n    props.messages[maxPage.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      Threads.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    } else {\n      Messages.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nasync function resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage = await Threads.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        messageIndex: messages.value[maxPage.value].messageIndex, // always send prompt in thread to last page\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage = await Messages.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n\nlet selectedIndex = undefined;\nasync function select(event) {\n  event.stopPropagation();\n  if (\n    pageLeftButton.value?.$el.contains(event.target) ||\n    pageRightButton.value?.$el.contains(event.target)\n  ) {\n    // return when click on page left, right button\n    return;\n  }\n\n  if (isSelected.value) {\n    store.commit(\"deleteSelectedResponses\", selectedIndex);\n    isSelected.value = false;\n    const index = isSelectedList.value.indexOf(carouselModel.value);\n    isSelectedList.value.splice(index, 1);\n  } else {\n    selectedIndex = await store.dispatch(\"addSelectedResponses\", {\n      ...toRaw(props.messages[carouselModel.value]),\n    });\n    isSelected.value = true;\n    isSelectedList.value.push(carouselModel.value);\n  }\n}\n\nfunction updateIsSelectedResponsesEmpty() {\n  isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  if (isSelectedResponsesEmpty.value) {\n    isSelected.value = false;\n    isSelectedList.value = [];\n  }\n}\n\nfunction pageLeft() {\n  carouselModel.value = Math.max(carouselModel.value - 1, 0);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n\nfunction pageRight() {\n  carouselModel.value = Math.min(carouselModel.value + 1, maxPage.value);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn,\n.hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n\n.response:hover .hide-btn,\n.response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert {\n  filter: invert(100%);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=4a895324&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a895324\"]])\n\nexport default __exports__","<template>\n  <v-container v-if=\"loading\" class=\"ma-0 position-fixed\" style=\"z-index: 1\">\n    <v-label class=\"bg-background\" style=\"opacity: 1\">{{\n      $t(\"chat.loading\")\n    }}</v-label>\n  </v-container>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n        <chat-prompt\n          v-if=\"message.type === 'prompt'\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <chat-response\n          v-else\n          :chat=\"chat\"\n          :columns=\"columns\"\n          :messages=\"message\"\n        ></chat-response>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Messages from \"@/store/messages\";\nimport { liveQuery } from \"dexie\";\nimport { computed, nextTick, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\nimport { autoScrollToBottom, scrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chat: {\n    type: Object,\n  },\n});\n\nconst loading = ref(false);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst currentChatMessages = ref([]);\nlet createChatMessageLiveQuery = (index) => {\n  return liveQuery(async () => {\n    const keys = await Messages.table\n      .where(\"chatIndex\")\n      .equals(index)\n      .primaryKeys();\n    const messages = await Messages.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          // group responses with same bot for carousel\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n  });\n};\n\nconst currentChatIndex = computed(() => store.state.currentChatIndex);\nlet currentMessageSub;\nlet scrollToBottomFirst;\nwatch(\n  currentChatIndex,\n  (newChat, oldChat) => {\n    if (newChat !== oldChat) {\n      loading.value = true;\n      scrollToBottomFirst = true;\n      if (currentMessageSub) {\n        currentMessageSub.unsubscribe();\n      }\n      currentMessageSub = createChatMessageLiveQuery(\n        store.state.currentChatIndex,\n      ).subscribe(() => {\n        loading.value = false;\n        if (scrollToBottomFirst) {\n          scrollToBottomFirst = false;\n          nextTick(() => scrollToBottom({ immediately: true }));\n        }\n      });\n    }\n  },\n  { immediate: true },\n);\n\nonMounted(async () => {\n  await Messages.table\n    .filter((message) => message.done !== true)\n    .modify({ done: true });\n});\n</script>\n\n<style scoped>\n.messages {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  padding: 0;\n}\n\n.message-grid {\n  display: grid;\n  grid-gap: 16px;\n  width: 100%;\n  padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=7d347add&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d347add\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacFile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.pacFile;\n  if (newInputfile.value) {\n    proxySettings.value.pacFile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.pacFile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {\n  PromptTemplate,\n  FewShotPromptTemplate,\n  LengthBasedExampleSelector,\n} from \"langchain/prompts\";\n\nconst prefixPlaceholder = `Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\nDo not include the response' value column in your table.\nSimplify the data and identify the differences.\nEach response is delimited by the \\`resp\\` tag.\nInside every response, the bot's name is delimited by the \\`name\\` tag, and the bot's response is delimited by the \\`value\\` tag.`;\nconst templatePlaceholder = `<resp>\n    <name>{botName}</name>\n    <value>{botResponse}</value>\n</resp>`;\nconst suffixPlaceholder = \"Give me the best response.\";\n\nasync function preview(prefix, exampleTemplate, suffix, data) {\n  const examplePrompt = new PromptTemplate({\n    template: exampleTemplate,\n    inputVariables: [\"botName\", \"botResponse\"],\n  });\n\n  const exampleSelector = await LengthBasedExampleSelector.fromExamples(data, {\n    examplePrompt,\n    maxLength: Number.MAX_VALUE,\n  });\n\n  const dynamicPrompt = new FewShotPromptTemplate({\n    exampleSelector,\n    examplePrompt,\n    prefix: prefix,\n    suffix: suffix,\n    inputVariables: [],\n  });\n  return await dynamicPrompt.format();\n}\n\nexport { prefixPlaceholder, templatePlaceholder, suffixPlaceholder, preview };\n","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setChat\"\n  ></CommonBotSettings>\n  <v-list>\n    <v-list-item>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.deleteAllChatHistory')\"\n        @click=\"deleteChats\"\n      ></v-btn>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-list-item-title style=\"font-size: 1.5rem\" class=\"pb-2\">\n        {{ $t(\"chat.exportImport\") }}</v-list-item-title\n      >\n      <v-list-item-subtitle>\n        {{ $t(\"chat.exportImportDesc\") }}</v-list-item-subtitle\n      >\n      <div class=\"pt-2\">\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.export')\"\n          @click=\"exportData\"\n        ></v-btn>\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.import')\"\n          @click=\"importData\"\n          style=\"margin-left: 10px\"\n        >\n        </v-btn>\n      </div>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-row>\n        <v-col class=\"align-baseline d-flex\" style=\"font-size: 1.5rem\">\n          <label class=\"pr-3\">{{ $t(\"chat.actions\") }}</label>\n          <v-btn\n            class=\"mt-1\"\n            color=\"primary\"\n            variant=\"outlined\"\n            prepend-icon=\"mdi-plus\"\n            :text=\"$t('chat.addAction')\"\n            @click=\"add\"\n          ></v-btn>\n        </v-col>\n      </v-row>\n    </v-list-item>\n    <v-list-item\n      v-for=\"action in userActions\"\n      density=\"comfortable\"\n      :key=\"action.index\"\n      :value=\"action.index\"\n      :ripple=\"false\"\n    >\n      <div class=\"align-center d-flex\">\n        <v-list-item-title class=\"pr-5\">{{ action.name }}</v-list-item-title>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-pencil-outline\"\n          @click=\"edit(action)\"\n          style=\"background-color: transparent\"\n        ></v-btn>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-delete-outline\"\n          @click=\"deleteAction(action)\"\n          style=\"margin: 0; background-color: transparent\"\n        ></v-btn>\n      </div>\n    </v-list-item>\n  </v-list>\n  <v-dialog\n    persistent\n    width=\"90%\"\n    height=\"90%\"\n    :model-value=\"isOpenAddEditAction\"\n    @update:model-value=\"isOpenAddEditAction = $event\"\n  >\n    <v-card>\n      <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n        <v-text-field\n          required\n          autofocus\n          v-model=\"actionName\"\n          placeholder=\"Summarize\"\n          :label=\"$t('chat.actionName')\"\n          :rules=\"[required]\"\n        ></v-text-field>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"prefix\"\n          :placeholder=\"prefixPlaceholder\"\n          :label=\"$t('chat.prefix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"4\"\n          v-model=\"template\"\n          :placeholder=\"templatePlaceholder\"\n          :label=\"$t('chat.actionTemplate')\"\n          :rules=\"[required]\"\n          @input=\"onInputTemplate\"\n        >\n          <template v-slot:append-inner>\n            <v-btn\n              flat\n              size=\"x-small\"\n              icon=\"mdi-help\"\n              style=\"background-color: inherit\"\n              @click=\"\n                isShowTemplateParametersDialog = !isShowTemplateGuideTooltip\n              \"\n            >\n            </v-btn>\n          </template>\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"suffix\"\n          :placeholder=\"suffixPlaceholder\"\n          :label=\"$t('chat.suffix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <label class=\"pl-4\" style=\"font-size: 1.2rem\">{{\n          $t(\"chat.preview\")\n        }}</label>\n        <chat-prompt\n          class=\"w-100\"\n          :message=\"{ content: previewRef }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-form>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          variant=\"outlined\"\n          color=\"primary\"\n          @click=\"isOpenAddEditAction = false\"\n          >{{ $t(\"modal.cancel\") }}</v-btn\n        >\n        <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditAction\">{{\n          $t(\"modal.done\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n  <v-dialog\n    width=\"auto\"\n    :model-value=\"isShowTemplateParametersDialog\"\n    v-on:after-leave=\"isShowTemplateParametersDialog = false\"\n  >\n    <v-card>\n      <v-md-preview class=\"pa-4\" :text=\"templateParametersInfo\" />\n    </v-card>\n  </v-dialog>\n  <ConfirmModal ref=\"confirmModal\" />\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n    <template v-slot:actions>\n      <v-btn variant=\"text\" @click=\"snackbar.show = false\">\n        {{ $t(\"updates.close\") }}\n      </v-btn>\n    </template>\n  </v-snackbar>\n  <v-dialog width=\"85vw\" :model-value=\"isShowImportProgressDialog\" persistent>\n    <v-card>\n      <v-card-title> {{ $t(\"chat.importLog\") }} </v-card-title>\n      <v-textarea\n        readonly\n        hide-details\n        rows=\"20\"\n        v-model=\"importProgressText\"\n        id=\"import-log-textarea\"\n        :loading=\"isImportCompleted === false\"\n      ></v-textarea>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          variant=\"text\"\n          @click=\"isShowImportProgressDialog = false\"\n          :disabled=\"isImportCompleted === false\"\n        >\n          {{ $t(\"modal.done\") }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport db from \"@/store/db\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport Dexie from \"dexie\";\nimport { exportDB } from \"dexie-export-import\";\nimport localForage from \"localforage\";\nimport { computed, reactive, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  prefixPlaceholder,\n  preview,\n  suffixPlaceholder,\n  templatePlaceholder,\n} from \"../helpers/template-helper\";\nimport { nextTick } from \"vue\";\nimport { Type } from \"./BotSettings/settings.const\";\n\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst formRef = ref(null);\nconst isOpenAddEditAction = ref(false);\nconst actionName = ref(\"\");\nconst prefix = ref(\"\");\nconst template = ref(\"\");\nconst suffix = ref(\"\");\nconst previewRef = ref(\"\");\nconst importProgressText = ref(\"\");\nconst isImportCompleted = ref(false);\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: -1,\n  color: \"\",\n});\nconst templateParametersInfo = `\n#### ${i18n.global.t(\"chat.templateParameters\")}:\n| ${i18n.global.t(\"chat.parameter\")}|${i18n.global.t(\"chat.description\")}|\n|-|-|\n|{botName}|${i18n.global.t(\"chat.botNameDesc\")}|\n|{botResponse}|${i18n.global.t(\"chat.botResponseDesc\")}|`;\nconst isShowTemplateParametersDialog = ref(false);\nconst isShowImportProgressDialog = ref(false);\nconst store = useStore();\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\nconst previewSampleData = [\n  {\n    botName: \"Copilot (Creative)\",\n    botResponse: \"Hello, this is Bing. How are you today? 😊\",\n  },\n  {\n    botName: \"ChatGPT (GPT-3.5)\",\n    botResponse: \"Hello! How can I assist you today?\",\n  },\n  {\n    botName: \"Bard\",\n    botResponse: \"Hi there! How can I help you today?\",\n  },\n  {\n    botName: \"YouChat\",\n    botResponse: \"Hi there! How can I assist you today?\",\n  },\n];\nconst brandId = \"chat\";\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"updateDebounceInterval\",\n    title: \"chat.updateDebounceInterval\",\n    description: \"chat.updateDebounceIntervalDesc\",\n    min: 0,\n    max: 2000,\n    step: 100,\n  },\n];\nlet editIndex = undefined;\nlet isEdit = false;\nconst required = (value) =>\n  value?.trim() ? true : i18n.global.t(\"prompt.required\");\n\nconst SETTING_FILE_NAME = \"localforage.json\";\nconst CHAT_FILE_NAME = \"ChatALL.json\";\nconst EXPORT_IMPORT_FILE_EXTENSION = \".ChatALL\";\n\nfunction getExportedFileName() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n  return fileName;\n}\n\nasync function exportData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.exportDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  try {\n    const settingBlob = getSettingWithoutBotSetting();\n    const chatHistoryBlob = await exportDB(db);\n\n    const { default: JSZip } = await import(\"jszip\");\n    const zip = new JSZip();\n    zip.file(SETTING_FILE_NAME, settingBlob);\n    zip.file(CHAT_FILE_NAME, chatHistoryBlob);\n    zip.generateAsync({ type: \"blob\" }).then(function (zipBlob) {\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${getExportedFileName()}${EXPORT_IMPORT_FILE_EXTENSION}`;\n      document.body.appendChild(a);\n\n      // Click the anchor element to download the file.\n      a.click();\n\n      // Remove the anchor element from the document body.\n      document.body.removeChild(a);\n\n      // Revoke the URL for the blob.\n      URL.revokeObjectURL(url);\n    });\n    snackbar.text = i18n.global.t(\"chat.exportSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.exportFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  }\n  snackbar.show = true;\n}\n\nasync function importData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.importDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  importProgressText.value = \"\";\n  isImportCompleted.value = false;\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.accept = EXPORT_IMPORT_FILE_EXTENSION;\n  input.addEventListener(\"change\", importDataOnChangeFile);\n  document.body.appendChild(input);\n\n  // Click the input element to select the file.\n  input.click();\n}\n\nasync function importDataOnChangeFile(event) {\n  try {\n    isShowImportProgressDialog.value = true;\n    logImportProgress(`Import started`);\n\n    const file = event.target.files[0];\n    const { default: JSZip } = await import(\"jszip\");\n    logImportProgress(`Reading file \"${file.name}\" (${file.size} bytes)`);\n    const zip = await JSZip.loadAsync(file);\n    logImportProgress(\n      `Done reading file \"${file.name}\", containing ${\n        Object.keys(zip?.files).length\n      } files`,\n    );\n\n    let chatString;\n    let settingString;\n    await new Promise((resolve, reject) => {\n      let fileCount = 0;\n      zip.forEach(async (relativePath, zipEntry) => {\n        try {\n          logImportProgress(`Reading file \"${relativePath}\"`);\n          const zipFileString = await zipEntry.async(\"string\");\n          logImportProgress(\n            `Done reading \"${relativePath}\" content, length: ${zipFileString?.length}`,\n          );\n          if (relativePath === CHAT_FILE_NAME) {\n            chatString = zipFileString;\n          } else if (relativePath === SETTING_FILE_NAME) {\n            settingString = zipFileString;\n          }\n          fileCount++;\n          if (fileCount === 2) {\n            resolve();\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n\n    // import ChatALL db\n    let unchangedCount = 0;\n    let updatedCount = 0;\n    let addedCount = 0;\n    let errorCount = 0;\n    const addedRecords = [];\n    const updatedRecords = [];\n    const errorRecords = [];\n\n    logImportProgress(`\"${CHAT_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${CHAT_FILE_NAME}\" content to JSON object`);\n    const chatDbObject = JSON.parse(chatString);\n    try {\n      logImportProgress(`Retrieving chats table records`);\n      const chatRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"chats\",\n      )?.rows;\n      logImportProgress(`Filtering $types from chats record`);\n      const rows = chatRow\n        .filter((record) => record.index && typeof record.index === \"string\")\n        .map((record) => {\n          delete record.$types;\n          return record;\n        });\n      logImportProgress(\n        `Importing. There are ${chatRow?.length} records in chats table. This process may take some time.`,\n      );\n\n      for (const row of rows) {\n        try {\n          const chat = await Chats.table.get(row.index);\n          if (chat) {\n            if (compare(chat, row)) {\n              unchangedCount++;\n            } else {\n              await Chats.table.put(row);\n              updatedRecords.push({ row, table: \"chats\" });\n              updatedCount++;\n            }\n          } else {\n            await Chats.table.add(row);\n            addedRecords.push({ row, table: \"chats\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"chats\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `chats table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving messages table records`);\n      const messagesRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"messages\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${messagesRow?.length} records in messages table. This process may take some time.`,\n      );\n      for (const row of messagesRow) {\n        try {\n          const message = await Messages.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Messages.table.put(row);\n              updatedRecords.push({ row, table: \"messages\" });\n              updatedCount++;\n            }\n          } else {\n            await Messages.table.add(row);\n            addedRecords.push({ row, table: \"messages\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"messages\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `messages table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving threads table records`);\n      const threadsRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"threads\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${threadsRow?.length} records in threads table. This process may take some time.`,\n      );\n      for (const row of threadsRow) {\n        try {\n          const message = await Threads.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Threads.table.put(row);\n              updatedRecords.push({ row, table: \"threads\" });\n              updatedCount++;\n            }\n          } else {\n            await Threads.table.add(row);\n            addedRecords.push({ row, table: \"threads\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"threads\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `threads table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    // import localforage keyvaluepairs\n    logImportProgress(`\"${SETTING_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${SETTING_FILE_NAME}\" content to JSON object`);\n    const settingDbObject = JSON.parse(settingString);\n    logImportProgress(`Retrieving keyvaluepairs table records`);\n    const rows = settingDbObject.data.data.find(\n      (d) => d.tableName === \"keyvaluepairs\",\n    )?.rows;\n    logImportProgress(\n      `Importing. There are ${rows?.length} records in keyvaluepairs table. This process may take some time.`,\n    );\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      if (rows.length && rows[0].$ && rows[0].$.length > 1) {\n        const chatallKey = rows[0].$[1];\n        for (const key in chatallKey) {\n          try {\n            if (Array.isArray(chatallKey[key])) {\n              const storeIndexes = store.state[key].map((item) => item.index);\n              for (const importItem of chatallKey[key]) {\n                let index = storeIndexes.indexOf(importItem.index);\n                if (index === -1) {\n                  store.commit(\"pushSettingArray\", {\n                    key,\n                    value: importItem,\n                  });\n                  addedRecords.push({\n                    row: `key: ${key}, added: ${JSON.stringify(importItem)}`,\n                    table: \"keyvaluepairs\",\n                  });\n                  addedCount++;\n                } else {\n                  if (compare(importItem, store.state[key][index])) {\n                    unchangedCount++;\n                  } else {\n                    store.commit(\"updateSettingArray\", {\n                      key,\n                      index,\n                      value: importItem,\n                    });\n                    updatedRecords.push({\n                      row: `key: ${key}, updated: ${JSON.stringify(\n                        importItem,\n                      )}`,\n                      table: \"keyvaluepairs\",\n                    });\n                    updatedCount++;\n                  }\n                }\n              }\n            } else {\n              if (compare(chatallKey[key], store.state[key])) {\n                unchangedCount++;\n              } else {\n                store.commit(\"updateSetting\", {\n                  key,\n                  value: chatallKey[key],\n                });\n                updatedRecords.push({\n                  row: `key: ${key}, updated: ${JSON.stringify(\n                    chatallKey[key],\n                  )}`,\n                  table: \"keyvaluepairs\",\n                });\n                updatedCount++;\n              }\n            }\n          } catch (error) {\n            errorCount++;\n            console.error(error);\n            errorRecords.push({\n              row: `key: ${key}, error: ${JSON.stringify(chatallKey[key])}`,\n              table: \"keyvaluepairs\",\n            });\n          }\n        }\n      } else {\n        logImportProgress(`Invalid rows`);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `keyvaluepairs table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    logImportProgress(`Added:\\n${JSON.stringify(addedRecords, null, 2)}`);\n    logImportProgress(`Updated:\\n${JSON.stringify(updatedRecords, null, 2)}`);\n    logImportProgress(`Error:\\n${JSON.stringify(errorRecords, null, 2)}`);\n\n    logImportProgress(\n      `Import completed, added ${addedRecords.length}, updated ${updatedRecords.length}, error ${errorRecords.length}`,\n    );\n\n    snackbar.text = i18n.global.t(\"chat.importSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.importFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  } finally {\n    // Remove the input element from the document body.\n    document.body.removeChild(event.target);\n    isImportCompleted.value = true;\n    snackbar.show = true;\n  }\n}\n\nfunction compare(obj1, obj2) {\n  //Loop through properties in object 1\n  for (var p in obj1) {\n    //Check property exists on both objects\n    if (\n      Object.hasOwnProperty.call(obj1, p) !==\n      Object.hasOwnProperty.call(obj2, p)\n    )\n      return false;\n\n    switch (typeof obj1[p]) {\n      //Deep compare objects\n      case \"object\":\n        if (!compare(obj1[p], obj2[p])) return false;\n        break;\n      //Compare function code\n      case \"function\":\n        if (\n          typeof obj2[p] == \"undefined\" ||\n          (p != \"compare\" && obj1[p].toString() != obj2[p].toString())\n        )\n          return false;\n        break;\n      //Compare values\n      default:\n        if (obj1[p] != obj2[p]) return false;\n    }\n  }\n\n  //Check object 2 for any extra properties\n  for (const p in obj2) {\n    if (typeof obj1[p] == \"undefined\") return false;\n  }\n  return true;\n}\n\nfunction logImportProgress(text) {\n  importProgressText.value += `${new Date().toISOString()} - ${text}\\n`;\n  const element = document.getElementById(\"import-log-textarea\");\n  if (element) {\n    nextTick(() => (element.scrollTop = element.scrollHeight));\n  }\n}\n\nasync function getSettingWithoutBotSetting() {\n  await localForage._dbInfo.db.close();\n  const settingDb = await new Dexie(\"localforage\").open();\n  const userSettingBlob = await exportDB(settingDb);\n  const userSettingText = await userSettingBlob.text();\n  const userSettingJson = JSON.parse(userSettingText);\n  const allBotBrandId = bots.all.map((bot) => bot.constructor._brandId);\n  for (const brandId of allBotBrandId) {\n    // delete bot related setting\n    delete userSettingJson.data.data[0].rows[0].$[1][brandId];\n  }\n  const str = JSON.stringify(userSettingJson);\n  const bytes = new TextEncoder().encode(str);\n  return new Blob([bytes], {\n    type: \"application/json;charset=utf-8\",\n  });\n}\n\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n\nfunction add() {\n  isEdit = false;\n  actionName.value = \"\";\n  prefix.value = prefixPlaceholder;\n  template.value = templatePlaceholder;\n  suffix.value = suffixPlaceholder;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nfunction edit(item) {\n  isEdit = true;\n  actionName.value = item.name;\n  prefix.value = item.prefix;\n  template.value = item.template;\n  suffix.value = item.suffix;\n  editIndex = item.index;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nasync function onInputTemplate() {\n  try {\n    previewRef.value = await preview(\n      prefix.value,\n      template.value,\n      suffix.value,\n      previewSampleData,\n    );\n  } catch (error) {\n    previewRef.value = `Error:\\n${error.message}`;\n  }\n}\n\nasync function addEditAction() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit) {\n      store.commit(\"editAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n        index: editIndex,\n      });\n    } else {\n      store.commit(\"addAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n      });\n    }\n    isOpenAddEditAction.value = false;\n  }\n}\n\nasync function deleteAction(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideAction\"),\n  );\n  if (result) {\n    store.commit(\"deleteAction\", { ...item });\n  }\n}\n</script>\n<style scoped>\n.no-text-transform {\n  text-transform: none !important;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() .v-textarea .v-field {\n  padding: 0;\n}\n</style>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatSetting.vue?vue&type=style&index=0&id=0c320d85&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c320d85\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n                <CommonBotSettings\n                  :settings=\"settings\"\n                  brand-id=\"general\"\n                  mutation-type=\"setGeneral\"\n                ></CommonBotSettings>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\nimport { Type } from \"@/components/BotSettings/settings.const\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport GeminiBotSettings from \"@/components/BotSettings/GeminiBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport Falcon180bBotSettings from \"@/components/BotSettings/Falcon180bBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PhindBotSettings from \"@/components/BotSettings/PhindBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\nimport ChatGLMBotSettings from \"./BotSettings/ChatGLMBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"chatGlm\", component: ChatGLMBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"falcon\", component: Falcon180bBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"gemini\", component: GeminiBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"phind\", component: PhindBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n  { name: \"繁體中文\", code: \"zhtw\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n\nconst settings = [\n  {\n    type: Type.Checkbox,\n    name: \"isShowMenuBar\",\n    label: \"Show Menu Bar\",\n  },\n];\n\nwatch(\n  () => store.state.general.isShowMenuBar,\n  () =>\n    ipcRenderer.invoke(\n      \"set-is-show-menu-bar\",\n      store.state.general.isShowMenuBar,\n    ),\n);\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=272b1d76&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-272b1d76\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert {\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=5e9ca404&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in shownBots\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n            <template v-slot:append>\n              <v-btn-toggle\n                v-model=\"selectedTags\"\n                divided\n                color=\"primary\"\n                group\n                variant=\"outlined\"\n                rounded=\"xl\"\n                @update:model-value=\"filterBots($event)\"\n              >\n                <v-btn v-for=\"(tag, index) in tags\" :key=\"index\" :value=\"tag\">\n                  {{ $t(`footer.${tag}`) }}\n                </v-btn>\n              </v-btn-toggle>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport { botTags } from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nlet menu = ref(false);\n\nconst props = defineProps([\"favBots\"]);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst tags = Object.keys(botTags);\nconst selectedTags = ref([]);\n\nconst notDisabledBots = bots.all.filter((bot) => !bot.isDisabled());\nconst shownBots = ref(notDisabledBots);\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\nfunction filterBots(selectedTags) {\n  let filteredIn = notDisabledBots;\n\n  // If the toggle is not multi-select, the selectedTags will be a string\n  if (typeof selectedTags === \"string\") {\n    selectedTags = [selectedTags];\n  }\n\n  if (selectedTags?.length) {\n    const tagBots = selectedTags.map((tag) => botTags[tag]);\n    filteredIn = filteredIn.filter((bot) => {\n      return tagBots.every((tagBot) => tagBot.includes(bot));\n    });\n  }\n  shownBots.value = filteredIn;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3;\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=4ea8786e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1),\ntd:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=e6ba2cb4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e6ba2cb4\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\nimport Messages from \"@/store/messages\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\nconst emit = defineEmits([\"updateActiveBots\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  if (!props.chat || !props.chat.favBots) {\n    return [];\n  }\n  const _favBots = [];\n  props.chat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n  emit(\"updateActiveBots\", activeBots);\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nasync function sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const count = await Messages.getMessagesCount(store.state.currentChatIndex);\n  const isFirstPrompt = count === 0;\n  await store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n  if (isFirstPrompt) {\n    updateChatTitleWithFirstPrompt();\n  }\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nasync function updateChatTitleWithFirstPrompt() {\n  // if this is first prompt, update chat title to first 30 characters of user prompt\n  const messages = await Messages.getMessages(store.state.currentChatIndex);\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload: {\n      title: messages[0].content.substring(0, 30),\n    },\n  });\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended {\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner {\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=283581ed&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-283581ed\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: 0.2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0 !important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: 0.5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=6015a817&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6015a817\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n  padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=4c4cde2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c4cde2d\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font:\n    11px ui-monospace,\n    SFMono-Regular,\n    SF Mono,\n    Menlo,\n    Consolas,\n    Liberation Mono,\n    monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110, 118, 129, 0.4);\n  border-bottom-color: rgba(110, 118, 129, 0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110, 118, 129, 0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=28fc2763&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28fc2763\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    height=\"75%\"\n    width=\"80%\"\n    :model-value=\"props.open\"\n    @update:model-value=\"closeDialog\"\n  >\n    <v-card height=\"100%\">\n      <v-card-title>\n        <v-row>\n          <v-col class=\"d-flex align-center\">\n            {{ props.action.name }}\n            <v-btn\n              flat\n              @click=\"isEdit = !isEdit\"\n              :icon=\"isEdit ? 'mdi-eye' : 'mdi-pencil-outline'\"\n            ></v-btn>\n          </v-col>\n          <v-col class=\"d-flex align-center justify-end\">\n            <v-label>{{ previewTextarea.length }}</v-label>\n          </v-col>\n        </v-row>\n      </v-card-title>\n      <v-card-text class=\"pt-0 overflow-auto\">\n        <v-textarea\n          hide-details\n          rows=\"20\"\n          v-show=\"isEdit\"\n          v-model=\"previewTextarea\"\n          @input=\"previewText = previewTextarea\"\n        >\n        </v-textarea>\n        <chat-prompt\n          v-show=\"!isEdit\"\n          :message=\"{ content: previewText }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-card-text>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          class=\"send-prompt-btn\"\n          elevation=\"2\"\n          :disabled=\"\n            previewTextarea.trim() === '' ||\n            selectedBots.length === 0 ||\n            !chatRef\n          \"\n          @click=\"send\"\n        >\n          {{ $t(\"footer.sendPrompt\") }}\n        </v-btn>\n        <div class=\"bot-logos\">\n          <BotLogo\n            v-for=\"(bot, index) in favBots\"\n            :id=\"`fav-bot-${index + 1}`\"\n            :key=\"index\"\n            :bot=\"bot.instance\"\n            :active=\"bot.selected\"\n            :data-id=\"bot.classname\"\n            size=\"36\"\n            @click=\"bot.selected = !bot.selected\"\n          />\n        </div>\n        <v-form class=\"d-flex\">\n          <v-radio-group v-model=\"chatRef\" density=\"compact\" hide-details>\n            <v-radio :label=\"$t('chat.inNewChat')\" value=\"new\"></v-radio>\n            <v-radio\n              :label=\"$t('chat.inCurrentChat')\"\n              value=\"current\"\n            ></v-radio>\n          </v-radio-group>\n        </v-form>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, toRaw, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { preview } from \"../helpers/template-helper\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport BotLogo from \"@/components/Footer/BotLogo.vue\";\nimport _bots from \"@/bots\";\nimport Chats from \"@/store/chats\";\n\nconst store = useStore();\nconst isEdit = ref(false);\nconst previewText = ref(\"\");\nconst previewTextarea = ref(\"\");\nconst chatRef = ref(undefined);\nconst emit = defineEmits([\"update:open\"]);\nconst props = defineProps([\"open\", \"action\", \"responses\", \"activeBots\"]);\nwatch(() => props.open, onChangeOpenProp);\n\nconst selectedResponses = computed(() =>\n  store.state.selectedResponses.map((res) => {\n    return { botName: res.className, botResponse: res.content };\n  }),\n);\nconst favBots = ref([]);\nconst selectedBots = computed(() =>\n  favBots.value.filter((bot) => bot.selected),\n);\n\nfunction onChangeOpenProp() {\n  if (props.open) {\n    updatePreview();\n    updateFavBots();\n  } else {\n    isEdit.value = false;\n  }\n}\n\nasync function updatePreview() {\n  previewTextarea.value = await preview(\n    props.action.prefix,\n    props.action.template,\n    props.action.suffix,\n    selectedResponses.value,\n  );\n  previewText.value = previewTextarea.value;\n}\n\nfunction updateFavBots() {\n  favBots.value = [];\n  for (const key in props.activeBots) {\n    if (props.activeBots[key]) {\n      favBots.value.push({\n        classname: key,\n        selected: false,\n        instance: _bots.getBotByClassName(key),\n      });\n    }\n  }\n}\n\nfunction closeDialog(value) {\n  emit(\"update:open\", value);\n}\n\nasync function send() {\n  let newChatIndex;\n  if (chatRef.value === \"new\") {\n    newChatIndex = await Chats.add();\n    store.commit(\"selectChat\", newChatIndex);\n  }\n  await store\n    .dispatch(\"sendPrompt\", {\n      prompt: previewTextarea.value,\n      bots: selectedBots.value.map((bot) => toRaw(bot).instance),\n    })\n    .then(() => {\n      if (chatRef.value === \"new\") {\n        store.commit(\"editChatTitle\", {\n          index: newChatIndex,\n          payload: {\n            title: previewTextarea.value.substring(0, 30),\n          },\n        });\n      }\n    });\n  closeDialog(false);\n  deselectAllResponses();\n}\n\nfunction deselectAllResponses() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n</script>\n\n<style scoped>\n:deep() .v-textarea textarea {\n    height: 100%;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n.bot-logos {\n  gap: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n</style>\n","import script from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatAction.vue?vue&type=style&index=0&id=66e42126&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66e42126\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\" :class=\"{ paddingTopZero: !isShowAppBar }\">\n        <v-slide-y-transition>\n          <v-app-bar\n            :id=\"SHORTCUT_APP_BAR.elementId\"\n            @shortkey=\"\n              isShowAppBar = !isShowAppBar;\n              ipcRenderer.invoke('set-is-show-menu-bar', isShowAppBar);\n            \"\n            v-shortkey=\"SHORTCUT_APP_BAR.key\"\n            v-show=\"isShowAppBar\"\n            :style=\"{\n              transform: isShowAppBar ? 'translateY(0)' : 'translateY(-100%)',\n            }\"\n            class=\"header-content pa-0\"\n          >\n            <!-- Start Header  -->\n            <div class=\"header-content\" v-show=\"isSelectedResponsesEmpty\">\n              <v-app-bar-nav-icon\n                :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n                variant=\"text\"\n                @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n                @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n                v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n              >\n              </v-app-bar-nav-icon>\n              <img\n                :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n                class=\"logo\"\n                src=\"@/assets/logo-banner.png\"\n                alt=\"ChatALL\"\n              />\n            </div>\n            <div\n              class=\"column-icons header-content\"\n              v-show=\"isSelectedResponsesEmpty\"\n            >\n              <img\n                v-for=\"columnCount in 3\"\n                :id=\"`column-${columnCount}`\"\n                :key=\"columnCount\"\n                :src=\"getColumnImage(columnCount)\"\n                @click=\"changeColumns(columnCount)\"\n                @shortkey=\"changeColumns(columnCount)\"\n                v-shortkey=\"[`f${columnCount}`]\"\n                :class=\"{\n                  selected: columns === columnCount,\n                  'dark-png': store.state.theme === Theme.DARK,\n                }\"\n              />\n            </div>\n            <div\n              class=\"header-content\"\n              style=\"padding-right: 16px\"\n              v-show=\"isSelectedResponsesEmpty\"\n            >\n              <v-icon\n                :id=\"SHORTCUT_FIND.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-magnify\"\n                size=\"x-large\"\n                @click=\"openFind()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n                @shortkey=\"clearMessages\"\n                :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-broom\"\n                size=\"x-large\"\n                @click=\"clearMessages()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_SETTINGS.key\"\n                @shortkey=\"openSettingsModal\"\n                :id=\"SHORTCUT_SETTINGS.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-cog\"\n                size=\"x-large\"\n                @click=\"openSettingsModal()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n                @shortkey=\"toggleShortcutGuide\"\n                :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-help\"\n                size=\"x-large\"\n                @click=\"toggleShortcutGuide()\"\n              ></v-icon>\n            </div>\n            <!-- End Header  -->\n            <!-- Start Selected Responses  -->\n            <div\n              class=\"header-content pr-3\"\n              style=\"text-wrap: nowrap\"\n              v-show=\"!isSelectedResponsesEmpty\"\n            >\n              <v-btn icon color=\"primary\" @click=\"deselectAll\">\n                <v-icon>mdi-arrow-left</v-icon>\n              </v-btn>\n              {{\n                $t(\"header.selectedResponsesCount\", {\n                  selectedCount: store.state.selectedResponses.length,\n                })\n              }}\n            </div>\n            <div\n              class=\"header-content overflow-auto\"\n              v-show=\"!isSelectedResponsesEmpty\"\n            >\n              <v-btn\n                v-for=\"action in userActions\"\n                color=\"primary\"\n                class=\"no-text-transform\"\n                :text=\"action.name\"\n                :key=\"action.index\"\n                @click=\"callAction(action)\"\n              ></v-btn>\n            </div>\n            <!-- End Selected Responses  -->\n          </v-app-bar>\n        </v-slide-y-transition>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages :chat=\"currentChat\" :columns=\"columns\"></ChatMessages>\n        <FooterBar\n          ref=\"footerBarRef\"\n          :chat=\"currentChat\"\n          @update-active-bots=\"(bots) => (activeBots = bots)\"\n        ></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n      <ChatAction\n        v-model:open=\"isChatActionOpen\"\n        :action=\"action\"\n        :responses=\"store.state.selectedResponses\"\n        :activeBots=\"activeBots\"\n      ></ChatAction>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_APP_BAR,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\nimport Chats from \"@/store/chats\";\nimport { initializeQueues, startQueuesProcessing } from \"@/store/queue\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { onScroll } from \"./helpers/scroll-helper\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\nimport ChatAction from \"@/components/ChatAction.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nconst currentChat = useObservable(\n  liveQuery(() => {\n    const chat = Chats.table.orderBy(\"selectedTime\").last();\n    console.log(\"chat changed\");\n    return chat;\n  }),\n  { initialValue: {} },\n);\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst isShowAppBar = ref(store.state.general.isShowAppBar);\nconst chatDrawerRef = ref();\nconst isSelectedResponsesEmpty = ref(true);\nconst isChatActionOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\nlet action;\nlet activeBots;\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value || !isShowAppBar.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    isShowAppBar.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n\n  initializeQueues(store);\n  startQueuesProcessing();\n\n  window.addEventListener(\"scroll\", onScroll);\n});\n\nwatch(\n  () => store.state.selectedResponses.length,\n  () => {\n    isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  },\n);\n\nwatch(\n  () => isShowAppBar.value,\n  () =>\n    store.commit(\"setGeneral\", {\n      isShowAppBar: isShowAppBar.value,\n      isShowMenuBar: isShowAppBar.value,\n    }),\n);\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n\nfunction deselectAll() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n\nfunction callAction(value) {\n  action = value;\n  isChatActionOpen.value = true;\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Arial\", sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nheader {\n  width: 100%;\n  background-color: rgb(var(--v-theme-header));\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 16px;\n  z-index: 999;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n  opacity: 0.5;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n  background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between;\n}\n\n.vuepress-markdown-body {\n  color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n  padding: 0 !important;\n  background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n  display: inline !important;\n}\n.vuepress-markdown-body .arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n  display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n)) !important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font)) !important;\n  background-color: rgb(var(--v-theme-code-background)) !important;\n}\n.vuepress-markdown-body pre[class*=\"v-md-prism-\"] code,\n.vuepress-markdown-body pre code {\n  color: #fff !important;\n  background-color: initial !important;\n}\n.no-text-transform {\n  text-transform: none !important;\n}\n.paddingTopZero {\n  padding-top: 0!important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=25357c3a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setAzureOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"azureApiKey\",\n    title: \"azureOpenaiApi.azureOpenAIApiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"b40...\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureApiInstanceName\",\n    title: \"azureOpenaiApi.azureApiInstanceName\",\n    description: \"azureOpenaiApi.azureApiInstanceNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiDeploymentName\",\n    title: \"azureOpenaiApi.azureOpenAIApiDeploymentName\",\n    description: \"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiVersion\",\n    title: \"azureOpenaiApi.azureOpenAIApiVersion\",\n    description: \"azureOpenaiApi.azureOpenAIApiVersionPrompt\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"azureOpenaiApi.temperature\",\n    description: \"azureOpenaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"azureOpenaiApi.temperature0\",\n      2: \"azureOpenaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=596a712c\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/google/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6f3921cb\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/zhipu/ChatGLMBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHATGLM-TOKEN message from background.js\n    ipcRenderer.on(\"CHATGLM-TOKENS\", (event, token) => {\n      this.setChatGLM(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setChatGLM\"]),\n  },\n};\n</script>\n","import { render } from \"./ChatGLMBotSettings.vue?vue&type=template&id=32783c80\"\nimport script from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <template v-for=\"setting in settings\" :key=\"setting.name\">\n      <v-list-item-title v-if=\"setting.title\">\n        <!-- falcon.temperature -->\n        {{ $t(setting.title) }}</v-list-item-title\n      >\n      <v-list-item-subtitle v-if=\"setting.description\">\n        <!-- falcon.temperaturePrompt -->\n        {{ $t(setting.description) }}</v-list-item-subtitle\n      >\n\n      <v-text-field\n        v-if=\"setting.type === Type.Text\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-text-field>\n      <v-select\n        v-else-if=\"setting.type === Type.Select\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-select>\n      <v-slider\n        v-else-if=\"setting.type === Type.Slider\"\n        v-model=\"settingState[setting.name] /* falcon.temperature */\"\n        color=\"primary\"\n        :min=\"setting.min\"\n        :max=\"setting.max\"\n        :step=\"setting.step\"\n        :ticks=\"translate(setting.ticks)\"\n        :show-ticks=\"\n          /* 'show-ticks' cause lag issue when the possible value to slide is large */\n          setting.ticks ? 'always' : false\n        \"\n        thumb-label\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"settingState[setting.name] /* falcon.temperature */\"\n            :ref=\"\n              (el) => {\n                refs[setting.name] = el;\n              }\n            \"\n            type=\"number\"\n            style=\"width: 100px\"\n            density=\"compact\"\n            hide-details\n            variant=\"outlined\"\n            @update:model-value=\"\n              /* setFalcon({ temperature: validateInput(temperature, $event) }) */\n              store.commit(mutationType, {\n                [setting.name]: validateSliderInput(setting, $event),\n              })\n            \"\n          ></v-text-field>\n        </template>\n      </v-slider>\n      <v-combobox\n        v-else-if=\"setting.type === Type.Combobox\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-combobox>\n      <v-checkbox\n        v-else-if=\"setting.type === Type.Checkbox\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        color=\"primary\"\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-checkbox>\n    </template>\n  </v-list-item>\n</template>\n\n<script setup>\nimport i18n from \"@/i18n\";\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Type } from \"./settings.const\";\nconst store = useStore();\nconst settingState = computed(() => store.state[props.brandId]);\nconst refs = ref([]);\nconst props = defineProps({\n  brandId: {\n    type: String,\n    required: true,\n  },\n  settings: {\n    type: Object,\n    required: true,\n  },\n  mutationType: {\n    type: String,\n    required: true,\n  },\n  watcher: {\n    type: Function,\n    default: undefined,\n  },\n});\n\nif (props.watcher) {\n  watch(\n    () => settingState.value,\n    (newValue) => {\n      console.log(`${props.brandId}: ${JSON.stringify(newValue)}`);\n      props.watcher(newValue);\n    },\n  );\n}\n\nonMounted(() => {\n  for (const setting of props.settings) {\n    if (setting.type !== Type.Slider) {\n      continue;\n    }\n    // Set the 'min', 'max' and 'step' attributes for the input type 'number' spin button\n    const inputElement = getInputElement(refs.value[setting.name]);\n    inputElement.min = setting.min;\n    inputElement.max = setting.max;\n    inputElement.step = setting.step;\n  }\n});\n\nfunction translate(settings) {\n  if (settings) {\n    let rets = {};\n    Object.keys(settings).forEach((key) => {\n      rets[key] = i18n.global.t(settings[key]);\n    });\n    return rets;\n  }\n  return settings;\n}\n\nfunction validateSliderInput(setting, value) {\n  // validate input via keyboard within setting min and max\n  value = value || 0; // set zero if empty string\n  const input = getInputElement(refs.value[setting.name]);\n  const valuefloat = parseFloat(value);\n  const inputMaxFloat = parseFloat(input.max);\n  const inputMinFloat = parseFloat(input.min);\n  if (valuefloat > inputMaxFloat) {\n    return inputMaxFloat;\n  } else if (valuefloat < inputMinFloat) {\n    return inputMinFloat;\n  } else {\n    return valuefloat;\n  }\n}\n\nfunction getInputElement(ref) {\n  return ref.$el.querySelector(\"input\");\n}\n</script>\n","import script from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setFalcon\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/Falcon180bBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"falcon.temperature\",\n    description: \"falcon.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"maxNewTokens\",\n    title: \"falcon.maxNewTokens\",\n    description: \"falcon.maxNewTokensPrompt\",\n    min: 0,\n    max: 8192,\n    step: 64,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"falcon.topP\",\n    description: \"falcon.topPPrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"repetitionPenalty\",\n    title: \"falcon.repetitionPenalty\",\n    description: \"falcon.repetitionPenaltyPrompt\",\n    min: 1,\n    max: 2,\n    step: 0.05,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./Falcon180bBotSettings.vue?vue&type=template&id=24bc8a0a\"\nimport script from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGemini\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/google/GeminiBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"openaiApi.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      1: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"topK\",\n    title: \"gemini.topK\",\n    description: \"gemini.topKPrompt\",\n    min: 1,\n    max: 100,\n    step: 1,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"gemini.topP\",\n    description: \"gemini.topPPrompt\",\n    min: 0.1,\n    max: 1,\n    step: 0.01,\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./GeminiBotSettings.vue?vue&type=template&id=1d9b4dae\"\nimport script from \"./GeminiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GeminiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGradio\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"url\",\n    title: \"gradio.url\",\n    description: \"gradio.urlPrompt\",\n    placeholder: i18n.global.t(\"settings.forExample\", {\n      example: \"https://*.hf.space, http://127.0.0.1:7861\",\n    }),\n  },\n  {\n    type: Type.Text,\n    name: \"fnIndex\",\n    title: \"gradio.fnIndex\",\n    description: \"gradio.fnIndexPrompt\",\n    placeholder: \"0\",\n  },\n];\n\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=2124010e\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"openaiApi.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"sk-...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      2: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n  {\n    type: Type.Text,\n    name: \"alterUrl\",\n    title: \"openaiApi.alterUrl\",\n    description: \"openaiApi.alterUrlPrompt\",\n    placeholder: \"https://your.proxy.com/v1\",\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=25d4d7e5\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setPhind\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/PhindBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Select,\n    name: \"model\",\n    title: \"Model\",\n    items: [\"Phind Model\", \"GPT-3.5-Turbo\", \"GPT-4\"],\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./PhindBotSettings.vue?vue&type=template&id=f7d51668\"\nimport script from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the POE-FORMKEY message from background.js\n    ipcRenderer.on(\"POE-FORMKEY\", (event, formkey) => {\n      this.setPoe({ formkey });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setPoe\"]),\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=276b8eed\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setWenxinQianfan\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"API Key & Secret Key\",\n    description: \"settings.secretPrompt\",\n    label: \"API Key\",\n    placeholder: \"2125NA8mQy7gC52Pq9BK3tvk\",\n    hideDetails: true,\n  },\n  {\n    type: Type.Text,\n    name: \"secretKey\",\n    label: \"Secret Key\",\n    placeholder: \"IWf2pyYm26fz8GgNAHdkPkznHgazlffQ\",\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=6a339c52\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 91604,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings\": 62284,\n\t\"./BardBotSettings.vue\": 62284,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings\": 49618,\n\t\"./ChatGLMBotSettings.vue\": 49618,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./CommonBotSettings\": 23610,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings\": 24448,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiBotSettings\": 38963,\n\t\"./GeminiBotSettings.vue\": 38963,\n\t\"./GradioAppBotSettings\": 36623,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 30514,\n\t\"./OpenAIAPIBotSettings.vue\": 30514,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings\": 24317,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 41084,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 64716,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633,\n\t\"./settings.const\": 62128,\n\t\"./settings.const.js\": 62128\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings.vue\": 62284,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings.vue\": 49618,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiBotSettings.vue\": 38963,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 30514,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"90\":\"d74f41c7\",\"277\":\"07a8db26\",\"657\":\"1fdde78b\",\"733\":\"19e70dff\",\"857\":\"20037914\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"chatall:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Bot","constructor","_defineProperty","getInstance","this","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","replace","getFullname","prefix","isDisabled","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","isAvailable","_isAvailable","disabled","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","Promise","resolve","reject","_lock","acquire","async","ret","err","timeout","_sendPrompt","prompt","onUpdateResponse","callbackParam","Error","sendPrompt","content","botName","done","executeSendPrompt","message","console","error","LoginError","link","getLoginHyperlink","wrapCollapsedSection","checkAvailability","_checkAvailability","disable","createChatContext","getChatContext","createIfNotExists","context","Chats","getCurrentChat","contexts","setChatContext","store","commit","botClassname","text","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","status","response","url","super","name","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","available","Date","getTime","ttl","userInfoResponse","axios","get","data","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","post","onDownloadProgress","progressEvent","onResponseDownloadProgress","then","catch","responses","currentTarget","split","filter","n","lastResponse","JSON","parse","length","Array","isArray","replies","is_final_chunk","stringify","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","AsyncLock","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","uuid","attachments","files","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","SSE","withCredentials","addEventListener","completion","readyState","CLOSED","stream","uuidv4","createResponse","LangChainBot","messages","bufferMemory","BufferMemory","getPastRounds","shift","forEach","item","storedMessage","type","toLowerCase","humanPrefix","chatHistory","addUserMessage","aiPrefix","addAIChatMessage","addMessage","res","_chatModel","getMessages","callbacks","handleLLMNewToken","handleLLMEnd","call","map","toDict","setupModel","_setupModel","undefined","MOSSBot","getAuthHeader","moss","refresh","id","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","temperature","repetition_penalty","max_new_tokens","message_id","queryString","event_type","ipcRenderer","window","require","PhindBot","rewrite","questionToRewrite","questionHistory","answerHistory","search","q","query","browserLanguage","userSearchRules","date","formatDate","getFormattedDate","question","webResults","options","language","detailed","anonUserId","getUUID","answerModel","phind","customLinks","start","isSuccess","startsWith","hostname","URL","replaceAll","_onStreamProgress","e","CONNECTING","dispatchEvent","CustomEvent","_setReadyState","OPEN","responseText","substring","progress","parts","chunk","lastPart","pop","part","_parseEventChunk","_onStreamFailure","year","getFullYear","month","getMonth","padStart","day","getDate","cookies","invoke","domain","uuidCookie","find","cookie","value","PiBot","generateRandomId","randomStr","Math","floor","random","QianWenBot","getRequestHeaders","qianWen","xsrfToken","resp","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","exception","errorCode","errorMsg","failed","stopReason","firstQuery","sessionType","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","initGeeGuard","appId","https","gee_token","chatId","GtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","queryTraceId","chat","youChatToken","answer","WenxinQianfanBot","apiKey","secretKey","wenxinQianfan","chatModel","ChatBaiduWenxin","modelName","baiduApiKey","baiduSecretKey","streaming","pastRounds","parseResponse","ids","images","image","alt","placeholder","generateReq","contextIds","modelNumber","innerJSON","BardBot","requestParams","atValue","URLSearchParams","at","params","bl","blValue","_reqid","rt","match","GeminiBot","gemini","ChatGoogleGenerativeAI","topK","topP","Falcon180bBot","GradioBot","sendPredict","fn_index","session_hash","_predictUrl","event_data","all","makeData","r","_fnIndexes","falcon","maxNewTokens","repetitionPenalty","parseData","parseError","_class","GradioAppBot","gradio","fnIndex","Map","config","path","root","log","_sendFnIndex","joinUrl","streamData","trigger_id","_triggerId","streamContext","event_id","dataUrl","searchParams","set","onMessageEventHandler","msg","rank","rank_eta","removeAllEventListeners","onAbortEventHandler","onErrorEventHandler","eventListeners","eventName","eventHandler","removeEventListener","HuggingChatBot","packRequest","inputs","is_retry","response_id","web_search","conversationId","fetch","method","ok","errorData","json","reader","getReader","processStream","read","dataChunk","TextDecoder","decode","jsonDataArray","Boolean","jsonData","ChatGPT35Bot","ChatGPTBot","ChatGPT4Bot","accessToken","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","PoeBot","OpenAIAPI35Bot","OpenAIAPIBot","OpenAIAPI4Bot","OpenAIAPI4128KBot","VicunaBot","LMSYSBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT432kPoeBot","Llama270bPoeBot","GooglePalm2PoeBot","CodeLlama34bPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","Llama213bBot","Llama27bBot","Llama270bBot","ChatGLM6bBot","ChatGLM36bBot","CodeLlamaBot","Vicuna7bBot","Vicuna13bBot","Wizardlm13bBot","Wizardlm70bBot","FalconHC180bBot","CodeLlamaHCBot","WenxinQianfan4Bot","Zephyr7bBot","GeminiAdvBot","Gemma7bItBot","Gemma2bItBot","Claude3SonnetBot","Claude3OpusBot","ChatGLM4Bot","ChatGLMBot","user_id","assistant_id","conversation_id","meta_data","is_test","input_question_type","channel","draft_id","tool_calls","info","arguments","citations","citation","metadata","AzureOpenAIAPIBot","bots","getBotByClassName","className","bot","botTags","free","paid","openSource","api","madeInChina","dataOne","dataTwo","dataThree","includes","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","conversation","result","clientId","conversationSignature","secAccessToken","invocationId","isAnonymous","makePromptRequest","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","verbosity","scenario","isStartOfSession","requestId","timestamp","toISOString","author","inputMethod","messageType","tone","_tone","participant","spokenTextMode","seperator","fromCharCode","encodeURIComponent","protocol","version","events","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","onClose","REFRESH_SESSION_URL","setRefreshCycle","chatgpt","refreshCycle","loadArkoseScript","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","_arkoseScriptLoaded","script","document","createElement","src","setAttribute","defer","appendChild","onload","setupEnforcement","onerror","myEnforcement","_myEnforcement","setConfig","onReady","onShown","onShow","onSuppress","onCompleted","_arkosePromise","onReset","onHide","onFailed","getArkoseToken","run","arkose_token","content_type","parent_message_id","history_and_training_disabled","preInfo","regex","trim","test","is_complete","join","push","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","openaiApi","configuration","basePath","alterUrl","openAIApiKey","buildId","settings","lastMessageId","gqlPost","queryName","variables","formkey","poe","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","vizcacha","code_llama_34b_instruct","acouchy","llama_2_70b_chat","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","queryHash","debug","min_seq","m","message_type","messageAdded","withChatBreak","messageEdgeCreate","errors","chatGlm","userInfoUrl","_id","seed","max_tokens","conversation_task_id","retry","retry_history_task_id","institution","__userid","context_id","task_id","Type","Text","Slider","Select","Combobox","Checkbox","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","now","timer","onUnmounted","lang","navigator","userLanguage","substr","en","enMessages","zh","zhMessages","zhtw","zhtwMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","restored","migrateChatsMessagesThreads","addFirstChatIfEmpty","defaultTheme","resolveTheme","mode","applyTheme","general","isShowMenuBar","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","head","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","table","db","count","add","favBots","classname","selected","currentChatIndex","currentChat","newKey","index","createdTime","modifiedTime","update","Dexie","stores","chats","threads","vuexPersist","VuexPersistence","storage","localForage","asyncStorage","reducer","updateCounter","selectedResponses","persistedState","deepToRaw","sourceObj","objectIterator","input","isRef","isReactive","isProxy","toRaw","keys","reduce","acc","createStore","columns","riskConfirmed","isChatDrawerOpen","prompts","actions","template","suffix","updateDebounceInterval","isShowAppBar","mutations","changeColumns","setUuid","setBotSelected","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","splice","setCurrentLanguage","setChatgpt","setGemini","values","setOpenaiApi","setAzureOpenaiApi","setMoss","setChatGLM","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setPoe","setPhind","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","messageIndex","latestThreadPromptIndex","Messages","hasThread","setResponseThreadIndex","responseIndex","threadIndex","setMessages","incrementUpdateCounter","clearMessages","where","equals","modify","delete","setTheme","setMode","setGeneral","createChat","chatIndex","selectChat","selectedTime","hideChat","hide","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","clear","Threads","addPrompt","editPrompt","deletePrompt","addAction","editAction","deleteAction","addSelectedResponses","selectedIndex","deleteSelectedResponses","findIndex","deleteAllSelectedResponses","migrateSettingsPrompts","localStorage","getItem","app","promptsData","setItem","updateSetting","updateSettingArray","prop","pushSettingArray","migrateSettingArrayIndexUseUUID","setChat","parseInt","dispatch","promptMessage","msgs","trackEvent","sendPromptInThread","threadPromptMessage","threadResponseMessage","updateMessage","_","messageQueue","queue","updateThreadMessage","threadMessageQueue","thread","getters","getCurrentChatPrompt","modules","plugin","sortBy","getMessagesCount","chatIndexMap","messageIndexMap","threadIndexMap","chatsMigrateData","messagesMigrateData","threadsMigrateData","migrateHasThread","getIndex","getAndGenerateUuidIfNotExist","j","p","threadMessage","bulkAdd","messageIndexes","orderBy","distinct","uniqueKeys","initializeQueues","Queue","startQueuesProcessing","processQueue","_queue","queueName","DEFAULT_UPDATE_DEBOUNCE_INTERVAL","isProcessing","setUpdateDebounceTime","mergedMessages","indexMap","queueCopy","changes","propKey","bulkUpdate","debounceTime","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_APP_BAR","SHORTCUT_LIST","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","autoScroll","onScroll","scrollPosition","pageYOffset","innerHeight","emit","__emit","props","__props","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","__exports__","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","useStore","onUpdated","drawerItems","useObservable","liveQuery","reverse","toArray","focusTextarea","onAddChat","confirm","selectLatestVisibleChat","latestChat","first","style","setProperty","onMounted","currentChatMessages","primaryKeys","bulkGet","sort","a","b","groupedMessage","create","apply","computed","carouselModel","maxPage","deep","replyModel","replyRef","pageLeftButton","pageRightButton","isSelected","isSelectedList","isSelectedResponsesEmpty","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","highlight","isAllDone","some","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isShowReplyButtonInDOM","isShowResendButton","isSomeResponsesHasThread","messagePromptIndex","isShowPagingButton","getButtonClass","getSelectButtonClass","favBot","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","copyToClipboard","clipboard","writeText","toggleHighlight","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","toggleReplyButton","select","stopPropagation","contains","indexOf","updateIsSelectedResponsesEmpty","pageLeft","max","pageRight","min","loading","gridTemplateColumns","createChatMessageLiveQuery","currentMessageSub","scrollToBottomFirst","newChat","oldChat","unsubscribe","subscribe","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","pacFile","reply","onFileChange","file","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","prefixPlaceholder","templatePlaceholder","suffixPlaceholder","preview","exampleTemplate","examplePrompt","PromptTemplate","inputVariables","exampleSelector","LengthBasedExampleSelector","fromExamples","maxLength","Number","MAX_VALUE","dynamicPrompt","FewShotPromptTemplate","brandId","SETTING_FILE_NAME","CHAT_FILE_NAME","EXPORT_IMPORT_FILE_EXTENSION","formRef","isOpenAddEditAction","actionName","previewRef","importProgressText","isImportCompleted","templateParametersInfo","isShowTemplateParametersDialog","isShowImportProgressDialog","userActions","previewSampleData","botResponse","description","step","editIndex","isEdit","required","getExportedFileName","hour","getHours","minute","getMinutes","second","getSeconds","fileName","exportData","settingBlob","getSettingWithoutBotSetting","chatHistoryBlob","exportDB","JSZip","zip","generateAsync","zipBlob","createObjectURL","download","click","removeChild","revokeObjectURL","importData","importDataOnChangeFile","logImportProgress","size","loadAsync","chatString","settingString","fileCount","relativePath","zipEntry","zipFileString","unchangedCount","updatedCount","addedCount","errorCount","addedRecords","updatedRecords","errorRecords","chatDbObject","chatRow","d","tableName","rows","record","$types","row","compare","put","messagesRow","threadsRow","settingDbObject","$","chatallKey","storeIndexes","importItem","obj1","obj2","getElementById","scrollTop","settingDb","userSettingBlob","userSettingText","userSettingJson","allBotBrandId","str","bytes","TextEncoder","encode","Blob","onInputTemplate","edit","addEditAction","validate","valid","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ChatGLMBotSettings","ClaudeAIBotSettings","Falcon180bBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","GeminiBotSettings","OpenAssistantBotSettings","PhindBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","label","newBot","markRaw","onDone","isLogoInverted","menu","favorited","tags","selectedTags","notDisabledBots","shownBots","toggleFavorite","toggleMenu","filterBots","filteredIn","tagBots","tag","every","tagBot","defaultLanguage","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","x","y","isPin","defaultPrompts","act","pin","usePrompt","addEditPrompt","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmed","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","execCommand","onBeforeMount","on","versions","checkVersion","latest","current","skip","removeListener","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","innerHTML","toggleShortcutGuide","openShortcutGuide","previewText","previewTextarea","chatRef","onChangeOpenProp","selectedBots","updatePreview","updateFavBots","send","newChatIndex","deselectAllResponses","onUpdatedSystemTheme","last","initialValue","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","isChatActionOpen","openSettingsModal","openFind","getColumnImage","columnCount","deselectAll","callAction","_paq","ver","_createBlock","_component_CommonBotSettings","$data","watcher","$options","ticks","CommonBotSettings","methods","render","_component_login_setting","LoginSetting","mounted","tokenInfo","mapMutations","_createElementBlock","_Fragment","_createVNode","_component_v_list_item","_withCtx","_component_v_alert","outlined","_createTextVNode","_toDisplayString","_ctx","_component_v_list_item_title","_component_v_list_item_subtitle","_component_v_checkbox","modelValue","autoRefresh","_cache","$event","hideDetails","AUTO_REFRESH_CYCLE","mapState","auto","settingState","refs","translate","rets","validateSliderInput","setting","getInputElement","valuefloat","parseFloat","inputMaxFloat","inputMinFloat","inputElement","example","_createElementVNode","$props","onClick","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","items","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","__esModule","leafPrototypes","getProto","__proto__","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prototype","inProgress","dataWebpackPrefix","l","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","clearTimeout","doneFns","toStringTag","nmd","paths","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}