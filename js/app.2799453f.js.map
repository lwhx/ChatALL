{"version":3,"file":"js/app.2799453f.js","mappings":"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","sources":["webpack://chatall/./src/bots/BardBot.js","webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ChatGLMBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/GeminiBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/OpenAssistantBot.js","webpack://chatall/./src/bots/PhindBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/huggingface/Falcon180bBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/openai/ChatGPTBrowsingBot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4128KBot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT432kPoeBot.js","webpack://chatall/./src/bots/poe/Llama270bPoeBot.js","webpack://chatall/./src/bots/poe/GooglePalm2PoeBot.js","webpack://chatall/./src/bots/poe/CodeLlama34bPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/lmsys/Llama213bBot.js","webpack://chatall/./src/bots/lmsys/Llama27bBot.js","webpack://chatall/./src/bots/lmsys/Llama270bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM6bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM36bBot.js","webpack://chatall/./src/bots/lmsys/CodeLlamaBot.js","webpack://chatall/./src/bots/lmsys/Vicuna7bBot.js","webpack://chatall/./src/bots/lmsys/Vicuna13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm70bBot.js","webpack://chatall/./src/bots/huggingface/FalconHC180bBot.js","webpack://chatall/./src/bots/huggingface/CodeLlamaHCBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfan4Bot.js","webpack://chatall/./src/bots/huggingface/Zephyr7bBot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/components/BotSettings/settings.const.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/chats.js","webpack://chatall/./src/store/db.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/store/messages.js","webpack://chatall/./src/store/migration.js","webpack://chatall/./src/store/queue.js","webpack://chatall/./src/store/threads.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/helpers/scroll-helper.js","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/helpers/template-helper.js","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/components/ChatAction.vue","webpack://chatall/./src/components/ChatAction.vue?8a01","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue?c779","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue?a367","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue?f1d7","webpack://chatall/./src/components/BotSettings/GeminiBotSettings.vue","webpack://chatall/./src/components/BotSettings/GeminiBotSettings.vue?0d66","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAssistantBotSettings.vue?9e83","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue?8114","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/create fake namespace object","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/get javascript chunk filename","webpack://chatall/webpack/runtime/get mini-css chunk filename","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/load script","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import axios from \"axios\";\nimport Bot from \"./Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _logoFilename = \"bard-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://bard.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    const context = await this.getChatContext();\n    let available = false;\n\n    if (context.requestParams.atValue) {\n      available = true;\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": JSON.stringify([\n              null,\n              `[[${JSON.stringify(prompt)}],null,${JSON.stringify(\n                contextIds,\n              )}]`,\n            ]),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          this.setChatContext(context);\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://bard.google.com/faq\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import i18n from \"@/i18n\";\nimport store from \"@/store\";\nimport Chats from \"@/store/chats\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  disabled = false; // True if the bot is permanently disabled\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    const prefix = this.isDisabled()\n      ? `(${i18n.global.t(\"bot.disabled\")}) `\n      : \"\";\n    if (this.getModelName())\n      return prefix + `${this.getModelName()}@${this.getBrandName()}`;\n    else return prefix + this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  isDisabled() {\n    return this.disabled;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      let message;\n      if (err instanceof LoginError) {\n        message = `${err.message}\\n${i18n.global.t(\"error.requireLogin\", {\n          link: this.getLoginHyperlink(),\n        })}`;\n      } else {\n        message = err;\n      }\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(message),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  async checkAvailability() {\n    if (this.isDisabled()) return false;\n    this.constructor._isAvailable = await this._checkAvailability();\n    return this.isAvailable();\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return false;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = (await Chats.getCurrentChat())?.contexts?.[\n      this.getClassname()\n    ];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n\nexport class LoginError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"LoginError\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  static _characterId = \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\"; // Character Assistant id\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        Authorization: `Token ${store.state.characterAI.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      if (!store.state.characterAI.token) {\n        console.error(\"Error CharacterAIBot check login: token not found\");\n        return false;\n      }\n\n      if (new Date().getTime() >= store.state.characterAI?.ttl) {\n        console.error(\"Error CharacterAIBot check login: token expired\");\n        return false;\n      }\n\n      const userInfoResponse = await axios.get(\n        \"https://beta.character.ai/chat/user/\",\n        this.getAuthHeaders(),\n      );\n\n      if (userInfoResponse.status !== 200) {\n        console.error(\"Error CharacterAIBot check login:\", userInfoResponse);\n        return false;\n      }\n\n      if (userInfoResponse.data.user?.user?.username !== \"ANONYMOUS\") {\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          ...this.getAuthHeaders().headers,\n        };\n        const payload = {\n          history_external_id: context.history_external_id,\n          character_external_id: this.constructor._characterId,\n          text: prompt,\n          tgt: context.tgt,\n        };\n        axios\n          .post(\"https://beta.character.ai/chat/streaming/\", payload, {\n            headers: headers,\n            onDownloadProgress: (progressEvent) => {\n              this.onResponseDownloadProgress(\n                progressEvent,\n                onUpdateResponse,\n                callbackParam,\n                reject,\n              );\n            },\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              resolve();\n            } else {\n              reject(response);\n            }\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  text = \"\";\n  onResponseDownloadProgress(\n    progressEvent,\n    onUpdateResponse,\n    callbackParam,\n    reject,\n  ) {\n    try {\n      const responses = progressEvent?.event?.currentTarget?.response\n        ?.split(\"\\n\") // split with new line\n        ?.filter((n) => n); //  filter empty string in array\n\n      // take last response item only\n      const lastResponse = JSON.parse(responses[responses.length - 1]);\n      if (Array.isArray(lastResponse.replies) && lastResponse.replies.length) {\n        this.text = lastResponse.replies[0].text;\n        onUpdateResponse(callbackParam, {\n          content: lastResponse.replies[0].text,\n          done: lastResponse.is_final_chunk,\n        });\n      } else {\n        // handle exception\n        // {\"abort\": true, \"error\": \"No eligible candidates\", \"last_user_msg_id\": 123, \"last_user_msg_uuid\": \"1111-uuid\"}\n        onUpdateResponse(callbackParam, {\n          content: `${this.text}\\n${this.wrapCollapsedSection(\n            JSON.stringify(lastResponse),\n          )}`,\n          done: true,\n        });\n      }\n    } catch (error) {\n      reject(error);\n      console.error(\"Error CharacterAIBot onChatDownloadProgress\", error);\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    let characterInfoResponse = await axios.post(\n      \"https://beta.character.ai/chat/character/info/\",\n      { external_id: this.constructor._characterId },\n      this.getAuthHeaders(),\n    );\n\n    if (characterInfoResponse.status !== 200) {\n      console.error(\n        \"CharacterAIBot characterInfoResponse\",\n        characterInfoResponse,\n      );\n      throw new Error(characterInfoResponse);\n    }\n\n    let chatContinueResponse;\n    try {\n      chatContinueResponse = await axios.post(\n        \"https://beta.character.ai/chat/history/continue/\",\n        {\n          character_external_id: this.constructor._characterId,\n          history_external_id: null,\n        },\n        this.getAuthHeaders(),\n      );\n    } catch (error) {\n      if (\n        error.response.status === 404 &&\n        error.response.data === \"there is no history between user and character\"\n      ) {\n        // no history, create\n        chatContinueResponse = await axios\n          .post(\n            \"https://beta.character.ai/chat/history/create/\",\n            {\n              character_external_id: this.constructor._characterId,\n            },\n            this.getAuthHeaders(),\n          )\n          .catch((error) => {\n            console.error(\"CharacterAIBot chatCreateResponse\", error);\n            throw Error(error);\n          });\n      } else {\n        console.error(\"CharacterAIBot chatContinueResponse\", error);\n        throw Error(error);\n      }\n    }\n\n    context = {\n      history_external_id: chatContinueResponse?.data?.external_id,\n      tgt: characterInfoResponse?.data?.character?.participant__user__username,\n    };\n\n    return context;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ChatGLMBot extends Bot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chatglm.cn/detail\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${store.state.chatGlm?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    let userInfoUrl = \"https://chatglm.cn/chatglm/backend-api/v3/user/info\";\n    const context = await this.getChatContext();\n    await axios\n      .get(userInfoUrl, this.getAuthHeader())\n      .then((response) => {\n        available = response.data?.message == \"success\";\n        this.setChatContext({\n          ...context,\n          user_id: response.data?.result._id,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error checking ChatGLM login status:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n    const uuid = uuidv4();\n    const streamContext = await axios.post(\n      `https://chatglm.cn/chatglm/backend-api/v1/stream_context?__requestid=${uuid}`,\n      {\n        prompt: prompt,\n        seed: Math.floor(Math.random() * 100000),\n        max_tokens: 512,\n        conversation_task_id: context.conversation_task_id,\n        retry: false,\n        retry_history_task_id: null,\n        institution: \"\",\n        __userid: context.user_id,\n      },\n      this.getAuthHeader(),\n    );\n\n    if (streamContext.status !== 200) {\n      throw new Error(streamContext);\n    }\n\n    const context_id = streamContext.data.result.context_id;\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://chatglm.cn/chatglm/backend-api/v1/stream?App-Name=chatglm&context_id=${context_id}&institution=`,\n          this.getAuthHeader(),\n        );\n        let text = \"\";\n        source.addEventListener(\"add\", (event) => {\n          try {\n            text = event.data;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } catch {\n            console.error(\"Error ChatGLM JSON.parse message:\", event.data);\n            return;\n          }\n        });\n        source.addEventListener(\"finish\", () => {\n          // after stream closed, done\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"sse_error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        `https://chatglm.cn/chatglm/backend-api/v1/conversation`,\n        {},\n        this.getAuthHeader(),\n      )\n      .then((response) => {\n        context = {\n          conversation_task_id: response.data?.result.task_id,\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error ChatGLM createChatContext \", error);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeAi.org) {\n      const currentAcountResponse = await axios.get(\n        \"https://claude.ai/api/auth/current_account\",\n      );\n\n      if (currentAcountResponse.data.success) {\n        available = true;\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const url = `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations/${context.uuid}/completion`;\n    const payload = JSON.stringify({\n      attachments: [],\n      model: store.state.claudeAi.model,\n      prompt: prompt,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(url, {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"completion\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatGoogleGenerativeAI } from \"@langchain/google-genai\";\n\nexport default class GeminiBot extends LangChainBot {\n  static _brandId = \"gemini\";\n  static _className = \"GeminiBot\";\n  static _logoFilename = \"gemini-logo.png\"; // Place it in public/bots/\n  static _model = \"gemini-pro\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.gemini.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.gemini.pastRounds;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatGoogleGenerativeAI({\n      apiKey: store.state.gemini.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.gemini.temperature,\n      streaming: true,\n      topK: store.state.gemini.topK,\n      topP: store.state.gemini.topP,\n    });\n    return chatModel;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { BufferMemory } from \"langchain/memory\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    let bufferMemory = new BufferMemory();\n\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages.forEach((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (\n        storedMessage.type.toLowerCase() ===\n        bufferMemory.humanPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addUserMessage(storedMessage.data);\n      } else if (\n        storedMessage.type.toLowerCase() === bufferMemory.aiPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addAIChatMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        bufferMemory.chatHistory.addMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    await bufferMemory.chatHistory.addUserMessage(prompt);\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    messages = await bufferMemory.chatHistory.getMessages();\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    await bufferMemory.chatHistory.addAIChatMessage(res);\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  setupModel() {\n    this.constructor._chatModel = this._setupModel();\n  }\n\n  _setupModel() {\n    throw new Error(\n      \"Abstract property '_setupModel' must be implemented in the subclass.\",\n    );\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async _checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n    let available = false;\n\n    if (token) {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then(() => {\n          available = true;\n        });\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\n\nexport default class OpenAssistantBot extends Bot {\n  static _brandId = \"openAssistant\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"OpenAssistantBot\"; // Class name of the bot\n  static _logoFilename = \"open-assistant.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://open-assistant.io/auth/signin/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .get(\"https://open-assistant.io/api/auth/session\")\n      .then((response) => {\n        if (response.data) {\n          // eslint-disable-next-line\n          for (var i in response.data) {\n            // if data object not empty, user logged in\n            available = true;\n            break;\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error OpenAssistantBot check login:\", error);\n      });\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n\n    const prompterResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/prompter_message\",\n      { chat_id: context.id, content: prompt, parent_id: context.parent_id },\n    );\n\n    if (prompterResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    const assistantResponse = await axios.post(\n      \"https://open-assistant.io/api/chat/assistant_message\",\n      {\n        chat_id: context.id,\n        model_config_name: \"OA_SFT_Llama_30B_6\",\n        content: prompt,\n        parent_id: prompterResponse.data.id,\n        plugins: [],\n        sampling_parameters: {\n          top_k: 50,\n          top_p: 0.95,\n          typical_p: null,\n          temperature: 0.75,\n          repetition_penalty: 1.2,\n          max_new_tokens: 1024,\n        },\n      },\n    );\n\n    if (assistantResponse.status !== 200) {\n      throw new Error(prompterResponse);\n    }\n\n    this.setChatContext({\n      ...context,\n      parent_id: assistantResponse.data.id, // save assistant response id for next prompt parent_id\n    });\n\n    const headers = {\n      accept: \"*/*\",\n    };\n    const payload = {\n      chat_id: context.id,\n      message_id: assistantResponse.data.id,\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://open-assistant.io/api/chat/events?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let data;\n          try {\n            // handle event data: \": ping - 2023-07-14 13:28:17.735145\"\n            data = JSON.parse(event.data);\n          } catch {\n            console.error(\n              \"Error OpenAssistantBot JSON.parse message:\",\n              event.data,\n            );\n            return;\n          }\n          switch (data.event_type) {\n            case \"pending\":\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"openAssistant.queue\", {\n                  ...data,\n                }),\n                done: false,\n              });\n              break;\n            case \"token\":\n              text += data.text;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n              break;\n            case \"message\":\n              onUpdateResponse(callbackParam, {\n                content: data.message.content, // full message\n                done: true,\n              });\n              resolve();\n              break;\n            case \"error\":\n              onUpdateResponse(callbackParam, {\n                content: `${text}\\n${this.wrapCollapsedSection(event.data)}`,\n                done: true,\n              });\n              resolve();\n              break;\n            default:\n              break;\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    try {\n      await axios\n        .post(\"https://open-assistant.io/api/chat\")\n        .then((response) => {\n          if (response.status === 200) {\n            context = {\n              ...response.data,\n            };\n          }\n        });\n    } catch (error) {\n      console.error(\"Error OpenAssistantBot createChatContext:\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default class PhindBot extends Bot {\n  static _brandId = \"phind\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PhindBot\"; // Class name of the bot\n  static _logoFilename = \"phind-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://www.phind.com\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const context = await this.getChatContext();\n      const rewrite = await axios.post(\n        \"https://www.phind.com/api/infer/followup/rewrite\",\n        {\n          questionToRewrite: prompt,\n          questionHistory: context.questionHistory,\n          answerHistory: context.answerHistory,\n        },\n      );\n      const search = await axios.post(\"https://www.phind.com/api/web/search\", {\n        q: rewrite.data.query,\n        browserLanguage: \"en-GB\",\n        userSearchRules: {},\n      });\n\n      const date = new Date();\n      const formatDate = this.getFormattedDate(date);\n      const payload = JSON.stringify({\n        questionHistory: context.questionHistory,\n        answerHistory: context.answerHistory,\n        question: prompt,\n        webResults: search.data,\n        options: {\n          date: formatDate,\n          language: \"en-GB\",\n          detailed: true,\n          anonUserId: await this.getUUID(),\n          answerModel: store.state.phind.model,\n          customLinks: [],\n        },\n        context: \"\",\n      });\n\n      return new Promise((resolve, reject) => {\n        try {\n          const source = new SSE(\"https://www.phind.com/api/infer/answer\", {\n            start: false,\n            payload,\n          });\n          let text = \"\";\n          let isSuccess = false;\n          source.addEventListener(\"message\", (event) => {\n            if (event.data) {\n              if (event.data.startsWith(\"<PHIND_METADATA>\")) {\n                isSuccess = true;\n              } else {\n                text += event.data;\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            }\n          });\n\n          source.addEventListener(\"readystatechange\", (event) => {\n            if (event.readyState === source.CLOSED) {\n              // after stream closed, done\n              if (isSuccess) {\n                // save answerHistory and questionHistory to context\n                this.setChatContext({\n                  answerHistory: [...context.answerHistory, text],\n                  questionHistory: [...context.questionHistory, prompt],\n                });\n\n                // replace link with hostname\n                if (search.data && search.data.length) {\n                  for (let i = 0; i < search.data.length; i++) {\n                    const hostname = new URL(search.data[i].url).hostname;\n                    text = text.replaceAll(`[Source${i}]`, `[${hostname}]`);\n                    text = text.replaceAll(\n                      `[^${i}^]`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                    text = text.replaceAll(\n                      `^${i}^`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                  }\n                }\n              }\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: true,\n              });\n              resolve();\n            }\n          });\n          source.addEventListener(\"error\", (event) => {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          });\n\n          // override default _onStreamProgress to fix missing new line in response due to trimming\n          source._onStreamProgress = function (e) {\n            if (!source.xhr) {\n              return;\n            }\n\n            if (source.xhr.status !== 200) {\n              source._onStreamFailure(e);\n              return;\n            }\n\n            if (source.readyState == source.CONNECTING) {\n              source.dispatchEvent(new CustomEvent(\"open\"));\n              source._setReadyState(source.OPEN);\n            }\n\n            var data = source.xhr.responseText.substring(source.progress);\n\n            source.progress += data.length;\n            var parts = (source.chunk + data).split(/\\r\\n\\r\\n/);\n            var lastPart = parts.pop();\n            for (let part of parts) {\n              // skip if data is empty\n              if (part === \"data: \") {\n                continue;\n              }\n\n              // newline\n              if (part === \"data: \\r\\ndata: \") {\n                let event = new CustomEvent(\"message\");\n                event.data = \"\\n\";\n                source.dispatchEvent(event);\n                continue;\n              }\n\n              const event = source._parseEventChunk(part);\n              source.dispatchEvent(event);\n            }\n            source.chunk = lastPart;\n          };\n          source.stream();\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } catch (error) {\n      if (error.request.status === 403) {\n        throw new Error(\n          `${error.request.status} ${error.request.responseText}`,\n        );\n      } else {\n        console.error(\"Error PhindBot _sendPrompt:\", error);\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { answerHistory: [], questionHistory: [] };\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  async getUUID() {\n    const cookies = await ipcRenderer.invoke(\"get-cookies\", {\n      domain: \"www.phind.com\",\n    });\n    const uuidCookie = cookies.find((cookie) => cookie.name === \"uuid\");\n    return uuidCookie ? uuidCookie.value : \"\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        available = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      if (context.exception) {\n        reject(\n          new Error(\n            `${context.exception?.errorCode} ${context.exception?.errorMsg}`,\n          ),\n        );\n        return;\n      }\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        {\n          firstQuery: \"ChatALL\",\n          sessionType: \"text_chat\",\n        }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        } else if (resp.data) {\n          context = {\n            exception: resp.data,\n          };\n          console.error(\n            \"Error QianWen adding sesion resp:\",\n            JSON.stringify(resp.data),\n          );\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.cn/\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://chat.360.cn/backend-api/apiz/user/info\")\n      .then((response) => {\n        available = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.cn/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://neice.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const { data } = await axios.post(\n        \"https://neice.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        available = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://neice.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          available = true;\n        }\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://neice.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://neice.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://neice.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      available = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n    }\n    return available;\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt-chat/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"@langchain/community/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    const chatModel = new ChatBaiduWenxin({\n      modelName: this.constructor._model,\n      baiduApiKey: apiKey,\n      baiduSecretKey: secretKey,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import GradioBot from \"@/bots/huggingface/GradioBot\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport store from \"@/store\";\n\nexport default class Falcon180bBot extends GradioBot {\n  static _brandId = \"falcon\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Falcon180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-logo.jpeg\"; // Place it in public/bots/\n  static _loginUrl = \"https://tiiuae-falcon-180b-demo.hf.space/\"; // Any Gradio URL\n  static _settingsComponent = \"Falcon180bBotSettings\"; // Vue component filename for settings\n  static _model = \"falcon-180b\";\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n  static _fnIndexes = [3]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  static _predictUrl = Falcon180bBot._loginUrl + \"run/predict\";\n\n  constructor() {\n    super();\n  }\n\n  sendPredict(fn_index, session_hash, payload) {\n    return axios.post(Falcon180bBot._predictUrl, {\n      fn_index,\n      data: [],\n      event_data: null,\n      session_hash: session_hash,\n      ...payload,\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const session_hash = await this.getChatContext();\n      await axios.all([\n        this.sendPredict(4, session_hash),\n        this.sendPredict(1, session_hash, {\n          data: [prompt],\n        }),\n      ]);\n      await this.sendPredict(2, session_hash, { data: [null, null] });\n      await super._sendPrompt(prompt, onUpdateResponse, callbackParam);\n      await this.sendPredict(5, session_hash);\n    } catch (error) {\n      throw Error(error);\n    }\n  }\n\n  /* eslint-disable no-unused-vars */\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [\n        null,\n        null,\n        \"\",\n        store.state.falcon.temperature,\n        store.state.falcon.maxNewTokens,\n        store.state.falcon.topP,\n        store.state.falcon.repetitionPenalty,\n      ];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = data[0][data[0].length - 1][1];\n    }\n    return r;\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  _checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super._checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    if (this.constructor._loginUrl !== \"\") {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        available = true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = new URL(config.root + config.path + \"/queue/join\");\n        url.protocol = url.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\n        const data = this.makeData(fn_index, prompt);\n\n        const wsp = new WebSocketAsPromised(url.toString(), {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        wsp.onUnpackedMessage.addListener(async (event) => {\n          if (event.msg === \"send_hash\") {\n            wsp.sendPacked({ fn_index, session_hash });\n          } else if (event.msg === \"send_data\") {\n            // Requested to send data\n            wsp.sendPacked({\n              data,\n              event_data: null,\n              fn_index,\n              session_hash,\n            });\n          } else if (event.msg === \"estimation\") {\n            if (event.rank > 0) {\n              // Waiting in queue\n              event.rank_eta = Math.floor(event.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...event }),\n                done: false,\n              });\n            }\n          } else if (event.msg === \"process_generating\") {\n            // Generating data\n            if (event.success && event.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, event.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(event.output.error));\n            }\n          } else if (event.msg === \"process_completed\") {\n            // Done\n            if (event.success && event.output.data) {\n              if (\n                typeof event.output.data[2] !== \"string\" ||\n                event.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, event.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(event.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            } else {\n              reject(new Error(event.output.error));\n            }\n            wsp.removeAllListeners();\n            wsp.close();\n            resolve();\n          } else if (event.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        });\n\n        wsp.onClose.addListener((event) => {\n          console.log(\"WebSocket closed:\", event);\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot, { LoginError } from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true; // Support anonymous chat\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      id: uuidv4(),\n      is_retry: false,\n      response_id: uuidv4(),\n      web_search: false,\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        try {\n          const response = await fetch(\n            `${this.constructor._loginUrl}conversation/${conversationId}`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(this.packRequest(prompt)),\n            },\n          );\n\n          if (!response.ok) {\n            const errorData = await response.json();\n            if (\n              errorData.message === \"Exceeded number of messages before login\"\n            ) {\n              reject(new LoginError(errorData.message));\n            } else {\n              reject(new Error(errorData.message || \"Unknown error\"));\n            }\n            return;\n          }\n\n          const reader = response.body.getReader();\n          let text = \"\";\n\n          const processStream = async () => {\n            const { done, value } = await reader.read();\n            if (done) {\n              return;\n            }\n\n            const dataChunk = new TextDecoder().decode(value);\n            // Split the chunk into individual JSON strings\n            const jsonDataArray = dataChunk.split(\"\\n\").filter(Boolean); // filter(Boolean) removes any empty strings\n\n            for (let i = 0; i < jsonDataArray.length; i++) {\n              const jsonData = jsonDataArray[i];\n              const data = JSON.parse(jsonData);\n\n              if (data.type === \"stream\") {\n                text += data.token;\n                onUpdateResponse(callbackParam, { content: text, done: false });\n              } else if (data.type === \"finalAnswer\") {\n                onUpdateResponse(callbackParam, {\n                  content: data.text,\n                  done: true,\n                });\n                return;\n              }\n            }\n            await processStream(); // Continue processing stream\n          };\n\n          await processStream(); // Start processing stream\n          resolve();\n        } catch (error) {\n          if (error.message === \"network error\") {\n            // ignore network error\n          } else {\n            reject(new Error(error.message));\n          }\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(`${this.constructor._loginUrl}conversation`, {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return conversationId;\n  }\n}\n","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n\n    if (available) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        available = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        available = false;\n      }\n    }\n\n    return available;\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPTBrowsingBot extends ChatGPT4Bot {\n  static _className = \"ChatGPTBrowsingBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-browsing-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4-browsing\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"fluxmemcst\",\n    \"enable_user_consent\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"saharagenconv5\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"enable_user_consent\",\n    \"fluxmemcst\",\n    \"h3imaginative\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.webp\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4128KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4128KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-128k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4-turbo-preview\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-33b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-33b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT432kPoeBot extends PoeBot {\n  static _className = \"ChatGPT432kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"gpt-4-32k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"vizcacha\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class Llama270bPoeBot extends PoeBot {\n  static _className = \"Llama270bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama_2_70b_chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class GooglePalm2PoeBot extends PoeBot {\n  static _className = \"GooglePalm2PoeBot\"; // Class name of the bot\n  static _logoFilename = \"google-palm-2.png\"; // Place it in public/bots/\n  static _model = \"acouchy\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class CodeLlama34bPoeBot extends PoeBot {\n  static _className = \"CodeLlama34bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"code_llama_34b_instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama213bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama213bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-13b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama27bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama27bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-7b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama270bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama270bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-70b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM6bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM6bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm2-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm2-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM36bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM36bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm3-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm3-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class CodeLlamaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CodeLlamaBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama-34b-instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna7bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna7bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-7b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna13bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm13bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm70bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm70bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-70b\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class FalconHC180bBot extends HuggingChatBot {\n  static _className = \"FalconHC180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"tiiuae/falcon-180B-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class CodeLlamaHCBot extends HuggingChatBot {\n  static _className = \"CodeLlamaHCBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama/CodeLlama-34b-Instruct-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfan4Bot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfan4Bot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-4-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-4\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Zephyr7bBot extends HuggingChatBot {\n  static _className = \"Zephyr7bBot\"; // Class name of the bot\n  static _logoFilename = \"zephyr-7b-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingfaceh4-zephyr-chat.hf.space/\";\n  static _model = \"HuggingFaceH4/zephyr-7b-beta\";\n\n  constructor() {\n    super();\n  }\n\n  getFullname() {\n    return \"Zephyr-7B-β\";\n  }\n}\n","// Bots\nimport GeminiBot from \"@/bots/GeminiBot\";\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport ChatGPTBrowsingBot from \"@/bots/openai/ChatGPTBrowsingBot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport OpenAIAPI4128KBot from \"@/bots/openai/OpenAIAPI4128KBot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport ChatGPT432kPoeBot from \"./poe/ChatGPT432kPoeBot\";\nimport Llama270bPoeBot from \"./poe/Llama270bPoeBot\";\nimport GooglePalm2PoeBot from \"./poe/GooglePalm2PoeBot\";\nimport CodeLlama34bPoeBot from \"./poe/CodeLlama34bPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WenxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PhindBot from \"./PhindBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport OpenAssistantBot from \"./OpenAssistantBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\nimport Llama213bBot from \"./lmsys/Llama213bBot\";\nimport Llama27bBot from \"./lmsys/Llama27bBot\";\nimport Llama270bBot from \"./lmsys/Llama270bBot\";\nimport Falcon180bBot from \"./huggingface/Falcon180bBot\";\nimport ChatGLM6bBot from \"./lmsys/ChatGLM6bBot\";\nimport ChatGLM36bBot from \"./lmsys/ChatGLM36bBot\";\nimport CodeLlamaBot from \"./lmsys/CodeLlamaBot\";\nimport Vicuna7bBot from \"./lmsys/Vicuna7bBot\";\nimport Vicuna13bBot from \"./lmsys/Vicuna13bBot\";\nimport Wizardlm13bBot from \"./lmsys/Wizardlm13bBot\";\nimport Wizardlm70bBot from \"./lmsys/Wizardlm70bBot\";\nimport FalconHC180bBot from \"./huggingface/FalconHC180bBot\";\nimport CodeLlamaHCBot from \"./huggingface/CodeLlamaHCBot\";\nimport WenxinQianfan4Bot from \"./baidu/WenxinQianfan4Bot\";\nimport Zephyr7bBot from \"./huggingface/Zephyr7bBot\";\n\nconst all = [\n  GeminiBot.getInstance(),\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  SageBot.getInstance(), // Assistant@Poe\n  BardBot.getInstance(),\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGLM6bBot.getInstance(),\n  ChatGLM36bBot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  CodeLlama34bPoeBot.getInstance(),\n  CodeLlamaHCBot.getInstance(),\n  CodeLlamaBot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WenxinQianfanTurboBot.getInstance(),\n  WenxinQianfan4Bot.getInstance(),\n  Falcon180bBot.getInstance(),\n  FalconHC180bBot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  ChatGPTBrowsingBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  OpenAIAPI4128KBot.getInstance(),\n  ChatGPT432kPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  Llama27bBot.getInstance(),\n  Llama213bBot.getInstance(),\n  Llama270bPoeBot.getInstance(),\n  Llama270bBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MOSSBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  OpenAssistantBot.getInstance(),\n  GooglePalm2PoeBot.getInstance(),\n  PhindBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  Vicuna7bBot.getInstance(),\n  Vicuna13bBot.getInstance(),\n  VicunaBot.getInstance(),\n  Wizardlm13bBot.getInstance(),\n  Wizardlm70bBot.getInstance(),\n  Zephyr7bBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [\"ClaudeBot\", \"AlpacaBot\", \"HuggingChatBot\", \"Falcon180bBot\"];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    return all.find((bot) => bot.getClassname() === className);\n  },\n};\n\ndisabled.forEach((className) => {\n  const bot = bots.getBotByClassName(className);\n  bot?.disable();\n});\n\nexport const botTags = {\n  free: [\n    bots.getBotByClassName(\"BardBot\"),\n    bots.getBotByClassName(\"BingChatBalancedBot\"),\n    bots.getBotByClassName(\"BingChatCreativeBot\"),\n    bots.getBotByClassName(\"BingChatPreciseBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"ChatGPT35Bot\"),\n    bots.getBotByClassName(\"ChatGPT35PoeBot\"),\n    bots.getBotByClassName(\"ClaudeBot\"),\n    bots.getBotByClassName(\"ClaudeInstantPoeBot\"),\n    bots.getBotByClassName(\"GooglePalm2PoeBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"YouChatBot\"),\n    bots.getBotByClassName(\"GradioAppBot\"),\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"CharacterAIBot\"),\n    bots.getBotByClassName(\"ClaudeAIBot\"),\n    bots.getBotByClassName(\"PhindBot\"),\n    bots.getBotByClassName(\"PiBot\"),\n    bots.getBotByClassName(\"SageBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n  ],\n  paid: [\n    bots.getBotByClassName(\"ChatGPT4Bot\"),\n    bots.getBotByClassName(\"ChatGPT4MobileBot\"),\n    bots.getBotByClassName(\"ChatGPT4PoeBot\"),\n    bots.getBotByClassName(\"ChatGPTBrowsingBot\"),\n    bots.getBotByClassName(\"ClaudeInstant100kPoeBot\"),\n    bots.getBotByClassName(\"ClaudePlusPoeBot\"),\n    bots.getBotByClassName(\"ChatGPT432kPoeBot\"),\n  ],\n  openSource: [\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama270bPoeBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"OpenAssistantBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n  ],\n  api: [\n    bots.getBotByClassName(\"GeminiBot\"),\n    bots.getBotByClassName(\"AzureOpenAIAPIBot\"),\n    bots.getBotByClassName(\"OpenAIAPI35Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI3516KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI4128KBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n  ],\n  madeInChina: [\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n  ],\n};\nexport default bots;\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [39, 40]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n    if (available) {\n      this._sendFnIndex(43, \"\", () => {}, 0); // Refresh the session\n    }\n    return available;\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    } else if (fn_index === 43) {\n      r = [{}];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      r = data[1][data[1].length - 1][1];\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n\n      // Refresh the session too\n      const context = this.createChatContext();\n      this.setChatContext(context);\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    if (\n      store.state.azureOpenaiApi.azureApiKey &&\n      store.state.azureOpenaiApi.azureApiInstanceName &&\n      store.state.azureOpenaiApi.azureOpenAIApiDeploymentName &&\n      store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n      azureOpenAIApiInstanceName:\n        store.state.azureOpenaiApi.azureApiInstanceName,\n      azureOpenAIApiDeploymentName:\n        store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n      azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n      temperature: store.state.azureOpenaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot, { LoginError } from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://copilot.microsoft.com/\";\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.12.3 OS/macOS\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://copilot.microsoft.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.status == 200 && response.data?.result?.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature:\n          response.data.conversationSignature ??\n          response.headers[\"x-sydney-conversationsignature\"],\n        secAccessToken:\n          response.headers[\"x-sydney-encryptedconversationsignature\"],\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Copilot conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://copilot.microsoft.com/turing/conversation/chats\")\n      .then((response) => {\n        available =\n          response.data?.result?.value == \"Success\" &&\n          !this.isAnonymous(response.data?.clientId); // Anonymous user is not supported any more\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking Copilot login status:\", error);\n      });\n\n    return available;\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"tnamobcf\",\n            \"adssqovr\",\n            \"inlineadsv2\",\n            \"inlineadscont\",\n            \"1542\",\n            \"1211enbackfix\",\n            \"cmcallcf\",\n            \"ctvismctrl\",\n            \"sydtransview\",\n            \"exptonecf\",\n            \"bgstream\",\n            \"abv2cl\",\n            \"1215persc\",\n            \"0212boptpsc\",\n            \"14bicfluxv2\",\n            \"111mem\",\n            \"116langwb\",\n            \"0124dv1s0\",\n            \"0126hpctas0\",\n            \"1pgptwdess0\",\n          ],\n          verbosity: \"verbose\",\n          scenario: \"SERP\",\n          plugins: [],\n          isStartOfSession: context.invocationId === 0,\n          requestId: uuid,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          conversationSignature: context.conversationSignature, // TODO: test if this is needed when secAccessToken is set\n          participant: { id: context.clientId },\n          spokenTextMode: \"None\",\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        // If secAccessToken is not set, use the old way to pass conversationSignature\n        const url = context.secAccessToken\n          ? `wss://sydney.bing.com/sydney/ChatHub?sec_access_token=${encodeURIComponent(\n              context.secAccessToken,\n            )}`\n          : \"wss://sydney.bing.com/sydney/ChatHub\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data) + seperator;\n          },\n          unpackMessage: (data) => {\n            return data\n              .toString()\n              .split(seperator)\n              .filter(Boolean)\n              .map((r) => JSON.parse(r));\n          },\n        });\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n                this.setChatContext(context);\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Copilot:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (this.isAnonymous(context.clientId)) {\n                      reject(new LoginError(event.item.result.message));\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(\n                      new Error(\n                        `${event.item.result.message} (${event.item.result.value})`,\n                      ),\n                    );\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Copilot response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  static _arkoseScriptLoaded = false;\n  static _myEnforcement = null;\n  static _arkosePromise = null;\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (!response.data?.error && response.data?.accessToken) {\n        this.accessToken = response.data.accessToken;\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n    }\n\n    if (available) {\n      this.loadArkoseScript();\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(available);\n\n    return available;\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  loadArkoseScript() {\n    // Append the Arkose JS tag to the Document Body. Reference https://github.com/ArkoseLabs/arkose-examples/blob/main/vue-example/src/components/Arkose.vue\n    if (!ChatGPTBot._arkoseScriptLoaded) {\n      ChatGPTBot._arkoseScriptLoaded = true;\n      console.log(\"Loading Arkose API Script\", this.getFullname());\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src =\n        \"https://tcr9i.chat.openai.com/v2/35536E1E-65B4-4D96-9D97-6ADB7EFF8147/api.js\";\n      script.setAttribute(\"data-callback\", \"setupEnforcement\");\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        console.log(\"Arkose API Script loaded\");\n        window.setupEnforcement = this.setupEnforcement.bind(this);\n      };\n      script.onerror = () => {\n        console.log(\"Could not load the Arkose API Script!\");\n      };\n    }\n  }\n\n  setupEnforcement(myEnforcement) {\n    ChatGPTBot._myEnforcement = myEnforcement;\n    ChatGPTBot._myEnforcement.setConfig({\n      onReady: () => {},\n      onShown: () => {},\n      onShow: () => {},\n      onSuppress: () => {},\n      onCompleted: (response) => {\n        ChatGPTBot._arkosePromise.resolve(response.token);\n      },\n      onReset: () => {},\n      onHide: () => {},\n      onError: (response) => {\n        console.log(\"Arkose error:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n      onFailed: (response) => {\n        console.log(\"Arkose failed:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n    });\n  }\n\n  async getArkoseToken() {\n    if (ChatGPTBot._myEnforcement) {\n      return new Promise((resolve, reject) => {\n        ChatGPTBot._arkosePromise = { resolve, reject };\n        ChatGPTBot._myEnforcement.run();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    // Send the prompt to the ChatGPT API\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      arkose_token: await this.getArkoseToken(),\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          { headers, payload },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data.trim() === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n\n              // Ignore messages which includes repeated content\n              if (data.message?.metadata?.is_complete) return;\n\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message_id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              return;\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.openaiApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      configuration: {\n        basePath: store.state.openaiApi.alterUrl\n          ? store.state.openaiApi.alterUrl\n          : \"\",\n      },\n      openAIApiKey: store.state.openaiApi.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.openaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { settings } = this.context;\n    const formkey = store.state.poe.formkey;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"4LxgHM6KpFqokX0Ox\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude-2-100k\",\n      capybara: \"Assistant\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n      vizcacha: \"GPT-4-32k\",\n      code_llama_34b_instruct: \"Code-Llama-34b\",\n      acouchy: \"Google-PaLM-2\",\n      llama_2_70b_chat: \"Llama-2-70b\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      const response = await axios.get(url);\n\n      // Parse buildId\n      const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n      this.context.buildId = buildId[1];\n\n      // Parse chatId\n      const chatId = response.data.match(/\"chatId\":(\\d+),/);\n      this.context.chatId = chatId[1];\n\n      available = true;\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","export const Type = {\n  Text: 0,\n  Slider: 1,\n  Select: 2,\n  Combobox: 3,\n};\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport zhtwMessages from \"./locales/zhtw.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  zhtw: zhtwMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport Chats from \"@/store/chats\";\nimport { migrateChatsMessagesThreads } from \"@/store/migration\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nawait store.restored; // wait for state to be restore\nstore.commit(\"migrateSettingsPrompts\");\nstore.commit(\"migrateSettingArrayIndexUseUUID\");\nawait migrateChatsMessagesThreads();\nawait Chats.addFirstChatIfEmpty();\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\n\nconst vuetify = createVuetify({\n  components: { ...components },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","import db from \"@/store/db\";\nimport store from \"@/store/index\";\nimport i18n from \"@/i18n\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Chats {\n  static get table() {\n    return db.table(\"chats\");\n  }\n\n  static async addFirstChatIfEmpty() {\n    const count = await Chats.table.count();\n    if (count === 0) {\n      store.commit(\n        \"selectChat\",\n        await Chats.add({\n          favBots: [\n            // default bots\n            { classname: \"ChatGPT35Bot\", selected: true },\n            { classname: \"ChatGPT4Bot\", selected: true },\n            { classname: \"BingChatCreativeBot\", selected: true },\n            { classname: \"BingChatBalancedBot\", selected: true },\n            { classname: \"BingChatPreciseBot\", selected: true },\n            { classname: \"BardBot\", selected: true },\n            { classname: \"ClaudeInstantPoeBot\", selected: true },\n            { classname: \"FalconHC180bBot\", selected: true },\n            { classname: \"Llama270bBot\", selected: true },\n            { classname: \"VicunaBot\", selected: true },\n          ],\n        }),\n      );\n    }\n  }\n\n  static async getCurrentChat() {\n    return await Chats.table.get(store.state.currentChatIndex);\n  }\n\n  static async add(payload) {\n    const currentChat = await Chats.getCurrentChat();\n    const count = await Chats.table.count();\n    const newKey = await Chats.table.add({\n      index: uuidv4(),\n      contexts: {},\n      favBots: currentChat ? currentChat.favBots : [],\n      createdTime: new Date().getTime(),\n      modifiedTime: new Date().getTime(),\n      title: `${i18n.global.t(\"chat.newChat\")} ${count + 1}`,\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Chats.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Chats;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"ChatALL\");\ndb.version(1).stores({\n  chats: \"index, title, modifiedTime, selectedTime\",\n  messages: \"index, chatIndex, createdTime, modifiedTime\",\n  threads: \"index, chatIndex, messageIndex, createdTime, modifiedTime\",\n});\n\nexport default db;\n","import { getMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport localForage from \"localforage\";\nimport { isProxy, isReactive, isRef, toRaw } from \"vue\";\nimport { createStore } from \"vuex\";\nimport VuexPersistence from \"vuex-persist\";\nimport Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Threads from \"./threads\";\nimport { messageQueue, threadMessageQueue } from \"./queue\";\n\nconst vuexPersist = new VuexPersistence({\n  key: \"chatall-app\",\n  storage: localForage,\n  asyncStorage: true,\n  reducer: (state) => {\n    /* eslint-disable no-unused-vars */\n    const { updateCounter, selectedResponses, ...persistedState } = state;\n    /* eslint-enable no-unused-vars */\n    return deepToRaw(persistedState);\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    gemini: {\n      apiKey: \"\",\n      temperature: 0.7,\n      pastRounds: 5,\n      topK: 16,\n      topP: 0.95,\n    },\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    moss: {\n      token: \"\",\n    },\n    chatGlm: {\n      token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      token: \"\",\n      ttl: 0,\n    },\n    claudeAi: {\n      org: \"\",\n      model: \"claude-2.0\",\n    },\n    poe: {\n      formkey: \"\",\n    },\n    falcon: {\n      temperature: 0.9,\n      maxNewTokens: 256,\n      topP: 0.9,\n      repetitionPenalty: 1.2,\n    },\n    phind: {\n      model: \"Phind Model\",\n    },\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    prompts: [],\n    actions: [\n      {\n        name: \"Summarize 1\",\n        prefix:\n          \"Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\\nDo not include the response' value column in your table.\\nSimplify the data and identify the differences.\\nEach response is delimited by the `resp` tag.\\nInside every response, the bot's name is delimited by the `name` tag, and the bot's response is delimited by the `value` tag.\",\n        template:\n          \"<resp>\\n  <name>{botName}</name>\\n  <value>{botResponse}</value>\\n</resp>\",\n        suffix: \"Give me the best response.\",\n        index: 0,\n      },\n    ],\n    selectedResponses: [],\n    chat: {\n      updateDebounceInterval: 100,\n    },\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    async setBotSelected(state, { botClassname, selected }) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          bot.selected = selected;\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    async setFavBotOrder(state, newOrder) {\n      const currentChat = await Chats.getCurrentChat();\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n      Chats.table.update(currentChat.index, { favBots: currentChat.favBots });\n    },\n    async addFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      const favBots = currentChat.favBots;\n      currentChat.favBots.push({ classname: botClassname, selected: true });\n      Chats.table.update(currentChat.index, {\n        favBots,\n      });\n    },\n    async removeFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          currentChat.favBots.splice(i, 1);\n\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setGemini(state, values) {\n      state.gemini = { ...state.gemini, ...values };\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setChatGLM(state, token) {\n      state.chatGlm = { ...state.chatGlm, ...token };\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setPoe(state, values) {\n      state.poe = { ...state.poe, ...values };\n    },\n    setPhind(state, values) {\n      state.phind = { ...state.phind, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      Chats.table.update(state.currentChatIndex, {\n        latestPromptIndex: promptIndex,\n      });\n    },\n    setLatestThreadPromptIndex(state, { promptIndex, messageIndex }) {\n      Chats.table.update(state.currentChatIndex, {\n        latestThreadPromptIndex: promptIndex,\n      });\n      Messages.table.update(messageIndex, {\n        hasThread: true,\n      });\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      Chats.table.update(state.currentChatIndex, {\n        [`contexts.${botClassname}`]: context,\n      });\n    },\n    clearMessages(state) {\n      Chats.table.where(\"index\").equals(state.currentChatIndex).modify({\n        contexts: {},\n      });\n      Messages.table.where(\"chatIndex\").equals(state.currentChatIndex).delete();\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n      Chats.table.update(index, { selectedTime: new Date().getTime() });\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    async editChatTitle(state, { index, payload }) {\n      const currentChat = await Chats.table.get(index);\n      if (currentChat) {\n        if (\n          payload.isEditedByUser ||\n          (!currentChat.isTitleUserEdited && !payload.isEditedByUser)\n        ) {\n          Chats.update(index, {\n            ...payload,\n            isTitleUserEdited: payload.isEditedByUser\n              ? true\n              : currentChat.isTitleUserEdited,\n          });\n        }\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    async deleteChats(state) {\n      const currentChat = await Chats.getCurrentChat();\n      await Chats.table.clear();\n      await Messages.table.clear();\n      await Threads.table.clear();\n      state.currentChatIndex = await Chats.add({\n        favBots: currentChat ? currentChat.favBots : [],\n      });\n      Chats.table.update(state.currentChatIndex, {\n        selectedTime: new Date().getTime(),\n      });\n    },\n    addPrompt(state, values) {\n      state.prompts.push({ ...values, index: uuidv4() });\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      const prompt = state.prompts.find((item) => item.index === index);\n      for (const key in values) {\n        prompt[key] = values[key];\n      }\n    },\n    deletePrompt(state, values) {\n      const { index } = values;\n      let prompt = state.prompts.find((item) => item.index === index);\n      prompt.hide = true;\n    },\n    addAction(state, values) {\n      state.actions.push({ ...values, index: uuidv4() });\n    },\n    editAction(state, values) {\n      const { index } = values;\n      const action = state.actions.find((item) => item.index === index);\n      for (const key in values) {\n        action[key] = values[key];\n      }\n    },\n    deleteAction(state, values) {\n      const { index } = values;\n      let action = state.actions.find((item) => item.index === index);\n      action.hide = true;\n    },\n    addSelectedResponses(state, value) {\n      value.selectedIndex = state.selectedResponses.push(value) - 1;\n    },\n    deleteSelectedResponses(state, value) {\n      const index = state.selectedResponses.findIndex(\n        (r) => r.selectedIndex === value,\n      );\n      state.selectedResponses.splice(index, 1);\n    },\n    deleteAllSelectedResponses(state) {\n      state.selectedResponses = [];\n    },\n    migrateSettingsPrompts(state) {\n      if (localStorage.getItem(\"isMigratedSettingsPrompts\") === \"true\") {\n        return;\n      }\n      const app = JSON.parse(localStorage.getItem(\"chatall-app\"));\n      const promptsData = JSON.parse(localStorage.getItem(\"chatall-prompts\"));\n      for (const key in app) {\n        state[key] = app[key];\n      }\n      state.prompts = promptsData ? promptsData.prompts : [];\n      localStorage.setItem(\"isMigratedSettingsPrompts\", true);\n    },\n    updateSetting(state, { key, value }) {\n      state[key] = value;\n    },\n    updateSettingArray(state, { key, value, index }) {\n      for (const prop in state[key][index]) {\n        state[key][index][prop] = value[prop];\n      }\n    },\n    pushSettingArray(state, { key, value }) {\n      state[key].push(value);\n    },\n    migrateSettingArrayIndexUseUUID(state) {\n      if (\n        localStorage.getItem(\"isMigrateSettingArrayIndexUseUUID\") === \"true\"\n      ) {\n        return;\n      }\n      const settings = toRaw(state);\n      for (const key in settings) {\n        if (Array.isArray(state[key])) {\n          for (const item of state[key]) {\n            if (typeof item.index === \"number\" || !item.index) {\n              item.index = uuidv4();\n            }\n          }\n        }\n      }\n      localStorage.setItem(\"isMigrateSettingArrayIndexUseUUID\", true);\n    },\n    setChat(state, values) {\n      values = {\n        ...values,\n        updateDebounceInterval: parseInt(values.updateDebounceInterval),\n      };\n      state.chat = { ...state.chat, ...values };\n    },\n  },\n  actions: {\n    async sendPrompt({ commit, dispatch }, { prompt, bots, promptIndex }) {\n      const currentChat = await Chats.getCurrentChat();\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n        };\n        // add message\n        promptIndex = await Messages.add(currentChat.index, promptMessage);\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const msgs = [];\n      for (const bot of bots) {\n        const msg = {\n          index: uuidv4(),\n          promptIndex: promptIndex,\n          chatIndex: currentChat.index,\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          className: bot.getClassname(),\n          createdTime: new Date().getTime(),\n        };\n        await Messages.table.add(msg);\n        msgs.push(msg);\n      }\n      for (let i = 0; i < bots.length; i++) {\n        const bot = bots[i];\n        const message = msgs[i];\n        bot.sendPrompt(\n          prompt,\n          (index, values) =>\n            dispatch(\"updateMessage\", { index, message: values }),\n          message.index,\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          message.className,\n          prompt.length,\n        );\n      }\n    },\n    async sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, messageIndex, promptIndex },\n    ) {\n      if (!promptIndex) {\n        // not resend\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        promptIndex = await Threads.add(\n          state.currentChatIndex,\n          messageIndex,\n          threadPromptMessage,\n        );\n      }\n      commit(\"setLatestThreadPromptIndex\", { promptIndex, messageIndex }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n      threadResponseMessage.index = await Threads.add(\n        state.currentChatIndex,\n        messageIndex,\n        threadResponseMessage,\n      );\n\n      bot.sendPrompt(\n        prompt,\n        (index, values) =>\n          dispatch(\"updateThreadMessage\", { index, message: values }),\n        threadResponseMessage.index,\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    async updateMessage(_, { index, message: values }) {\n      messageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const chat = await Messages.table.get(index);\n        const message = { ...chat, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    async updateThreadMessage(_, { index, message: values }) {\n      threadMessageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const thread = await Threads.table.get(index);\n        let message = { ...thread, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    addSelectedResponses({ commit, state }, value) {\n      commit(\"addSelectedResponses\", value);\n      return state.selectedResponses.length - 1;\n    },\n  },\n  getters: {\n    currentChat: async (state) => {\n      const currentChat = await Chats.table.get(state.currentChatIndex);\n      return currentChat;\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {},\n  plugins: [vuexPersist.plugin],\n});\n\n// call toRaw to nested array before storing with localForage\nfunction deepToRaw(sourceObj) {\n  const objectIterator = (input) => {\n    if (Array.isArray(input)) {\n      const result = [];\n      for (const item of input) {\n        result.push(objectIterator(item));\n      }\n      return result;\n    }\n    if (isRef(input) || isReactive(input) || isProxy(input)) {\n      return objectIterator(toRaw(input));\n    }\n    if (input && typeof input === \"object\") {\n      return Object.keys(input).reduce((acc, key) => {\n        acc[key] = objectIterator(input[key]);\n        return acc;\n      }, {});\n    }\n    return input;\n  };\n\n  return objectIterator(sourceObj);\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Messages {\n  static get table() {\n    return db.table(\"messages\");\n  }\n\n  static async add(chatIndex, payload) {\n    const newKey = await Messages.table.add({\n      chatIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Messages.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n\n  static async getMessages(index) {\n    return await Messages.table\n      .where({ chatIndex: index })\n      .sortBy(\"createdTime\");\n  }\n\n  static async getMessagesCount(index) {\n    return await Messages.table.where({ chatIndex: index }).count();\n  }\n}\n\nexport default Messages;\n","import Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst migrateChatsMessagesThreads = async () => {\n  const chatIndexMap = {};\n  let messageIndexMap = {};\n  let threadIndexMap = {};\n  const chatsMigrateData = [];\n  const messagesMigrateData = [];\n  const threadsMigrateData = [];\n  try {\n    if (localStorage.getItem(\"isMigratedChatsMessagesThreads\") === \"true\") {\n      if (localStorage.getItem(\"isMigratedHasThread\") !== \"true\") {\n        migrateHasThread();\n      }\n      return;\n    }\n    const data = JSON.parse(localStorage.getItem(\"chatall-messages\"));\n    if (data === null) {\n      localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n      return;\n    }\n    const chats = data.chats;\n    for (let i = 0; i < chats.length; i++) {\n      const chat = chats[i];\n      if (!chat) {\n        continue;\n      }\n      chat.index = getIndex(chatIndexMap, chat.index);\n      chat.index = getAndGenerateUuidIfNotExist(chatIndexMap, chat.index);\n      chat.modifiedTime = chat.createdTime;\n      let createdTime = chat.createdTime || 0;\n      for (let j = 0; j < chat.messages.length; j++) {\n        const message = chat.messages[j];\n        if (!message) {\n          continue;\n        }\n        message.index = getIndex(messageIndexMap, message.index);\n        message.index = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          message.index,\n        );\n        message.chatIndex = chat.index;\n        message.createdTime = createdTime + j;\n        if (chat.threads && chat.threads.length) {\n          message.hasThread = true;\n        }\n        messagesMigrateData.push(message);\n      }\n      if (!chat.threads) {\n        // skip for old version do not have threads array\n        continue;\n      }\n      for (let q = 0; q < chat.threads.length; q++) {\n        const thread = chat.threads[q];\n        if (!thread) {\n          continue;\n        }\n        const messageIndex = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          thread.responseIndex,\n        );\n        let createdTime = chat.createdTime || 0;\n        for (let p = 0; p < thread.messages.length; p++) {\n          const threadMessage = thread.messages[p];\n          if (!threadMessage) {\n            continue;\n          }\n          threadMessage.index = getIndex(threadIndexMap, threadMessage.index);\n          threadMessage.index = getAndGenerateUuidIfNotExist(\n            threadIndexMap,\n            threadMessage.index,\n          );\n          threadMessage.messageIndex = messageIndex;\n          threadMessage.chatIndex = chat.index;\n          threadMessage.createdTime = createdTime + p;\n          if (threadMessage.type === \"response\") {\n            threadMessage.promptIndex = getAndGenerateUuidIfNotExist(\n              threadIndexMap,\n              threadMessage.promptIndex,\n            );\n          }\n          threadsMigrateData.push(threadMessage);\n        }\n      }\n      messageIndexMap = {};\n      threadIndexMap = {};\n      delete chat.messages;\n      chatsMigrateData.push(chat);\n    }\n    console.log(chatsMigrateData);\n    console.log(messagesMigrateData);\n    console.log(threadsMigrateData);\n    try {\n      await Chats.table.bulkAdd(chatsMigrateData);\n    } catch (error) {\n      console.error(\"Chats Migration error:\", error);\n    }\n    try {\n      await Messages.table.bulkAdd(messagesMigrateData);\n    } catch (error) {\n      console.error(\"Messages Migration error:\", error);\n    }\n    try {\n      await Threads.table.bulkAdd(threadsMigrateData);\n    } catch (error) {\n      console.error(\"Threads Migration error:\", error);\n    }\n    localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n    localStorage.setItem(\"isMigratedHasThread\", true);\n    console.log(\"Migration done\");\n  } catch (error) {\n    console.error(\"Migration error:\", error);\n  }\n};\n\nfunction getAndGenerateUuidIfNotExist(map, key) {\n  if (map[key] === undefined) {\n    map[key] = uuidv4();\n  }\n  return map[key];\n}\n\nfunction getIndex(map, key) {\n  if (map[key] !== undefined) {\n    // duplicate key not allowed\n    return uuidv4();\n  }\n  return key;\n}\n\nasync function migrateHasThread() {\n  // update Message hasThread property to `true` if messageIndex existed in Thread\n  const messageIndexes = await Threads.table\n    .orderBy(\"messageIndex\")\n    .distinct()\n    .uniqueKeys();\n  for (const index of messageIndexes) {\n    try {\n      await Messages.table.update(index, { hasThread: true });\n    } catch (error) {\n      console.error(\"migrateHasThread error:\", error);\n    }\n  }\n  localStorage.setItem(\"isMigratedHasThread\", true);\n}\n\nexport { migrateChatsMessagesThreads };\n","import Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\n/* eslint-disable no-unused-vars */\nimport { Table, UpdateSpec, TKey } from \"dexie\";\nimport { Store } from \"vuex\";\n\n/** @type {Queue} */\nexport let messageQueue;\n/** @type {Queue} */\nexport let threadMessageQueue;\n\n/**\n * @param {Store} store\n */\nexport function initializeQueues(store) {\n  messageQueue = new Queue(store, Messages.table, \"messageQueue\");\n  threadMessageQueue = new Queue(store, Threads.table, \"threadMessageQueue\");\n}\n\nexport function startQueuesProcessing() {\n  messageQueue.processQueue();\n  threadMessageQueue.processQueue();\n}\n\nclass Queue {\n  /** @type {Store} */\n  store;\n  /** @type {Table} */\n  table;\n  _queue = [];\n  queueName = \"\";\n  isProcessing = false;\n\n  static DEFAULT_UPDATE_DEBOUNCE_INTERVAL = 100;\n  debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n\n  get queue() {\n    return this._queue;\n  }\n\n  /**\n   * @param {Store} store\n   * @param {Table} table\n   * @param {string} queueName\n   */\n  constructor(store, table, queueName = \"\") {\n    this.table = table;\n    this.store = store;\n    this.queueName = queueName;\n  }\n\n  async processQueue() {\n    if (!this.isProcessing && this.queue.length > 0) {\n      this.isProcessing = true;\n\n      this.setUpdateDebounceTime();\n\n      const mergedMessages = [];\n      /** @type {Array.<{key: TKey, changes: UpdateSpec}>} */\n      const indexMap = {};\n\n      // console.log(this.queueName);\n      // console.table(\n      //   this.queue.map((obj) => {\n      //     return {\n      //       index: obj.index,\n      //       content: obj.message.content,\n      //       done: obj.message.done,\n      //     };\n      //   }),\n      // );\n\n      const queueCopy = [...this.queue];\n      for (const item of queueCopy) {\n        const index = item.index;\n        if (!indexMap[index]) {\n          indexMap[index] = { key: index, changes: {} };\n          mergedMessages.push(indexMap[index]);\n        }\n        for (const propKey in item.message) {\n          indexMap[index].changes[propKey] = item.message[propKey];\n        }\n        this.queue.shift(); // remove from queue\n      }\n\n      // console.log(this.queueName + \" result\");\n      // console.table(\n      //   mergedMessages.map((obj) => {\n      //     return {\n      //       index: obj.key,\n      //       content: obj.changes.content,\n      //       done: obj.changes.done,\n      //     };\n      //   }),\n      // );\n\n      await this.table.bulkUpdate(mergedMessages);\n\n      this.isProcessing = false;\n    }\n    setTimeout(this.processQueue.bind(this), this.debounceTime);\n  }\n\n  setUpdateDebounceTime() {\n    if (typeof this.store.state.chat.updateDebounceInterval === \"number\") {\n      this.debounceTime = this.store.state.chat.updateDebounceInterval;\n    } else {\n      this.debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n    }\n  }\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Threads {\n  static get table() {\n    return db.table(\"threads\");\n  }\n\n  static async add(chatIndex, messageIndex, payload) {\n    const newKey = await Threads.table.add({\n      chatIndex,\n      messageIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Threads.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Threads;\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","export const scrollToBottom = ({ immediately = false }) => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: immediately ? \"instant\" : \"smooth\",\n  });\n};\n\nexport const autoScrollToBottom = () => {\n  if (autoScroll) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nexport const onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll = scrollPosition >= document.documentElement.scrollHeight - 40;\n};\n\nexport let autoScroll = false;\n","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"props.currentChatIndex === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    class=\"pa-3 pr-0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\" class=\"mr-4\"> mdi-message-outline </v-icon>\n    </template>\n    <template #append v-if=\"props.currentChatIndex === props.chat.index\">\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding: 6px\"\n    class=\"pl-3 pr-0\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst emit = defineEmits([\n  \"hideChat\",\n  \"editChatTitle\",\n  \"selectChat\",\n  \"focusTextarea\",\n]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n  currentChatIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  emit(\"selectChat\", props.chat.index);\n}\n\nasync function confirmHideChat() {\n  emit(\"hideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  emit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__append {\n  margin-left: 0 !important;\n}\n\n:deep() .v-input__prepend {\n  margin-right: 0.25rem !important;\n}\n\n:deep() .v-field__input {\n  padding-left: 12px;\n  padding-right: 0;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() div.v-list-item__prepend {\n  display: block;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=d78952d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d78952d6\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddChat\"\n        @shortkey=\"onAddChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in drawerItems\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :key=\"chat.index\"\n        :chat=\"chat\"\n        :current-chat-index=\"store.state.currentChatIndex\"\n        @hide-chat=\"hideChat\"\n        @select-chat=\"selectChat\"\n        @edit-chat-title=\"editChatTitle\"\n        @focus-textarea=\"focusTextarea\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick, onUpdated, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst drawerItems = useObservable(\n  liveQuery(() => Chats.table.orderBy(\"modifiedTime\").reverse().toArray()),\n);\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction selectChat(index) {\n  store.commit(\"selectChat\", index);\n  focusTextarea();\n}\n\nasync function onAddChat() {\n  store.commit(\"selectChat\", await Chats.add());\n  focusTextarea();\n}\n\nasync function hideChat() {\n  const confirm = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (confirm) {\n    await Chats.update(store.state.currentChatIndex, { hide: true });\n    selectLatestVisibleChat();\n  }\n}\n\nasync function editChatTitle(payload) {\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload,\n  });\n}\n\nasync function selectLatestVisibleChat() {\n  const latestChat = await Chats.table\n    .orderBy(\"modifiedTime\")\n    .reverse()\n    .filter((chat) => !chat.hide)\n    .first();\n  if (latestChat) {\n    store.commit(\"selectChat\", latestChat.index);\n    focusTextarea();\n  } else {\n    // if there is no visible chat, create a new chat\n    onAddChat();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem !important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=55649f6e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55649f6e\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ message ? message.content : \"\" }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4ce9f836&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ce9f836\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"message.type === 'prompt'\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <chat-response\n      v-else\n      :chat=\"chat\"\n      :columns=\"1\"\n      :messages=\"message\"\n      :messagePromptIndex=\"messagePromptIndex\"\n      :isThread=\"true\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponse from \"@/components/Messages/ChatResponse.vue\";\nimport Threads from \"@/store/threads\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick } from \"vue\";\nimport { autoScrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messageIndex: {\n    type: String,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst currentChatMessages = useObservable(\n  liveQuery(async () => {\n    const keys = await Threads.table\n      .where(\"messageIndex\")\n      .equals(props.messageIndex)\n      .primaryKeys();\n    console.log(\"thread key count: \", keys.length);\n    const messages = await Threads.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n    console.log(\"groupedMessage threads: \", groupedMessage);\n    return groupedMessage;\n  }),\n);\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted && isSelectedResponsesEmpty ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n      isSelectedResponsesEmpty ? 'cursor-auto' : 'cursor-pointer',\n      isSelected ? 'highlight-border' : '',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n    :ripple=\"!isSelectedResponsesEmpty\"\n    @click=\"!isSelectedResponsesEmpty && select($event)\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n        v-show=\"isSelectedResponsesEmpty\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        v-show=\"isSelectedResponsesEmpty\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        v-show=\"isSelectedResponsesEmpty\"\n        icon\n        @click=\"hide\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        :class=\"getSelectButtonClass\"\n        @click=\"select($event)\"\n      >\n        <v-icon>{{\n          isSelected ? \"mdi-check-circle\" : \"mdi-check-circle-outline\"\n        }}</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"messages && messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!isThread && messages.length && messages[0].hasThread\">\n        <chat-thread\n          :chat=\"chat\"\n          :messageIndex=\"messages[0].index\"\n          :messagePromptIndex=\"messages[0].promptIndex\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!isThread && message && message.hasThread\">\n          <chat-thread\n            :chat=\"chat\"\n            :messageIndex=\"message.index\"\n            :messagePromptIndex=\"messages[0].promptIndex\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageLeftButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageLeft\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageRightButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageRight\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowReplyButtonInDOM\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { Theme } from \"@/theme\";\nimport { computed, nextTick, onMounted, ref, toRaw, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatThread from \"./ChatThread.vue\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst matomo = useMatomo();\nconst store = useStore();\nconst messages = computed(() => props.messages);\nconst chat = computed(() => props.chat);\nwatch(\n  messages,\n  async () => {\n    carouselModel.value = maxPage.value;\n  },\n  { deep: true },\n);\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst pageLeftButton = ref();\nconst pageRightButton = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst isSelected = ref(false);\nconst isSelectedList = ref([]);\nconst isSelectedResponsesEmpty = ref(\n  store.state.selectedResponses.length === 0,\n);\nconst botInstance = computed(() => {\n  return messages.value && messages.value.length\n    ? bots.getBotByClassName(messages.value[0].className)\n    : undefined;\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() =>\n  props.messages.length ? props.messages[maxPage.value].highlight : false,\n); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messagesRef array is in correct order\n  () =>\n    props.messages.length &&\n    props.chat?.latestPromptIndex === props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messagesRef array is in correct order\n    // const responseIndex = props.chat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex = messages.value?.length\n      ? messages.value[0].promptIndex\n      : undefined; // using responseIndex to get response from messagesRef, and in the repsonse we can retrieve promptIndex\n    return props.chat?.latestThreadPromptIndex === threadPromptIndex;\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected.value && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isShowReplyButtonInDOM = computed(() => {\n  if (props.isThread) {\n    return false;\n  } else {\n    return !(!isShowResendButton.value && !isShowReplyButton.value);\n  }\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.hasThread),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      props.chat &&\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      props.messages[0].promptIndex && // if current threads is a response to latest prompt\n      props.chat.latestPromptIndex &&\n      props.chat.latestPromptIndex === props.messagePromptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\nconst getSelectButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread && isSelectedResponsesEmpty.value,\n  \"hide-thread-btn\": props.isThread && isSelectedResponsesEmpty.value,\n}));\nconst messageBotIsSelected = computed(() => {\n  if (!messages.value.length) {\n    return false;\n  }\n  var favBot = chat.value?.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n});\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    messageIndex: messages.value[messages.value.length - 1].index, // always send prompt in thread to last page\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nwatch(\n  () => store.state.selectedResponses.length,\n  updateIsSelectedResponsesEmpty,\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    Threads.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  } else {\n    Messages.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[maxPage.value].className,\n    props.messages[maxPage.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      Threads.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    } else {\n      Messages.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nasync function resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage = await Threads.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        messageIndex: messages.value[maxPage.value].messageIndex, // always send prompt in thread to last page\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage = await Messages.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n\nlet selectedIndex = undefined;\nasync function select(event) {\n  event.stopPropagation();\n  if (\n    pageLeftButton.value?.$el.contains(event.target) ||\n    pageRightButton.value?.$el.contains(event.target)\n  ) {\n    // return when click on page left, right button\n    return;\n  }\n\n  if (isSelected.value) {\n    store.commit(\"deleteSelectedResponses\", selectedIndex);\n    isSelected.value = false;\n    const index = isSelectedList.value.indexOf(carouselModel.value);\n    isSelectedList.value.splice(index, 1);\n  } else {\n    selectedIndex = await store.dispatch(\"addSelectedResponses\", {\n      ...toRaw(props.messages[carouselModel.value]),\n    });\n    isSelected.value = true;\n    isSelectedList.value.push(carouselModel.value);\n  }\n}\n\nfunction updateIsSelectedResponsesEmpty() {\n  isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  if (isSelectedResponsesEmpty.value) {\n    isSelected.value = false;\n    isSelectedList.value = [];\n  }\n}\n\nfunction pageLeft() {\n  carouselModel.value = Math.max(carouselModel.value - 1, 0);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n\nfunction pageRight() {\n  carouselModel.value = Math.min(carouselModel.value + 1, maxPage.value);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn,\n.hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n\n.response:hover .hide-btn,\n.response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert {\n  filter: invert(100%);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=4a895324&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a895324\"]])\n\nexport default __exports__","<template>\n  <v-container v-if=\"loading\" class=\"ma-0 position-fixed\" style=\"z-index: 1\">\n    <v-label class=\"bg-background\" style=\"opacity: 1\">{{\n      $t(\"chat.loading\")\n    }}</v-label>\n  </v-container>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n        <chat-prompt\n          v-if=\"message.type === 'prompt'\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <chat-response\n          v-else\n          :chat=\"chat\"\n          :columns=\"columns\"\n          :messages=\"message\"\n        ></chat-response>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Messages from \"@/store/messages\";\nimport { liveQuery } from \"dexie\";\nimport { computed, nextTick, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\nimport { autoScrollToBottom, scrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chat: {\n    type: Object,\n  },\n});\n\nconst loading = ref(false);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst currentChatMessages = ref([]);\nlet createChatMessageLiveQuery = (index) => {\n  return liveQuery(async () => {\n    const keys = await Messages.table\n      .where(\"chatIndex\")\n      .equals(index)\n      .primaryKeys();\n    const messages = await Messages.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          // group responses with same bot for carousel\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n  });\n};\n\nconst currentChatIndex = computed(() => store.state.currentChatIndex);\nlet currentMessageSub;\nlet scrollToBottomFirst;\nwatch(\n  currentChatIndex,\n  (newChat, oldChat) => {\n    if (newChat !== oldChat) {\n      loading.value = true;\n      scrollToBottomFirst = true;\n      if (currentMessageSub) {\n        currentMessageSub.unsubscribe();\n      }\n      currentMessageSub = createChatMessageLiveQuery(\n        store.state.currentChatIndex,\n      ).subscribe(() => {\n        loading.value = false;\n        if (scrollToBottomFirst) {\n          scrollToBottomFirst = false;\n          nextTick(() => scrollToBottom({ immediately: true }));\n        }\n      });\n    }\n  },\n  { immediate: true },\n);\n\nonMounted(async () => {\n  await Messages.table\n    .filter((message) => message.done !== true)\n    .modify({ done: true });\n});\n</script>\n\n<style scoped>\n.messages {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  padding: 0;\n}\n\n.message-grid {\n  display: grid;\n  grid-gap: 16px;\n  width: 100%;\n  padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=7d347add&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d347add\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacFile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.pacFile;\n  if (newInputfile.value) {\n    proxySettings.value.pacFile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.pacFile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {\n  PromptTemplate,\n  FewShotPromptTemplate,\n  LengthBasedExampleSelector,\n} from \"langchain/prompts\";\n\nconst prefixPlaceholder = `Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\nDo not include the response' value column in your table.\nSimplify the data and identify the differences.\nEach response is delimited by the \\`resp\\` tag.\nInside every response, the bot's name is delimited by the \\`name\\` tag, and the bot's response is delimited by the \\`value\\` tag.`;\nconst templatePlaceholder = `<resp>\n    <name>{botName}</name>\n    <value>{botResponse}</value>\n</resp>`;\nconst suffixPlaceholder = \"Give me the best response.\";\n\nasync function preview(prefix, exampleTemplate, suffix, data) {\n  const examplePrompt = new PromptTemplate({\n    template: exampleTemplate,\n    inputVariables: [\"botName\", \"botResponse\"],\n  });\n\n  const exampleSelector = await LengthBasedExampleSelector.fromExamples(data, {\n    examplePrompt,\n    maxLength: Number.MAX_VALUE,\n  });\n\n  const dynamicPrompt = new FewShotPromptTemplate({\n    exampleSelector,\n    examplePrompt,\n    prefix: prefix,\n    suffix: suffix,\n    inputVariables: [],\n  });\n  return await dynamicPrompt.format();\n}\n\nexport { prefixPlaceholder, templatePlaceholder, suffixPlaceholder, preview };\n","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setChat\"\n  ></CommonBotSettings>\n  <v-list>\n    <v-list-item>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.deleteAllChatHistory')\"\n        @click=\"deleteChats\"\n      ></v-btn>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-list-item-title style=\"font-size: 1.5rem\" class=\"pb-2\">\n        {{ $t(\"chat.exportImport\") }}</v-list-item-title\n      >\n      <v-list-item-subtitle>\n        {{ $t(\"chat.exportImportDesc\") }}</v-list-item-subtitle\n      >\n      <div class=\"pt-2\">\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.export')\"\n          @click=\"exportData\"\n        ></v-btn>\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.import')\"\n          @click=\"importData\"\n          style=\"margin-left: 10px\"\n        >\n        </v-btn>\n      </div>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-row>\n        <v-col class=\"align-baseline d-flex\" style=\"font-size: 1.5rem\">\n          <label class=\"pr-3\">{{ $t(\"chat.actions\") }}</label>\n          <v-btn\n            class=\"mt-1\"\n            color=\"primary\"\n            variant=\"outlined\"\n            prepend-icon=\"mdi-plus\"\n            :text=\"$t('chat.addAction')\"\n            @click=\"add\"\n          ></v-btn>\n        </v-col>\n      </v-row>\n    </v-list-item>\n    <v-list-item\n      v-for=\"action in userActions\"\n      density=\"comfortable\"\n      :key=\"action.index\"\n      :value=\"action.index\"\n      :ripple=\"false\"\n    >\n      <div class=\"align-center d-flex\">\n        <v-list-item-title class=\"pr-5\">{{ action.name }}</v-list-item-title>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-pencil-outline\"\n          @click=\"edit(action)\"\n          style=\"background-color: transparent\"\n        ></v-btn>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-delete-outline\"\n          @click=\"deleteAction(action)\"\n          style=\"margin: 0; background-color: transparent\"\n        ></v-btn>\n      </div>\n    </v-list-item>\n  </v-list>\n  <v-dialog\n    persistent\n    width=\"90%\"\n    height=\"90%\"\n    :model-value=\"isOpenAddEditAction\"\n    @update:model-value=\"isOpenAddEditAction = $event\"\n  >\n    <v-card>\n      <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n        <v-text-field\n          required\n          autofocus\n          v-model=\"actionName\"\n          placeholder=\"Summarize\"\n          :label=\"$t('chat.actionName')\"\n          :rules=\"[required]\"\n        ></v-text-field>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"prefix\"\n          :placeholder=\"prefixPlaceholder\"\n          :label=\"$t('chat.prefix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"4\"\n          v-model=\"template\"\n          :placeholder=\"templatePlaceholder\"\n          :label=\"$t('chat.actionTemplate')\"\n          :rules=\"[required]\"\n          @input=\"onInputTemplate\"\n        >\n          <template v-slot:append-inner>\n            <v-btn\n              flat\n              size=\"x-small\"\n              icon=\"mdi-help\"\n              style=\"background-color: inherit\"\n              @click=\"\n                isShowTemplateParametersDialog = !isShowTemplateGuideTooltip\n              \"\n            >\n            </v-btn>\n          </template>\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"suffix\"\n          :placeholder=\"suffixPlaceholder\"\n          :label=\"$t('chat.suffix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <label class=\"pl-4\" style=\"font-size: 1.2rem\">{{\n          $t(\"chat.preview\")\n        }}</label>\n        <chat-prompt\n          class=\"w-100\"\n          :message=\"{ content: previewRef }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-form>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          variant=\"outlined\"\n          color=\"primary\"\n          @click=\"isOpenAddEditAction = false\"\n          >{{ $t(\"modal.cancel\") }}</v-btn\n        >\n        <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditAction\">{{\n          $t(\"modal.done\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n  <v-dialog\n    width=\"auto\"\n    :model-value=\"isShowTemplateParametersDialog\"\n    v-on:after-leave=\"isShowTemplateParametersDialog = false\"\n  >\n    <v-card>\n      <v-md-preview class=\"pa-4\" :text=\"templateParametersInfo\" />\n    </v-card>\n  </v-dialog>\n  <ConfirmModal ref=\"confirmModal\" />\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n    <template v-slot:actions>\n      <v-btn variant=\"text\" @click=\"snackbar.show = false\">\n        {{ $t(\"updates.close\") }}\n      </v-btn>\n    </template>\n  </v-snackbar>\n  <v-dialog width=\"85vw\" :model-value=\"isShowImportProgressDialog\" persistent>\n    <v-card>\n      <v-card-title> {{ $t(\"chat.importLog\") }} </v-card-title>\n      <v-textarea\n        readonly\n        hide-details\n        rows=\"20\"\n        v-model=\"importProgressText\"\n        id=\"import-log-textarea\"\n        :loading=\"isImportCompleted === false\"\n      ></v-textarea>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          variant=\"text\"\n          @click=\"isShowImportProgressDialog = false\"\n          :disabled=\"isImportCompleted === false\"\n        >\n          {{ $t(\"modal.done\") }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport db from \"@/store/db\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport Dexie from \"dexie\";\nimport { exportDB } from \"dexie-export-import\";\nimport localForage from \"localforage\";\nimport { computed, reactive, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  prefixPlaceholder,\n  preview,\n  suffixPlaceholder,\n  templatePlaceholder,\n} from \"../helpers/template-helper\";\nimport { nextTick } from \"vue\";\nimport { Type } from \"./BotSettings/settings.const\";\n\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst formRef = ref(null);\nconst isOpenAddEditAction = ref(false);\nconst actionName = ref(\"\");\nconst prefix = ref(\"\");\nconst template = ref(\"\");\nconst suffix = ref(\"\");\nconst previewRef = ref(\"\");\nconst importProgressText = ref(\"\");\nconst isImportCompleted = ref(false);\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: -1,\n  color: \"\",\n});\nconst templateParametersInfo = `\n#### ${i18n.global.t(\"chat.templateParameters\")}:\n| ${i18n.global.t(\"chat.parameter\")}|${i18n.global.t(\"chat.description\")}|\n|-|-|\n|{botName}|${i18n.global.t(\"chat.botNameDesc\")}|\n|{botResponse}|${i18n.global.t(\"chat.botResponseDesc\")}|`;\nconst isShowTemplateParametersDialog = ref(false);\nconst isShowImportProgressDialog = ref(false);\nconst store = useStore();\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\nconst previewSampleData = [\n  {\n    botName: \"Copilot (Creative)\",\n    botResponse: \"Hello, this is Bing. How are you today? 😊\",\n  },\n  {\n    botName: \"ChatGPT (GPT-3.5)\",\n    botResponse: \"Hello! How can I assist you today?\",\n  },\n  {\n    botName: \"Bard\",\n    botResponse: \"Hi there! How can I help you today?\",\n  },\n  {\n    botName: \"YouChat\",\n    botResponse: \"Hi there! How can I assist you today?\",\n  },\n];\nconst brandId = \"chat\";\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"updateDebounceInterval\",\n    title: \"chat.updateDebounceInterval\",\n    description: \"chat.updateDebounceIntervalDesc\",\n    min: 0,\n    max: 2000,\n    step: 100,\n  },\n];\nlet editIndex = undefined;\nlet isEdit = false;\nconst required = (value) =>\n  value?.trim() ? true : i18n.global.t(\"prompt.required\");\n\nconst SETTING_FILE_NAME = \"localforage.json\";\nconst CHAT_FILE_NAME = \"ChatALL.json\";\nconst EXPORT_IMPORT_FILE_EXTENSION = \".ChatALL\";\n\nfunction getExportedFileName() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n  return fileName;\n}\n\nasync function exportData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.exportDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  try {\n    const settingBlob = getSettingWithoutBotSetting();\n    const chatHistoryBlob = await exportDB(db);\n\n    const { default: JSZip } = await import(\"jszip\");\n    const zip = new JSZip();\n    zip.file(SETTING_FILE_NAME, settingBlob);\n    zip.file(CHAT_FILE_NAME, chatHistoryBlob);\n    zip.generateAsync({ type: \"blob\" }).then(function (zipBlob) {\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${getExportedFileName()}${EXPORT_IMPORT_FILE_EXTENSION}`;\n      document.body.appendChild(a);\n\n      // Click the anchor element to download the file.\n      a.click();\n\n      // Remove the anchor element from the document body.\n      document.body.removeChild(a);\n\n      // Revoke the URL for the blob.\n      URL.revokeObjectURL(url);\n    });\n    snackbar.text = i18n.global.t(\"chat.exportSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.exportFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  }\n  snackbar.show = true;\n}\n\nasync function importData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.importDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  importProgressText.value = \"\";\n  isImportCompleted.value = false;\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.accept = EXPORT_IMPORT_FILE_EXTENSION;\n  input.addEventListener(\"change\", importDataOnChangeFile);\n  document.body.appendChild(input);\n\n  // Click the input element to select the file.\n  input.click();\n}\n\nasync function importDataOnChangeFile(event) {\n  try {\n    isShowImportProgressDialog.value = true;\n    logImportProgress(`Import started`);\n\n    const file = event.target.files[0];\n    const { default: JSZip } = await import(\"jszip\");\n    logImportProgress(`Reading file \"${file.name}\" (${file.size} bytes)`);\n    const zip = await JSZip.loadAsync(file);\n    logImportProgress(\n      `Done reading file \"${file.name}\", containing ${\n        Object.keys(zip?.files).length\n      } files`,\n    );\n\n    let chatString;\n    let settingString;\n    await new Promise((resolve, reject) => {\n      let fileCount = 0;\n      zip.forEach(async (relativePath, zipEntry) => {\n        try {\n          logImportProgress(`Reading file \"${relativePath}\"`);\n          const zipFileString = await zipEntry.async(\"string\");\n          logImportProgress(\n            `Done reading \"${relativePath}\" content, length: ${zipFileString?.length}`,\n          );\n          if (relativePath === CHAT_FILE_NAME) {\n            chatString = zipFileString;\n          } else if (relativePath === SETTING_FILE_NAME) {\n            settingString = zipFileString;\n          }\n          fileCount++;\n          if (fileCount === 2) {\n            resolve();\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n\n    // import ChatALL db\n    let unchangedCount = 0;\n    let updatedCount = 0;\n    let addedCount = 0;\n    let errorCount = 0;\n    const addedRecords = [];\n    const updatedRecords = [];\n    const errorRecords = [];\n\n    logImportProgress(`\"${CHAT_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${CHAT_FILE_NAME}\" content to JSON object`);\n    const chatDbObject = JSON.parse(chatString);\n    try {\n      logImportProgress(`Retrieving chats table records`);\n      const chatRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"chats\",\n      )?.rows;\n      logImportProgress(`Filtering $types from chats record`);\n      const rows = chatRow\n        .filter((record) => record.index && typeof record.index === \"string\")\n        .map((record) => {\n          delete record.$types;\n          return record;\n        });\n      logImportProgress(\n        `Importing. There are ${chatRow?.length} records in chats table. This process may take some time.`,\n      );\n\n      for (const row of rows) {\n        try {\n          const chat = await Chats.table.get(row.index);\n          if (chat) {\n            if (compare(chat, row)) {\n              unchangedCount++;\n            } else {\n              await Chats.table.put(row);\n              updatedRecords.push({ row, table: \"chats\" });\n              updatedCount++;\n            }\n          } else {\n            await Chats.table.add(row);\n            addedRecords.push({ row, table: \"chats\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"chats\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `chats table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving messages table records`);\n      const messagesRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"messages\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${messagesRow?.length} records in messages table. This process may take some time.`,\n      );\n      for (const row of messagesRow) {\n        try {\n          const message = await Messages.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Messages.table.put(row);\n              updatedRecords.push({ row, table: \"messages\" });\n              updatedCount++;\n            }\n          } else {\n            await Messages.table.add(row);\n            addedRecords.push({ row, table: \"messages\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"messages\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `messages table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving threads table records`);\n      const threadsRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"threads\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${threadsRow?.length} records in threads table. This process may take some time.`,\n      );\n      for (const row of threadsRow) {\n        try {\n          const message = await Threads.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Threads.table.put(row);\n              updatedRecords.push({ row, table: \"threads\" });\n              updatedCount++;\n            }\n          } else {\n            await Threads.table.add(row);\n            addedRecords.push({ row, table: \"threads\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"threads\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `threads table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    // import localforage keyvaluepairs\n    logImportProgress(`\"${SETTING_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${SETTING_FILE_NAME}\" content to JSON object`);\n    const settingDbObject = JSON.parse(settingString);\n    logImportProgress(`Retrieving keyvaluepairs table records`);\n    const rows = settingDbObject.data.data.find(\n      (d) => d.tableName === \"keyvaluepairs\",\n    )?.rows;\n    logImportProgress(\n      `Importing. There are ${rows?.length} records in keyvaluepairs table. This process may take some time.`,\n    );\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      if (rows.length && rows[0].$ && rows[0].$.length > 1) {\n        const chatallKey = rows[0].$[1];\n        for (const key in chatallKey) {\n          try {\n            if (Array.isArray(chatallKey[key])) {\n              const storeIndexes = store.state[key].map((item) => item.index);\n              for (const importItem of chatallKey[key]) {\n                let index = storeIndexes.indexOf(importItem.index);\n                if (index === -1) {\n                  store.commit(\"pushSettingArray\", {\n                    key,\n                    value: importItem,\n                  });\n                  addedRecords.push({\n                    row: `key: ${key}, added: ${JSON.stringify(importItem)}`,\n                    table: \"keyvaluepairs\",\n                  });\n                  addedCount++;\n                } else {\n                  if (compare(importItem, store.state[key][index])) {\n                    unchangedCount++;\n                  } else {\n                    store.commit(\"updateSettingArray\", {\n                      key,\n                      index,\n                      value: importItem,\n                    });\n                    updatedRecords.push({\n                      row: `key: ${key}, updated: ${JSON.stringify(\n                        importItem,\n                      )}`,\n                      table: \"keyvaluepairs\",\n                    });\n                    updatedCount++;\n                  }\n                }\n              }\n            } else {\n              if (compare(chatallKey[key], store.state[key])) {\n                unchangedCount++;\n              } else {\n                store.commit(\"updateSetting\", {\n                  key,\n                  value: chatallKey[key],\n                });\n                updatedRecords.push({\n                  row: `key: ${key}, updated: ${JSON.stringify(\n                    chatallKey[key],\n                  )}`,\n                  table: \"keyvaluepairs\",\n                });\n                updatedCount++;\n              }\n            }\n          } catch (error) {\n            errorCount++;\n            console.error(error);\n            errorRecords.push({\n              row: `key: ${key}, error: ${JSON.stringify(chatallKey[key])}`,\n              table: \"keyvaluepairs\",\n            });\n          }\n        }\n      } else {\n        logImportProgress(`Invalid rows`);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `keyvaluepairs table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    logImportProgress(`Added:\\n${JSON.stringify(addedRecords, null, 2)}`);\n    logImportProgress(`Updated:\\n${JSON.stringify(updatedRecords, null, 2)}`);\n    logImportProgress(`Error:\\n${JSON.stringify(errorRecords, null, 2)}`);\n\n    logImportProgress(\n      `Import completed, added ${addedRecords.length}, updated ${updatedRecords.length}, error ${errorRecords.length}`,\n    );\n\n    snackbar.text = i18n.global.t(\"chat.importSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.importFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  } finally {\n    // Remove the input element from the document body.\n    document.body.removeChild(event.target);\n    isImportCompleted.value = true;\n    snackbar.show = true;\n  }\n}\n\nfunction compare(obj1, obj2) {\n  //Loop through properties in object 1\n  for (var p in obj1) {\n    //Check property exists on both objects\n    if (\n      Object.hasOwnProperty.call(obj1, p) !==\n      Object.hasOwnProperty.call(obj2, p)\n    )\n      return false;\n\n    switch (typeof obj1[p]) {\n      //Deep compare objects\n      case \"object\":\n        if (!compare(obj1[p], obj2[p])) return false;\n        break;\n      //Compare function code\n      case \"function\":\n        if (\n          typeof obj2[p] == \"undefined\" ||\n          (p != \"compare\" && obj1[p].toString() != obj2[p].toString())\n        )\n          return false;\n        break;\n      //Compare values\n      default:\n        if (obj1[p] != obj2[p]) return false;\n    }\n  }\n\n  //Check object 2 for any extra properties\n  for (const p in obj2) {\n    if (typeof obj1[p] == \"undefined\") return false;\n  }\n  return true;\n}\n\nfunction logImportProgress(text) {\n  importProgressText.value += `${new Date().toISOString()} - ${text}\\n`;\n  const element = document.getElementById(\"import-log-textarea\");\n  if (element) {\n    nextTick(() => (element.scrollTop = element.scrollHeight));\n  }\n}\n\nasync function getSettingWithoutBotSetting() {\n  await localForage._dbInfo.db.close();\n  const settingDb = await new Dexie(\"localforage\").open();\n  const userSettingBlob = await exportDB(settingDb);\n  const userSettingText = await userSettingBlob.text();\n  const userSettingJson = JSON.parse(userSettingText);\n  const allBotBrandId = bots.all.map((bot) => bot.constructor._brandId);\n  for (const brandId of allBotBrandId) {\n    // delete bot related setting\n    delete userSettingJson.data.data[0].rows[0].$[1][brandId];\n  }\n  const str = JSON.stringify(userSettingJson);\n  const bytes = new TextEncoder().encode(str);\n  return new Blob([bytes], {\n    type: \"application/json;charset=utf-8\",\n  });\n}\n\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n\nfunction add() {\n  isEdit = false;\n  actionName.value = \"\";\n  prefix.value = prefixPlaceholder;\n  template.value = templatePlaceholder;\n  suffix.value = suffixPlaceholder;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nfunction edit(item) {\n  isEdit = true;\n  actionName.value = item.name;\n  prefix.value = item.prefix;\n  template.value = item.template;\n  suffix.value = item.suffix;\n  editIndex = item.index;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nasync function onInputTemplate() {\n  try {\n    previewRef.value = await preview(\n      prefix.value,\n      template.value,\n      suffix.value,\n      previewSampleData,\n    );\n  } catch (error) {\n    previewRef.value = `Error:\\n${error.message}`;\n  }\n}\n\nasync function addEditAction() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit) {\n      store.commit(\"editAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n        index: editIndex,\n      });\n    } else {\n      store.commit(\"addAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n      });\n    }\n    isOpenAddEditAction.value = false;\n  }\n}\n\nasync function deleteAction(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideAction\"),\n  );\n  if (result) {\n    store.commit(\"deleteAction\", { ...item });\n  }\n}\n</script>\n<style scoped>\n.no-text-transform {\n  text-transform: none !important;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() .v-textarea .v-field {\n  padding: 0;\n}\n</style>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatSetting.vue?vue&type=style&index=0&id=0c320d85&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c320d85\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport GeminiBotSettings from \"@/components/BotSettings/GeminiBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport Falcon180bBotSettings from \"@/components/BotSettings/Falcon180bBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PhindBotSettings from \"@/components/BotSettings/PhindBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport OpenAssistantBotSettings from \"./BotSettings/OpenAssistantBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\nimport ChatGLMBotSettings from \"./BotSettings/ChatGLMBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"chatGlm\", component: ChatGLMBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"falcon\", component: Falcon180bBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"gemini\", component: GeminiBotSettings },\n  { brand: \"openAssistant\", component: OpenAssistantBotSettings },\n  { brand: \"phind\", component: PhindBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n  { name: \"繁體中文\", code: \"zhtw\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=d85855e8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d85855e8\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert {\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=5e9ca404&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in shownBots\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n            <template v-slot:append>\n              <v-btn-toggle\n                v-model=\"selectedTags\"\n                divided\n                color=\"primary\"\n                group\n                variant=\"outlined\"\n                rounded=\"xl\"\n                @update:model-value=\"filterBots($event)\"\n              >\n                <v-btn v-for=\"(tag, index) in tags\" :key=\"index\" :value=\"tag\">\n                  {{ $t(`footer.${tag}`) }}\n                </v-btn>\n              </v-btn-toggle>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport { botTags } from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nlet menu = ref(false);\n\nconst props = defineProps([\"favBots\"]);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst tags = Object.keys(botTags);\nconst selectedTags = ref([]);\n\nconst notDisabledBots = bots.all.filter((bot) => !bot.isDisabled());\nconst shownBots = ref(notDisabledBots);\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\nfunction filterBots(selectedTags) {\n  let filteredIn = notDisabledBots;\n\n  // If the toggle is not multi-select, the selectedTags will be a string\n  if (typeof selectedTags === \"string\") {\n    selectedTags = [selectedTags];\n  }\n\n  if (selectedTags?.length) {\n    const tagBots = selectedTags.map((tag) => botTags[tag]);\n    filteredIn = filteredIn.filter((bot) => {\n      return tagBots.every((tagBot) => tagBot.includes(bot));\n    });\n  }\n  shownBots.value = filteredIn;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3;\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=4ea8786e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1),\ntd:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=e6ba2cb4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e6ba2cb4\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div class=\"bot-logos\" ref=\"favBotLogosRef\" :key=\"rerenderFavBotLogos\">\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\nimport Messages from \"@/store/messages\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\nconst emit = defineEmits([\"updateActiveBots\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  if (!props.chat || !props.chat.favBots) {\n    return [];\n  }\n  const _favBots = [];\n  props.chat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n  emit(\"updateActiveBots\", activeBots);\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nasync function sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const count = await Messages.getMessagesCount(store.state.currentChatIndex);\n  const isFirstPrompt = count === 0;\n  await store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n  if (isFirstPrompt) {\n    updateChatTitleWithFirstPrompt();\n  }\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nasync function updateChatTitleWithFirstPrompt() {\n  // if this is first prompt, update chat title to first 30 characters of user prompt\n  const messages = await Messages.getMessages(store.state.currentChatIndex);\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload: {\n      title: messages[0].content.substring(0, 30),\n    },\n  });\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended {\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner {\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=283581ed&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-283581ed\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: 0.2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0 !important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: 0.5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=6015a817&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6015a817\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n  padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=4c4cde2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c4cde2d\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font:\n    11px ui-monospace,\n    SFMono-Regular,\n    SF Mono,\n    Menlo,\n    Consolas,\n    Liberation Mono,\n    monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110, 118, 129, 0.4);\n  border-bottom-color: rgba(110, 118, 129, 0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110, 118, 129, 0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=28fc2763&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28fc2763\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    height=\"75%\"\n    width=\"80%\"\n    :model-value=\"props.open\"\n    @update:model-value=\"closeDialog\"\n  >\n    <v-card height=\"100%\">\n      <v-card-title>\n        <v-row>\n          <v-col class=\"d-flex align-center\">\n            {{ props.action.name }}\n            <v-btn\n              flat\n              @click=\"isEdit = !isEdit\"\n              :icon=\"isEdit ? 'mdi-eye' : 'mdi-pencil-outline'\"\n            ></v-btn>\n          </v-col>\n          <v-col class=\"d-flex align-center justify-end\">\n            <v-label>{{ previewTextarea.length }}</v-label>\n          </v-col>\n        </v-row>\n      </v-card-title>\n      <v-card-text class=\"pt-0 overflow-auto\">\n        <v-textarea\n          hide-details\n          rows=\"20\"\n          v-show=\"isEdit\"\n          v-model=\"previewTextarea\"\n          @input=\"previewText = previewTextarea\"\n        >\n        </v-textarea>\n        <chat-prompt\n          v-show=\"!isEdit\"\n          :message=\"{ content: previewText }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-card-text>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          class=\"send-prompt-btn\"\n          elevation=\"2\"\n          :disabled=\"\n            previewTextarea.trim() === '' ||\n            selectedBots.length === 0 ||\n            !chatRef\n          \"\n          @click=\"send\"\n        >\n          {{ $t(\"footer.sendPrompt\") }}\n        </v-btn>\n        <div class=\"bot-logos\">\n          <BotLogo\n            v-for=\"(bot, index) in favBots\"\n            :id=\"`fav-bot-${index + 1}`\"\n            :key=\"index\"\n            :bot=\"bot.instance\"\n            :active=\"bot.selected\"\n            :data-id=\"bot.classname\"\n            size=\"36\"\n            @click=\"bot.selected = !bot.selected\"\n          />\n        </div>\n        <v-form class=\"d-flex\">\n          <v-radio-group v-model=\"chatRef\" density=\"compact\" hide-details>\n            <v-radio :label=\"$t('chat.inNewChat')\" value=\"new\"></v-radio>\n            <v-radio\n              :label=\"$t('chat.inCurrentChat')\"\n              value=\"current\"\n            ></v-radio>\n          </v-radio-group>\n        </v-form>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, toRaw, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { preview } from \"../helpers/template-helper\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport BotLogo from \"@/components/Footer/BotLogo.vue\";\nimport _bots from \"@/bots\";\nimport Chats from \"@/store/chats\";\n\nconst store = useStore();\nconst isEdit = ref(false);\nconst previewText = ref(\"\");\nconst previewTextarea = ref(\"\");\nconst chatRef = ref(undefined);\nconst emit = defineEmits([\"update:open\"]);\nconst props = defineProps([\"open\", \"action\", \"responses\", \"activeBots\"]);\nwatch(() => props.open, onChangeOpenProp);\n\nconst selectedResponses = computed(() =>\n  store.state.selectedResponses.map((res) => {\n    return { botName: res.className, botResponse: res.content };\n  }),\n);\nconst favBots = ref([]);\nconst selectedBots = computed(() =>\n  favBots.value.filter((bot) => bot.selected),\n);\n\nfunction onChangeOpenProp() {\n  if (props.open) {\n    updatePreview();\n    updateFavBots();\n  } else {\n    isEdit.value = false;\n  }\n}\n\nasync function updatePreview() {\n  previewTextarea.value = await preview(\n    props.action.prefix,\n    props.action.template,\n    props.action.suffix,\n    selectedResponses.value,\n  );\n  previewText.value = previewTextarea.value;\n}\n\nfunction updateFavBots() {\n  favBots.value = [];\n  for (const key in props.activeBots) {\n    if (props.activeBots[key]) {\n      favBots.value.push({\n        classname: key,\n        selected: false,\n        instance: _bots.getBotByClassName(key),\n      });\n    }\n  }\n}\n\nfunction closeDialog(value) {\n  emit(\"update:open\", value);\n}\n\nasync function send() {\n  let newChatIndex;\n  if (chatRef.value === \"new\") {\n    newChatIndex = await Chats.add();\n    store.commit(\"selectChat\", newChatIndex);\n  }\n  await store\n    .dispatch(\"sendPrompt\", {\n      prompt: previewTextarea.value,\n      bots: selectedBots.value.map((bot) => toRaw(bot).instance),\n    })\n    .then(() => {\n      if (chatRef.value === \"new\") {\n        store.commit(\"editChatTitle\", {\n          index: newChatIndex,\n          payload: {\n            title: previewTextarea.value.substring(0, 30),\n          },\n        });\n      }\n    });\n  closeDialog(false);\n  deselectAllResponses();\n}\n\nfunction deselectAllResponses() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n</script>\n\n<style scoped>\n:deep() .v-textarea textarea {\n    height: 100%;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n.bot-logos {\n  gap: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n</style>\n","import script from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatAction.vue?vue&type=style&index=0&id=66e42126&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66e42126\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\">\n        <v-app-bar class=\"header-content pa-0\">\n          <!-- Start Header  -->\n          <div class=\"header-content\" v-show=\"isSelectedResponsesEmpty\">\n            <v-app-bar-nav-icon\n              :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n              variant=\"text\"\n              @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n              v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n            >\n            </v-app-bar-nav-icon>\n            <img\n              :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n              class=\"logo\"\n              src=\"@/assets/logo-banner.png\"\n              alt=\"ChatALL\"\n            />\n          </div>\n          <div\n            class=\"column-icons header-content\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <img\n              v-for=\"columnCount in 3\"\n              :id=\"`column-${columnCount}`\"\n              :key=\"columnCount\"\n              :src=\"getColumnImage(columnCount)\"\n              @click=\"changeColumns(columnCount)\"\n              @shortkey=\"changeColumns(columnCount)\"\n              v-shortkey=\"[`f${columnCount}`]\"\n              :class=\"{\n                selected: columns === columnCount,\n                'dark-png': store.state.theme === Theme.DARK,\n              }\"\n            />\n          </div>\n          <div\n            class=\"header-content\"\n            style=\"padding-right: 16px\"\n            v-show=\"isSelectedResponsesEmpty\"\n          >\n            <v-icon\n              :id=\"SHORTCUT_FIND.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-magnify\"\n              size=\"x-large\"\n              @click=\"openFind()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n              @shortkey=\"clearMessages\"\n              :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-broom\"\n              size=\"x-large\"\n              @click=\"clearMessages()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SETTINGS.key\"\n              @shortkey=\"openSettingsModal\"\n              :id=\"SHORTCUT_SETTINGS.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-cog\"\n              size=\"x-large\"\n              @click=\"openSettingsModal()\"\n            ></v-icon>\n            <v-icon\n              v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n              @shortkey=\"toggleShortcutGuide\"\n              :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n              class=\"cursor-pointer\"\n              color=\"primary\"\n              icon=\"mdi-help\"\n              size=\"x-large\"\n              @click=\"toggleShortcutGuide()\"\n            ></v-icon>\n          </div>\n          <!-- End Header  -->\n          <!-- Start Selected Responses  -->\n          <div\n            class=\"header-content pr-3\"\n            style=\"text-wrap: nowrap\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn icon color=\"primary\" @click=\"deselectAll\">\n              <v-icon>mdi-arrow-left</v-icon>\n            </v-btn>\n            {{\n              $t(\"header.selectedResponsesCount\", {\n                selectedCount: store.state.selectedResponses.length,\n              })\n            }}\n          </div>\n          <div\n            class=\"header-content overflow-auto\"\n            v-show=\"!isSelectedResponsesEmpty\"\n          >\n            <v-btn\n              v-for=\"action in userActions\"\n              color=\"primary\"\n              class=\"no-text-transform\"\n              :text=\"action.name\"\n              :key=\"action.index\"\n              @click=\"callAction(action)\"\n            ></v-btn>\n          </div>\n          <!-- End Selected Responses  -->\n        </v-app-bar>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages :chat=\"currentChat\" :columns=\"columns\"></ChatMessages>\n        <FooterBar\n          ref=\"footerBarRef\"\n          :chat=\"currentChat\"\n          @update-active-bots=\"(bots) => (activeBots = bots)\"\n        ></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n      <ChatAction\n        v-model:open=\"isChatActionOpen\"\n        :action=\"action\"\n        :responses=\"store.state.selectedResponses\"\n        :activeBots=\"activeBots\"\n      ></ChatAction>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\nimport Chats from \"@/store/chats\";\nimport { initializeQueues, startQueuesProcessing } from \"@/store/queue\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { onScroll } from \"./helpers/scroll-helper\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\nimport ChatAction from \"@/components/ChatAction.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nconst currentChat = useObservable(\n  liveQuery(() => {\n    const chat = Chats.table.orderBy(\"selectedTime\").last();\n    console.log(\"chat changed\");\n    return chat;\n  }),\n  { initialValue: {} },\n);\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst chatDrawerRef = ref();\nconst isSelectedResponsesEmpty = ref(true);\nconst isChatActionOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\nlet action;\nlet activeBots;\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n\n  initializeQueues(store);\n  startQueuesProcessing();\n\n  window.addEventListener(\"scroll\", onScroll);\n});\n\nwatch(\n  () => store.state.selectedResponses.length,\n  () => {\n    isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  },\n);\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n\nfunction deselectAll() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n\nfunction callAction(value) {\n  action = value;\n  isChatActionOpen.value = true;\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Arial\", sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nheader {\n  width: 100%;\n  background-color: rgb(var(--v-theme-header));\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 16px;\n  z-index: 999;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n  opacity: 0.5;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n  background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between;\n}\n\n.vuepress-markdown-body {\n  color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n  padding: 0 !important;\n  background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n  display: inline !important;\n}\n.vuepress-markdown-body .arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n  display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n)) !important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font)) !important;\n  background-color: rgb(var(--v-theme-code-background)) !important;\n}\n.vuepress-markdown-body pre[class*=\"v-md-prism-\"] code,\n.vuepress-markdown-body pre code {\n  color: #fff !important;\n  background-color: initial !important;\n}\n.no-text-transform {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=09c7a49c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setAzureOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"azureApiKey\",\n    title: \"azureOpenaiApi.azureOpenAIApiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"b40...\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureApiInstanceName\",\n    title: \"azureOpenaiApi.azureApiInstanceName\",\n    description: \"azureOpenaiApi.azureApiInstanceNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiDeploymentName\",\n    title: \"azureOpenaiApi.azureOpenAIApiDeploymentName\",\n    description: \"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiVersion\",\n    title: \"azureOpenaiApi.azureOpenAIApiVersion\",\n    description: \"azureOpenaiApi.azureOpenAIApiVersionPrompt\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"azureOpenaiApi.temperature\",\n    description: \"azureOpenaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"azureOpenaiApi.temperature0\",\n      2: \"azureOpenaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=596a712c\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6c0f01d1\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHARACTER-AI-TOKENS message from background.js\n    ipcRenderer.on(\"CHARACTER-AI-TOKENS\", (event, token) => {\n      try {\n        const tokenInfo = JSON.parse(token);\n        this.setCharacterAI({ token: tokenInfo.value, ttl: tokenInfo.ttl });\n      } catch (error) {\n        console.error(\"CHARACTER-AI-TOKENS\", error);\n      }\n    });\n  },\n  methods: {\n    ...mapMutations([\"setCharacterAI\"]),\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=38718633\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ChatGLMBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHATGLM-TOKEN message from background.js\n    ipcRenderer.on(\"CHATGLM-TOKENS\", (event, token) => {\n      this.setChatGLM(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setChatGLM\"]),\n  },\n};\n</script>\n","import { render } from \"./ChatGLMBotSettings.vue?vue&type=template&id=5f213291\"\nimport script from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setClaudeAi\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nimport { Type } from \"./settings.const\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst settings = [\n  {\n    type: Type.Combobox,\n    name: \"model\",\n    title: \"Model\",\n    items: [\"claude-2.0\", \"claude-2.1\", \"claude-<edit me>\"],\n  },\n];\n\nexport default {\n  components: {\n    LoginSetting,\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=1d058dca\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <template v-for=\"setting in settings\" :key=\"setting.name\">\n      <v-list-item-title v-if=\"setting.title\">\n        <!-- falcon.temperature -->\n        {{ $t(setting.title) }}</v-list-item-title\n      >\n      <v-list-item-subtitle v-if=\"setting.description\">\n        <!-- falcon.temperaturePrompt -->\n        {{ $t(setting.description) }}</v-list-item-subtitle\n      >\n\n      <v-text-field\n        v-if=\"setting.type === Type.Text\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-text-field>\n      <v-select\n        v-if=\"setting.type === Type.Select\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-select>\n      <v-slider\n        v-else-if=\"setting.type === Type.Slider\"\n        v-model=\"settingState[setting.name] /* falcon.temperature */\"\n        color=\"primary\"\n        :min=\"setting.min\"\n        :max=\"setting.max\"\n        :step=\"setting.step\"\n        :ticks=\"translate(setting.ticks)\"\n        :show-ticks=\"\n          /* 'show-ticks' cause lag issue when the possible value to slide is large */\n          setting.ticks ? 'always' : false\n        \"\n        thumb-label\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"settingState[setting.name] /* falcon.temperature */\"\n            :ref=\"\n              (el) => {\n                refs[setting.name] = el;\n              }\n            \"\n            type=\"number\"\n            style=\"width: 100px\"\n            density=\"compact\"\n            hide-details\n            variant=\"outlined\"\n            @update:model-value=\"\n              /* setFalcon({ temperature: validateInput(temperature, $event) }) */\n              store.commit(mutationType, {\n                [setting.name]: validateSliderInput(setting, $event),\n              })\n            \"\n          ></v-text-field>\n        </template>\n      </v-slider>\n      <v-combobox\n        v-if=\"setting.type === Type.Combobox\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-combobox>\n    </template>\n  </v-list-item>\n</template>\n\n<script setup>\nimport i18n from \"@/i18n\";\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Type } from \"./settings.const\";\nconst store = useStore();\nconst settingState = computed(() => store.state[props.brandId]);\nconst refs = ref([]);\nconst props = defineProps({\n  brandId: {\n    type: String,\n    required: true,\n  },\n  settings: {\n    type: Object,\n    required: true,\n  },\n  mutationType: {\n    type: String,\n    required: true,\n  },\n  watcher: {\n    type: Function,\n    default: undefined,\n  },\n});\n\nif (props.watcher) {\n  watch(\n    () => settingState.value,\n    (newValue) => {\n      console.log(`${props.brandId}: ${JSON.stringify(newValue)}`);\n      props.watcher(newValue);\n    },\n  );\n}\n\nonMounted(() => {\n  for (const setting of props.settings) {\n    if (setting.type !== Type.Slider) {\n      continue;\n    }\n    // Set the 'min', 'max' and 'step' attributes for the input type 'number' spin button\n    const inputElement = getInputElement(refs.value[setting.name]);\n    inputElement.min = setting.min;\n    inputElement.max = setting.max;\n    inputElement.step = setting.step;\n  }\n});\n\nfunction translate(settings) {\n  if (settings) {\n    let rets = {};\n    Object.keys(settings).forEach((key) => {\n      rets[key] = i18n.global.t(settings[key]);\n    });\n    return rets;\n  }\n  return settings;\n}\n\nfunction validateSliderInput(setting, value) {\n  // validate input via keyboard within setting min and max\n  value = value || 0; // set zero if empty string\n  const input = getInputElement(refs.value[setting.name]);\n  const valuefloat = parseFloat(value);\n  const inputMaxFloat = parseFloat(input.max);\n  const inputMinFloat = parseFloat(input.min);\n  if (valuefloat > inputMaxFloat) {\n    return inputMaxFloat;\n  } else if (valuefloat < inputMinFloat) {\n    return inputMinFloat;\n  } else {\n    return valuefloat;\n  }\n}\n\nfunction getInputElement(ref) {\n  return ref.$el.querySelector(\"input\");\n}\n</script>\n","import script from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setFalcon\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/Falcon180bBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"falcon.temperature\",\n    description: \"falcon.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"maxNewTokens\",\n    title: \"falcon.maxNewTokens\",\n    description: \"falcon.maxNewTokensPrompt\",\n    min: 0,\n    max: 8192,\n    step: 64,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"falcon.topP\",\n    description: \"falcon.topPPrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"repetitionPenalty\",\n    title: \"falcon.repetitionPenalty\",\n    description: \"falcon.repetitionPenaltyPrompt\",\n    min: 1,\n    max: 2,\n    step: 0.05,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./Falcon180bBotSettings.vue?vue&type=template&id=24bc8a0a\"\nimport script from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGemini\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/GeminiBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"openaiApi.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      1: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"topK\",\n    title: \"gemini.topK\",\n    description: \"gemini.topKPrompt\",\n    min: 1,\n    max: 100,\n    step: 1,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"gemini.topP\",\n    description: \"gemini.topPPrompt\",\n    min: 0.1,\n    max: 1,\n    step: 0.01,\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./GeminiBotSettings.vue?vue&type=template&id=754273ac\"\nimport script from \"./GeminiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GeminiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGradio\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"url\",\n    title: \"gradio.url\",\n    description: \"gradio.urlPrompt\",\n    placeholder: i18n.global.t(\"settings.forExample\", {\n      example: \"https://*.hf.space, http://127.0.0.1:7861\",\n    }),\n  },\n  {\n    type: Type.Text,\n    name: \"fnIndex\",\n    title: \"gradio.fnIndex\",\n    description: \"gradio.fnIndexPrompt\",\n    placeholder: \"0\",\n  },\n];\n\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=2124010e\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      ipcRenderer.invoke(\"create-new-window\", loginUrl, userAgent);\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=3a4b014f\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"openaiApi.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"sk-...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      2: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n  {\n    type: Type.Text,\n    name: \"alterUrl\",\n    title: \"openaiApi.alterUrl\",\n    description: \"openaiApi.alterUrlPrompt\",\n    placeholder: \"https://your.proxy.com/v1\",\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=25d4d7e5\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/OpenAssistantBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./OpenAssistantBotSettings.vue?vue&type=template&id=8f4ba222\"\nimport script from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAssistantBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setPhind\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/PhindBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Select,\n    name: \"model\",\n    title: \"Model\",\n    items: [\"Phind Model\", \"GPT-3.5-Turbo\", \"GPT-4\"],\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./PhindBotSettings.vue?vue&type=template&id=f7d51668\"\nimport script from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the POE-FORMKEY message from background.js\n    ipcRenderer.on(\"POE-FORMKEY\", (event, formkey) => {\n      this.setPoe({ formkey });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setPoe\"]),\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=276b8eed\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setWenxinQianfan\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"API Key & Secret Key\",\n    description: \"settings.secretPrompt\",\n    label: \"API Key\",\n    placeholder: \"2125NA8mQy7gC52Pq9BK3tvk\",\n    hideDetails: true,\n  },\n  {\n    type: Type.Text,\n    name: \"secretKey\",\n    label: \"Secret Key\",\n    placeholder: \"IWf2pyYm26fz8GgNAHdkPkznHgazlffQ\",\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=6a339c52\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 91604,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings\": 55538,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 28778,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings\": 69594,\n\t\"./ChatGLMBotSettings.vue\": 69594,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 82595,\n\t\"./ClaudeAIBotSettings.vue\": 82595,\n\t\"./CommonBotSettings\": 23610,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings\": 24448,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiBotSettings\": 84014,\n\t\"./GeminiBotSettings.vue\": 84014,\n\t\"./GradioAppBotSettings\": 36623,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 35562,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings\": 30514,\n\t\"./OpenAIAPIBotSettings.vue\": 30514,\n\t\"./OpenAssistantBotSettings\": 38570,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings\": 24317,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 41084,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 64716,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633,\n\t\"./settings.const\": 62128,\n\t\"./settings.const.js\": 62128\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings.vue\": 55538,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 28778,\n\t\"./ChatGLMBotSettings.vue\": 69594,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 82595,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiBotSettings.vue\": 84014,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 35562,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./OpenAIAPIBotSettings.vue\": 30514,\n\t\"./OpenAssistantBotSettings.vue\": 38570,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"90\":\"d74f41c7\",\"277\":\"07a8db26\",\"657\":\"1fdde78b\",\"733\":\"19e70dff\",\"857\":\"20037914\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"chatall:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["parseResponse","resp","data","JSON","parse","split","Error","ids","text","images","forEach","image","url","alt","link","placeholder","replace","BardBot","Bot","constructor","super","_checkAvailability","context","this","getChatContext","available","requestParams","atValue","_sendPrompt","prompt","onUpdateResponse","callbackParam","Promise","resolve","reject","contextIds","axios","post","URLSearchParams","at","stringify","params","bl","blValue","_reqid","Math","floor","random","rt","then","setChatContext","content","done","catch","error","createChatContext","get","match","_defineProperty","AsyncLock","getInstance","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","getFullname","prefix","isDisabled","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","isAvailable","_isAvailable","disabled","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","_lock","acquire","async","ret","err","timeout","sendPrompt","botName","executeSendPrompt","message","console","LoginError","getLoginHyperlink","wrapCollapsedSection","checkAvailability","disable","createIfNotExists","Chats","getCurrentChat","contexts","store","commit","botClassname","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","status","response","name","CharacterAIBot","getAuthHeaders","headers","Authorization","state","characterAI","token","Date","getTime","ttl","userInfoResponse","user","username","Accept","payload","history_external_id","character_external_id","_characterId","tgt","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","lastResponse","length","Array","isArray","replies","is_final_chunk","chatContinueResponse","characterInfoResponse","external_id","character","participant__user__username","ChatGLMBot","getAuthHeader","chatGlm","userInfoUrl","user_id","result","_id","undefined","uuid","uuidv4","streamContext","seed","max_tokens","conversation_task_id","retry","retry_history_task_id","institution","__userid","context_id","SSE","addEventListener","stream","task_id","ClaudeAIBot","claudeAi","org","currentAcountResponse","success","accept","attachments","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","withCredentials","completion","readyState","CLOSED","createResponse","GeminiBot","LangChainBot","gemini","apiKey","setupModel","getPastRounds","pastRounds","_setupModel","chatModel","ChatGoogleGenerativeAI","modelName","temperature","streaming","topK","topP","messages","bufferMemory","BufferMemory","shift","item","storedMessage","type","toLowerCase","humanPrefix","chatHistory","addUserMessage","aiPrefix","addAIChatMessage","addMessage","res","_chatModel","getMessages","callbacks","handleLLMNewToken","handleLLMEnd","call","map","toDict","MOSSBot","moss","refresh","id","chat_id","wsp","WebSocketAsPromised","packMessage","unpackMessage","onOpen","addListener","sendPacked","request","beginning","body","ending","onUnpackedMessage","links","processed_extra_data","hasOwnProperty","title","removeAllListeners","close","output","stage","status_code","onError","target","open","OpenAssistantBot","i","prompterResponse","parent_id","assistantResponse","model_config_name","plugins","sampling_parameters","top_k","top_p","typical_p","repetition_penalty","max_new_tokens","message_id","queryString","event_type","ipcRenderer","window","require","PhindBot","rewrite","questionToRewrite","questionHistory","answerHistory","search","q","query","browserLanguage","userSearchRules","date","formatDate","getFormattedDate","question","webResults","options","language","detailed","anonUserId","getUUID","answerModel","phind","customLinks","start","isSuccess","startsWith","hostname","URL","replaceAll","_onStreamProgress","e","CONNECTING","dispatchEvent","CustomEvent","_setReadyState","OPEN","responseText","substring","progress","parts","chunk","lastPart","pop","part","_parseEventChunk","_onStreamFailure","year","getFullYear","month","getMonth","padStart","day","getDate","cookies","invoke","domain","uuidCookie","find","cookie","value","PiBot","generateRandomId","randomStr","QianWenBot","getRequestHeaders","qianWen","xsrfToken","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","exception","errorCode","errorMsg","failed","stopReason","firstQuery","sessionType","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","messageId","currentMessageId","session_id","result_message","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","initGeeGuard","appId","https","gee_token","chatId","GtToken","formData","FormData","append","String","slice","partialText","descr","Buffer","from","YouChatBot","queryTraceId","chat","youChatToken","answer","WenxinQianfanBot","secretKey","wenxinQianfan","ChatBaiduWenxin","baiduApiKey","baiduSecretKey","Falcon180bBot","GradioBot","sendPredict","fn_index","session_hash","_predictUrl","event_data","all","makeData","r","_fnIndexes","falcon","maxNewTokens","repetitionPenalty","parseData","parseError","_class","GradioAppBot","gradio","fnIndex","config","path","root","log","_sendFnIndex","protocol","msg","rank","rank_eta","onClose","HuggingChatBot","packRequest","inputs","is_retry","response_id","web_search","conversationId","fetch","method","ok","errorData","json","reader","getReader","processStream","read","dataChunk","TextDecoder","decode","jsonDataArray","Boolean","jsonData","ChatGPT35Bot","ChatGPTBot","ChatGPT4Bot","accessToken","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","ChatGPTBrowsingBot","BingChatPreciseBot","BingChatBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","PoeBot","OpenAIAPI35Bot","OpenAIAPIBot","OpenAIAPI4Bot","OpenAIAPI4128KBot","VicunaBot","LMSYSBot","AlpacaBot","ClaudeBot","DevBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT432kPoeBot","Llama270bPoeBot","GooglePalm2PoeBot","CodeLlama34bPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","Llama213bBot","Llama27bBot","Llama270bBot","ChatGLM6bBot","ChatGLM36bBot","CodeLlamaBot","Vicuna7bBot","Vicuna13bBot","Wizardlm13bBot","Wizardlm70bBot","FalconHC180bBot","CodeLlamaHCBot","WenxinQianfan4Bot","Zephyr7bBot","AzureOpenAIAPIBot","bots","getBotByClassName","className","bot","botTags","free","paid","openSource","api","madeInChina","includes","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","conversation","clientId","conversationSignature","secAccessToken","invocationId","isAnonymous","makePromptRequest","arguments","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","verbosity","scenario","isStartOfSession","requestId","timestamp","toISOString","author","inputMethod","messageType","tone","_tone","participant","spokenTextMode","seperator","fromCharCode","encodeURIComponent","version","events","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","REFRESH_SESSION_URL","setRefreshCycle","chatgpt","refreshCycle","loadArkoseScript","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","_arkoseScriptLoaded","script","document","createElement","src","setAttribute","defer","appendChild","onload","setupEnforcement","onerror","myEnforcement","_myEnforcement","setConfig","onReady","onShown","onShow","onSuppress","onCompleted","_arkosePromise","onReset","onHide","onFailed","getArkoseToken","run","arkose_token","content_type","conversation_id","parent_message_id","history_and_training_disabled","preInfo","regex","trim","test","metadata","is_complete","join","push","citations","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","openaiApi","configuration","basePath","alterUrl","openAIApiKey","buildId","settings","lastMessageId","gqlPost","queryName","variables","formkey","poe","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","channel","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","vizcacha","code_llama_34b_instruct","acouchy","llama_2_70b_chat","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","queryHash","debug","min_seq","m","message_type","messageAdded","withChatBreak","messageEdgeCreate","errors","Type","Text","Slider","Select","Combobox","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","now","timer","onUnmounted","lang","navigator","userLanguage","substr","en","enMessages","zh","zhMessages","zhtw","zhtwMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","restored","migrateChatsMessagesThreads","addFirstChatIfEmpty","defaultTheme","resolveTheme","mode","applyTheme","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","head","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","table","db","count","add","favBots","classname","selected","currentChatIndex","currentChat","newKey","index","createdTime","modifiedTime","update","Dexie","stores","chats","threads","vuexPersist","VuexPersistence","storage","localForage","asyncStorage","reducer","updateCounter","selectedResponses","persistedState","deepToRaw","sourceObj","objectIterator","input","isRef","isReactive","isProxy","toRaw","keys","reduce","acc","createStore","columns","riskConfirmed","isChatDrawerOpen","prompts","actions","template","suffix","updateDebounceInterval","mutations","changeColumns","setUuid","setBotSelected","setFavBotOrder","newOrder","order","addFavoriteBot","removeFavoriteBot","splice","setCurrentLanguage","setChatgpt","setGemini","values","setOpenaiApi","setAzureOpenaiApi","setMoss","setChatGLM","setQianWenToken","setSkyWork","tokens","setWenxinQianfan","setGradio","setCharacterAI","setClaudeAi","setPoe","setPhind","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","messageIndex","latestThreadPromptIndex","Messages","hasThread","setResponseThreadIndex","responseIndex","threadIndex","setMessages","incrementUpdateCounter","clearMessages","where","equals","modify","delete","setTheme","setMode","createChat","chatIndex","selectChat","selectedTime","hideChat","hide","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","clear","Threads","addPrompt","editPrompt","deletePrompt","addAction","editAction","deleteAction","addSelectedResponses","selectedIndex","deleteSelectedResponses","findIndex","deleteAllSelectedResponses","migrateSettingsPrompts","localStorage","getItem","app","promptsData","setItem","updateSetting","updateSettingArray","prop","pushSettingArray","migrateSettingArrayIndexUseUUID","setChat","parseInt","dispatch","promptMessage","msgs","trackEvent","sendPromptInThread","threadPromptMessage","threadResponseMessage","updateMessage","_","messageQueue","queue","updateThreadMessage","threadMessageQueue","thread","getters","getCurrentChatPrompt","modules","plugin","sortBy","getMessagesCount","chatIndexMap","messageIndexMap","threadIndexMap","chatsMigrateData","messagesMigrateData","threadsMigrateData","migrateHasThread","getIndex","getAndGenerateUuidIfNotExist","j","p","threadMessage","bulkAdd","messageIndexes","orderBy","distinct","uniqueKeys","initializeQueues","Queue","startQueuesProcessing","processQueue","_queue","queueName","DEFAULT_UPDATE_DEBOUNCE_INTERVAL","isProcessing","setUpdateDebounceTime","mergedMessages","indexMap","queueCopy","changes","propKey","bulkUpdate","debounceTime","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_LIST","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","autoScroll","onScroll","scrollPosition","pageYOffset","innerHeight","emit","__emit","props","__props","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","__exports__","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","useStore","onUpdated","drawerItems","useObservable","liveQuery","reverse","toArray","focusTextarea","onAddChat","confirm","selectLatestVisibleChat","latestChat","first","style","setProperty","onMounted","currentChatMessages","primaryKeys","bulkGet","sort","a","b","groupedMessage","create","apply","computed","carouselModel","maxPage","deep","replyModel","replyRef","pageLeftButton","pageRightButton","isSelected","isSelectedList","isSelectedResponsesEmpty","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","highlight","isAllDone","some","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isShowReplyButtonInDOM","isShowResendButton","isSomeResponsesHasThread","messagePromptIndex","isShowPagingButton","getButtonClass","getSelectButtonClass","favBot","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","copyToClipboard","clipboard","writeText","toggleHighlight","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","toggleReplyButton","select","stopPropagation","contains","indexOf","updateIsSelectedResponsesEmpty","pageLeft","max","pageRight","min","loading","gridTemplateColumns","createChatMessageLiveQuery","currentMessageSub","scrollToBottomFirst","newChat","oldChat","unsubscribe","subscribe","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","pacFile","reply","onFileChange","file","files","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","prefixPlaceholder","templatePlaceholder","suffixPlaceholder","preview","exampleTemplate","examplePrompt","PromptTemplate","inputVariables","exampleSelector","LengthBasedExampleSelector","fromExamples","maxLength","Number","MAX_VALUE","dynamicPrompt","FewShotPromptTemplate","brandId","SETTING_FILE_NAME","CHAT_FILE_NAME","EXPORT_IMPORT_FILE_EXTENSION","formRef","isOpenAddEditAction","actionName","previewRef","importProgressText","isImportCompleted","templateParametersInfo","isShowTemplateParametersDialog","isShowImportProgressDialog","userActions","previewSampleData","botResponse","description","step","editIndex","isEdit","required","getExportedFileName","hour","getHours","minute","getMinutes","second","getSeconds","fileName","exportData","settingBlob","getSettingWithoutBotSetting","chatHistoryBlob","exportDB","JSZip","zip","generateAsync","zipBlob","createObjectURL","download","click","removeChild","revokeObjectURL","importData","importDataOnChangeFile","logImportProgress","size","loadAsync","chatString","settingString","fileCount","relativePath","zipEntry","zipFileString","unchangedCount","updatedCount","addedCount","errorCount","addedRecords","updatedRecords","errorRecords","chatDbObject","chatRow","d","tableName","rows","record","$types","row","compare","put","messagesRow","threadsRow","settingDbObject","$","chatallKey","storeIndexes","importItem","obj1","obj2","getElementById","scrollTop","settingDb","userSettingBlob","userSettingText","userSettingJson","allBotBrandId","str","bytes","TextEncoder","encode","Blob","onInputTemplate","edit","addEditAction","validate","valid","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGPTBotSettings","ChatGLMBotSettings","ClaudeAIBotSettings","Falcon180bBotSettings","GradioAppBotSettings","HuggingChatBotSettings","LMSYSBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","GeminiBotSettings","OpenAssistantBotSettings","PhindBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","newBot","markRaw","onDone","isLogoInverted","menu","favorited","tags","selectedTags","notDisabledBots","shownBots","toggleFavorite","toggleMenu","filterBots","filteredIn","tagBots","tag","every","tagBot","defaultLanguage","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","x","y","isPin","defaultPrompts","act","pin","usePrompt","addEditPrompt","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmed","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","removeEventListener","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","execCommand","onBeforeMount","on","versions","checkVersion","latest","current","skip","removeListener","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","innerHTML","toggleShortcutGuide","openShortcutGuide","previewText","previewTextarea","chatRef","onChangeOpenProp","selectedBots","updatePreview","updateFavBots","send","newChatIndex","deselectAllResponses","onUpdatedSystemTheme","last","initialValue","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","isChatActionOpen","openSettingsModal","openFind","getColumnImage","columnCount","deselectAll","callAction","_paq","ver","_createBlock","_component_CommonBotSettings","$data","watcher","$options","ticks","CommonBotSettings","methods","render","_component_login_setting","LoginSetting","mounted","tokenInfo","mapMutations","_createElementBlock","_Fragment","_createVNode","_component_v_list_item","_withCtx","_component_v_alert","outlined","_createTextVNode","_toDisplayString","_ctx","_component_v_list_item_title","_component_v_list_item_subtitle","_component_v_checkbox","modelValue","autoRefresh","_cache","$event","hideDetails","label","AUTO_REFRESH_CYCLE","mapState","set","auto","items","settingState","refs","translate","rets","validateSliderInput","setting","getInputElement","valuefloat","parseFloat","inputMaxFloat","inputMinFloat","inputElement","example","_createElementVNode","$props","onClick","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","secret","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","__esModule","leafPrototypes","getProto","__proto__","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prototype","inProgress","dataWebpackPrefix","l","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","clearTimeout","doneFns","toStringTag","nmd","paths","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}